{"version":3,"sources":["app/Button.tsx","app/BaseDataGrid.tsx","app/Inputs/index.tsx","app/Paper.tsx","logic/date.ts","app/Toast.tsx","logic/utils.ts","api/document.ts","components/PDFPreview/index.tsx","features/Modals/DocumentModals.tsx","logic/levels.ts","logic/fileType.ts","features/Items/ClusterAndLevels/Cluster.tsx","features/Items/ClusterAndLevels/Level.tsx","features/Items/Forms.tsx","api/units.ts","app/FileUploader.tsx","app/QRCodeScanner.tsx","app/SearchBox.tsx","features/FieldService/Units/Forms.tsx","features/Modals/ShipmentModal.tsx","api/shipment.ts","features/FieldService/Units/Details.tsx","features/FieldService/Units/index.tsx"],"names":["MyButton","kind","props","useStyles","makeStyles","btnStyle","background","Gradients","success","warning","error","icons","add","edit","delete","classes","className","startIcon","variant","color","children","useDataGridStyles","root","backgroundColor","border","display","width","height","opacity","boxShadow","fill","BaseDataGrid","onRowSelected","rows","cols","style","flexGrow","density","components","Toolbar","GridToolbar","r","data","columns","ScrollDataGrid","MaterialFieldSelect","request","limit","getOptionLabel","getOptionValue","onChange","value","useState","options","setOptions","findValue","setFindValue","useEffect","t","find","o","then","slice","catch","e","console","log","onBlur","renderInput","params","label","placeholder","size","ObjectSelect","inputStyle","items","itemTitleField","itemValueField","keyField","select","undefined","length","map","item","i","FieldSelect","getOptionList","setItems","ArraySelect","BaseSelect","BasePaper","withStyles","theme","borderRadius","padding","IconPaper","spacing","flexDirection","justifyContent","alignItems","elevation","formatTimestampToDate","timestamp","format","Toast","content","type","toast","info","formatDate","date","dateFormat","Date","getModifiedValues","values","initialValues","modifiedValues","Object","entries","forEach","entry","key","keys","countProperty","propGetter","filter","generateQuery","queryArray","paramValue","paramName","push","join","getAllModelDocuments","model","id","get","createAModelDocument","file","description","fileName","formData","FormData","append","post","updateAModelDocument","docid","patch","deleteAModelDocument","delete_","PDFPreview","pdf","src","mutateDocuments","mutate","DocumentModal","open","onClose","itemId","onDone","docData","fileUploader","useRef","deleteDocument","a","handleSubmit","setSubmitting","Dialog","fullScreen","title","Box","m","gridTemplateColumns","gridColumnGap","path","onSubmit","handleBlur","handleChange","setFieldValue","isSubmitting","ref","current","hidden","target","files","Button","onClick","click","marginRight","margin","Link","download","href","TextField","marginBottom","fullWidth","name","multiline","disabled","flex","marginLeft","splitLevelName","split","generateLevelName","nanoid","getVisibilityState","level","all","filterName","fn","filterValue","fv","fileType","url","pop","Cluster","cluster","device","defaultValue","valid","Level","required","FormControlLabel","checked","control","Checkbox","General","errors","touched","gridRowGap","pr","Paper","gridColumnEnd","fontSize","shippingApproved","salesApproved","engineeringApproved","obsolete","nonInventoryItem","rndOnly","dontTrackQoh","dontOrderPO","buildToStock","archived","archiveDate","Boolean","no","MoreInfo","mt","version","manufacturerProductNumber","manufacturer","leadTime","qbid","Pricing","recentCost","laborCost","fifo","cost","qtyOnHand","retailPrice","resellCost","Quantity","handleManualCount","handleUpdateQuantity","qtyAvailable","qtyOnOrder","qtyAllocated","qtyRemain","Shipping","lastShippingFee","weightLb","weightOz","shippingLb","shippingOz","lastOrderedQty","DynamicFilterAndFields","selectedItem","filters","useSWR","fields","gridGap","Divider","field","LinearProgress","LastUsed","uom","lastUsedInBom","minOrder","lastCount","usedInLastQuarter","usedInLastTwoMonth","usedInLastSixty","usedInLastMonth","addImage","unitId","deleteImage","updateUnit","dueDate","getTime","getAllUnits","FileUploader","accept","multiple","htmlFor","QRCodeScanner","onScan","maxWidth","delay","onError","err","SearchBox","panel","history","useHistory","scanner","setScanner","number","setNumber","p","UnitSearchBox","unit","status","so","Status","gap","DateTimePicker","warrantyExpDate","estimatedShipDate","actualShipDate","estimatedLeadTime","actualLeadTime","Expense","itemLaborTime","itemLaborCost","bomCost","ItemId","entity","shippingAddress","contactPerson","contactPersonEmail","contactPersonPhone","unitLocation","schema","Yup","shape","EditShipModal","init","UnitId","handleDelete","validationSchema","AddShipModal","activeStep","setActiveStep","setImg","handleFileChange","URL","createObjectURL","handleFileDelete","handleNext","prevActiveStep","handleBack","Stepper","Step","StepLabel","photo","maxHeight","alt","ShippedForm","my","deliveryMethod","helperText","String","trackingNumber","carrier","shipmentNo","deliveryDate","d","toISOString","shipDate","Details","infoActiveTab","setInfoActiveTab","gridActiveTab","setGridActiveTab","addDocModal","setAddDocModal","addShipModal","setAddShipModal","editShip","setEditShip","selectedShip","setSelectedShip","warranties","unitBoms","documents","shipments","SOI","fsh","bomCols","useMemo","warCols","headerName","shipCols","fshCols","valueFormatter","row","createdAt","subject","assignee","username","ContactId","lastName","docCols","employee","SOICols","ShipmentModal","mb","textAlign","Tabs","nv","Tab","v","result","Unit","activeTab","setActiveTab","selectedUnit","setSelectedUnit","units","useSwr","textColor"],"mappings":"4NASe,SAASA,EAAT,GAAgD,IAA5BC,EAA2B,EAA3BA,KAASC,EAAkB,wBACpDC,EAAYC,YAAW,CACzBC,SAAU,CACNC,WAAYL,EAAiB,QAATA,EAAiBM,IAAUC,QAAmB,SAATP,EAAkBM,IAAUE,QAAUF,IAAUG,MAAS,aAGtHC,EAAQ,CACRC,IAAK,cAAC,IAAD,IACLC,KAAM,cAAC,IAAD,IACNC,OAAQ,cAAC,IAAD,KAGNC,EAAUZ,IAEhB,OACI,cAAC,IAAD,yBACIa,UAAWD,EAAQV,SACnBY,UAAWhB,EAAOU,EAAMV,GAAQC,EAAMe,UACtCC,QAASjB,EAAO,YAAcC,EAAMgB,QACpCC,MAAOlB,EAAO,UAAYC,EAAMiB,OAC5BjB,GALR,aAOKA,EAAMkB,c,2KC3BNC,EAAoBjB,YAAW,CACxCkB,KAAM,CACFC,gBAAiB,UACjBC,OAAQ,OAER,kCAAmC,CAC/BD,gBAAiB,UACjBJ,MAAO,QAGX,+BAAgC,CAC5BM,QAAS,OACTC,MAAO,EACPC,OAAQ,EACRC,QAAS,GAEb,kBAAmB,CACfC,UAAW,yCACXN,gBAAiB,mBAErB,0BAA2B,CACvBO,KAAM,YAYH,SAASC,EAAT,GAA6E,IAArDC,EAAoD,EAApDA,cAAeC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,KAAMP,EAAyB,EAAzBA,OACxDZ,EAAUM,IAgBhB,OAEI,aADA,CACA,OACIc,MAAO,CACHC,SAAU,EACVT,OAAQA,GAAU,KAH1B,SAMI,cAAC,IAAD,CACIU,QAAQ,UACRC,WAAY,CAAEC,QAASC,KACvBxB,UAAWD,EAAQO,KACnBU,cAAe,SAACS,GACZT,GAAiBA,EAAcS,EAAEC,OAErCC,QAAST,EACTD,KAAMA,MAOf,IAAMW,EAAiB,SAAC,GAA0D,IAAxDZ,EAAuD,EAAvDA,cAAeC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,KAC5CnB,GAD8E,EAA5BY,OACxCN,KAEhB,OAMI,aALA,CAKC,IAAD,CACIgB,QAAQ,UACRC,WAAY,CAAEC,QAASC,KACvBxB,UAAWD,EAAQO,KACnBU,cAAe,SAACS,GACZT,GAAiBA,EAAcS,EAAEC,OAErCC,QAAST,EACTD,KAAMA,M,+OCzELY,EAAsB,SAAC,GAQvB,IAPTC,EAOQ,EAPRA,QACAC,EAMQ,EANRA,MACAC,EAKQ,EALRA,eACAC,EAIQ,EAJRA,eACAC,EAGQ,EAHRA,SACAC,EAEQ,EAFRA,MACGjD,EACK,0FACsBkD,mBAAS,IAD/B,mBACDC,EADC,KACQC,EADR,OAE0BF,qBAF1B,mBAEDG,EAFC,KAEUC,EAFV,KAqBR,OAjBAC,qBAAU,WACN,IAAMC,EAAIL,EAAQM,MAAK,SAACC,GAAD,OAAOX,EAAeW,KAAOT,KACpDK,EAAaE,KACd,CAACP,EAAOE,EAASJ,IAEpBQ,qBAAU,WACNX,IACKe,MAAK,SAACnB,GAECY,EADAP,GAASA,EAAQ,EACNL,EAAKoB,MAAM,EAAGf,GAEdL,MAGlBqB,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,QAC/B,CAACjB,EAAOD,IAGP,cAAC,IAAD,CACIX,MAAOjC,EAAMiC,MACba,eAAgBA,EAChBK,QAASA,EACTH,SAAUA,EACViB,OAAQjE,EAAMiE,OACdhB,MAAOI,EACPa,YAAa,SAACC,GAAD,OACT,cAAC,IAAD,2BACQA,GADR,IAEIC,MAAK,OAAEpE,QAAF,IAAEA,OAAF,EAAEA,EAAOoE,MACd5D,MAAOR,EAAMQ,MACb6D,YAAarE,EAAMqE,YACnBC,KAAK,QACLtD,QAAQ,kBAcfuD,EAAe,SAAC,GAAmF,EAAjFC,WAAkF,IAAtEC,EAAqE,EAArEA,MAAOC,EAA8D,EAA9DA,eAAgBC,EAA8C,EAA9CA,eAAgBC,EAA8B,EAA9BA,SAAa5E,EAAiB,mFAC5G,OACI,eAAC,IAAD,2BAAeA,GAAf,IAAsBgB,QAAQ,WAAWsD,KAAK,QAAQO,QAAM,EAA5D,UACI,cAAC,IAAD,CAAU5B,WAAO6B,EAAjB,kBACCL,GACGA,EAAMM,QAAU,GAChBN,EAAMO,KAAI,SAACC,EAAWC,GAAZ,OACN,cAAC,IAAD,CAA8CjC,MAAOgC,EAAKN,GAA1D,SACKM,EAAKP,IADKE,EAAWK,EAAKL,GAAYM,WAgBlDC,EAAc,SAAC,GAQR,EAPhBP,SAOiB,IANjBhC,EAMgB,EANhBA,QACA+B,EAKgB,EALhBA,eACAD,EAIgB,EAJhBA,eACA7B,EAGgB,EAHhBA,MACAuC,EAEgB,EAFhBA,cACGpF,EACa,kGACUkD,mBAAS,IADnB,mBACTuB,EADS,KACFY,EADE,KAiBhB,OAdA9B,qBAAU,WACNX,IACKe,MAAK,SAACnB,GACH,GAAIK,GAASA,EAAQ,EAAG,CACpB,IAAIM,EAAUiC,EAAgBA,EAAc5C,GAAQA,EAAKoB,MAAM,EAAGf,GAClEwC,EAASlC,OACN,CACH,IAAIA,EAAUiC,EAAgBA,EAAc5C,GAAQA,EACpD6C,EAASlC,OAGhBU,OAAM,SAACC,GAAD,OAAOC,QAAQC,IAAIF,QAC/B,CAACsB,EAAevC,EAAOD,IAEnB,cAAC2B,EAAD,2BAAkBvE,GAAlB,IAAyB0E,eAAgBA,EAAgBC,eAAgBA,EAAgBF,MAAOA,MAM9Fa,EAAc,SAAC,GAAuC,IAArCb,EAAoC,EAApCA,MAAUzE,EAA0B,yBAC9D,OACI,cAACuE,EAAD,aACIG,eAAe,OACfC,eAAe,OACfF,MAAOA,EAAQA,EAAMO,KAAI,SAACC,GAAD,MAAW,CAAEA,KAAMA,MAAW,IACnDjF,KAKHuF,EAAa,SAACvF,GACvB,OACI,cAAC,IAAD,2BAAeA,GAAf,IAAsBgB,QAAQ,WAAWsD,KAAK,QAAQO,QAAM,EAA5D,SACK7E,EAAMkB,c,+IChJNsE,EAAYC,aAAW,SAACC,GAAD,MAAY,CAC5CtE,KAAM,CACFuE,aAAc,GACdC,QAAS,MACTjE,UAAW,uCAJM8D,EAMrB,SAACzF,GAAD,OAAuB,cAAC,IAAD,eAAWA,OAEzB6F,EAAYJ,aAAW,SAACC,GAAD,MAAY,CAC5CtE,KAAM,CACFuE,aAAc,GACdC,QAASF,EAAMI,QAAQ,GACvBvE,QAAS,OACTwE,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZhF,MAAO,WARUwE,EAUrB,SAACzF,GAAD,OAAuB,cAAC,IAAD,2BAAWA,GAAX,IAAkBkG,UAAW,S,iCCrBxD,+CAEaC,EAAwB,SAACC,GAClC,OAAOA,EAAYC,YAAOD,EAAW,cAAgB,K,iCCHzD,8CAEe,SAASE,EAAMC,EAAiBC,GAC3C,OAAQA,GACJ,IAAK,UACDC,IAAMnG,QAAQiG,GACd,MACJ,IAAK,UACDE,IAAMlG,QAAQgG,GACd,MACJ,IAAK,QACDE,IAAMjG,MAAM+F,GACZ,MACJ,IAAK,OACDE,IAAMC,KAAKH,GACX,MACJ,QACIE,YAAMF,M,iCCjBlB,qJAEaI,EAAa,SAACC,EAAcC,GACrC,OAAOR,YAAO,IAAIS,KAAKF,GAAOC,IAGrBE,EAAoB,SAACC,EAAaC,GAC3C,IAAIC,EAAsB,GAa1B,OAXIF,GACAG,OAAOC,QAAQJ,GAAQK,SAAQ,SAACC,GAC5B,IAAIC,EAAMD,EAAM,GACZrE,EAAQqE,EAAM,GAEdrE,IAAUgE,EAAcM,KACxBL,EAAeK,GAActE,MAKK,IAAvCkE,OAAOK,KAAKN,GAAgBnC,OAAe,KAAOmC,GAGhDO,EAAgB,SAACjF,EAAaS,EAAeyE,GACtD,OAAOlF,EAAKmF,QAAO,SAAC1C,GAAD,OAAUyC,EAAWzC,KAAUhC,KAAO8B,QAOhD6C,EAAgB,SAACzD,GAC1B,IAAM0D,EAAa,GACfC,EAAkB,GAEtB,IAAK,IAAMC,KAAa5D,EAGD,QAFnB2D,EAAa3D,EAAO4D,UAEsBjD,IAAfgD,GAA2C,KAAfA,GACnDD,EAAWG,KAAX,UAAmBD,EAAnB,YAAgCD,IAIxC,OAAOD,EAAWI,KAAK,O,iCC3C3B,oJASaC,EAAuB,SAACC,EAAeC,GAChD,OAAOC,YAAI,aAAD,OAAcF,EAAd,YAAuBC,KAGxBE,EAAuB,SAACH,EAAeC,EAAYG,EAAWC,EAAqBC,GAC5F,IAAMC,EAAW,IAAIC,SAMrB,OAJAD,EAASE,OAAO,WAAYL,GAC5BG,EAASE,OAAO,cAAeJ,GAC/BC,GAAYC,EAASE,OAAO,WAAYH,GAEjCI,YAAK,aAAD,OAAcV,EAAd,YAAuBC,GAAMM,IAG/BI,EAAuB,SAACC,EAAeR,EAAWC,GAC3D,IAAME,EAAW,IAAIC,SAIrB,OAHAD,EAASE,OAAO,WAAYL,GAC5BG,EAASE,OAAO,cAAeJ,GAExBQ,YAAM,aAAD,OAAcD,GAASL,IAG1BO,EAAuB,SAACF,GACjC,OAAOG,YAAQ,aAAD,OAAcH,M,8LC9BjB,SAASI,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,IAAK3H,EAA4C,EAA5CA,OACtC,OACI,yBAAQD,MAAM,OAAOC,OAAQA,GAAkB,IAAKe,KAAM4G,EAAK5C,KAAK,kBAApE,UACI,uBAAO6C,IAAKD,EAAK5C,KAAK,oBAD1B,yF,aCiBF8C,EAAkB,SAAC9C,EAAc4B,GACnC,OAAOmB,YAAO,aAAD,OAAc/C,EAAd,YAAsB4B,KAGxB,SAASoB,EAAT,GAA2F,IAAlEC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,QAASvB,EAAkD,EAAlDA,MAAOwB,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,QACpEC,EAAeC,mBAEfC,EAAc,uCAAG,sBAAAC,EAAA,mEAEXJ,IAAWA,EAAQzB,GAFR,gCAGLa,YAAqBY,EAAQzB,IAHxB,OAIXwB,GAAUA,IACVN,EAAgBnB,EAAOwB,GACvBD,IANW,uDASf3F,QAAQC,IAAR,MATe,yDAAH,qDAadkG,EAAY,uCAAG,WAAOlD,EAAP,kBAAAiD,EAAA,yDAAsBE,EAAtB,EAAsBA,cAAtB,UAETN,IAAWA,EAAQzB,GAFV,iCAGHU,YAAqBe,EAAQzB,GAAIpB,EAAOuB,KAAMvB,EAAOwB,aAHlD,OAKToB,GAAUA,IACVN,EAAgBnB,EAAOwB,GACvBD,IAPS,yCASHpB,YAAqBH,EAAOwB,EAAe3C,EAAOuB,KAAMvB,EAAOwB,aAT5D,QAWToB,GAAUA,IACVN,EAAgBnB,EAAOwB,GACvBD,IAbS,0DAgBb3F,QAAQC,IAAR,MAhBa,yBAkBbmG,GAAc,GAlBD,6EAAH,wDAsBlB,OACI,cAACC,EAAA,EAAD,CAAQX,KAAMA,EAAMC,QAASA,EAASW,YAAU,EAACC,MAAK,UAAKT,EAAU,OAAS,MAAxB,wBAA6C1B,GAAnG,SACI,eAACoC,EAAA,EAAD,CAAK9I,OAAO,OAAO+I,EAAG,EAAGjJ,QAAQ,OAAOkJ,oBAAoB,UAAUC,cAAe,GAArF,UACI,cAACH,EAAA,EAAD,WACY,OAAPV,QAAO,IAAPA,OAAA,EAAAA,EAASc,OAAQ,cAACxB,EAAD,CAAY1H,OAAO,OAAO2H,IAAK,mCAA6BS,QAA7B,IAA6BA,OAA7B,EAA6BA,EAASc,UAE3F,cAAC,IAAD,CAAQ1D,cAAe4C,GAAqB,GAAkBe,SAAUV,EAAxE,SACK,gBAAGlD,EAAH,EAAGA,OAAQ6D,EAAX,EAAWA,WAAYC,EAAvB,EAAuBA,aAAcC,EAArC,EAAqCA,cAAeC,EAApD,EAAoDA,aAApD,OACG,cAAC,IAAD,UACI,eAACT,EAAA,EAAD,CAAKhJ,QAAQ,OAAOyE,eAAe,SAASC,WAAW,SAASF,cAAc,SAA9E,UACI,uBACIS,KAAK,OACLyE,IAAK,SAACnH,GAAD,OAAQgG,EAAaoB,QAAUpH,GACpCqH,QAAM,EACNnI,SAAU,SAACc,GAAD,OACa,OAAnBA,EAAEsH,OAAOC,OAAkBN,EAAc,OAAQjH,EAAEsH,OAAOC,MAAM,OAGxE,eAACC,EAAA,EAAD,CACIrK,MAAM,UACNgB,MAAO,CACHZ,gBAAiB,OACjBJ,MAAO,oBACPK,OAAQ,6BACRE,MAAO,QAEXR,QAAQ,YACRuK,QAAS,kCAAMzB,EAAaoB,eAAnB,aAAM,EAAsBM,SATzC,UAWI,cAAC,IAAD,CAAmCvJ,MAAO,CAAEwJ,YAAa,SAX7D,iBAeA,qBAAKxJ,MAAO,CAAEyJ,OAAQ,SAAtB,SACK1E,EAAOuB,KAEJ,oCACAsB,EACA,cAAC8B,EAAA,EAAD,CAAMC,UAAQ,EAACC,KAAMhC,EAAQc,KAA7B,oCAIA,KAIR,cAACmB,EAAA,EAAD,CACI7J,MAAO,CAAE8J,aAAc,QACvBC,WAAS,EACT/I,MAAO+D,EAAOwB,YACdyD,KAAK,cACL7H,MAAM,cACNpD,QAAQ,WACRkL,WAAS,EACTnK,KAAM,EACNiB,SAAU8H,EACV7G,OAAQ4G,IAEZ,eAACN,EAAA,EAAD,CAAKtI,MAAO,CAAEV,QAAS,OAAQC,MAAO,QAAtC,UACI,cAAC8J,EAAA,EAAD,CACI9E,KAAK,SACLzG,KAAM8J,EAAU,OAAS,MACzBsC,SAAUnB,EACV/I,MAAO,CAAEmK,KAAM,GAJnB,kBAQCvC,GACG,cAACyB,EAAA,EAAD,CACIrJ,MAAO,CAAEoK,WAAY,OACrBd,QAASvB,EACTjK,KAAK,SACLoM,SAAUnB,EAJd,sC,6JC5H3BsB,EAAiB,SAACL,GAE3B,OADgBA,EAAKM,MAHM,MAIZ,IAGNC,EAAoB,SAACP,GAC9B,MAAM,GAAN,OAAUA,GAAV,OAR2B,MAQ3B,OAAmCQ,gBAG1BC,EAAqB,SAACC,EAAe1H,GAC9C,GAAI0H,EAAMC,IACN,OAAO,EAFmD,oBAK7CD,EAAME,YALuC,IAK9D,2BAAmC,CAAC,IAAD,EAAxBC,EAAwB,sBACdH,EAAMI,aADQ,IAC/B,2BAAoC,CAAC,IAA1BC,EAAyB,QAChC,SAAI/H,EAAK6H,IAAe,QAAPE,GAAgB/H,EAAK6H,KAAQE,IAFnB,gCAL2B,iC,iCChBlE,kCAAO,IAAMC,EAAW,SAACC,GAErB,OADgBA,EAAIX,MAAM,KAAKY,Q,2XCIpB,SAASC,EAAT,GAYX,IAXAC,EAWD,EAXCA,QACAC,EAUD,EAVCA,OACAzC,EASD,EATCA,WACAC,EAQD,EARCA,aACA9D,EAOD,EAPCA,OAQA,MAAqB,mBAAjBqG,EAAQpB,MAA8BqB,EAKtC,cAAC,IAAD,CACIC,aAAcvG,EAASA,EAAOqG,EAAQpB,MAAe,GACrDA,KAAMoB,EAAQpB,KACd7H,MAAOiJ,EAAQpB,KACfxH,MAAO4I,EAAQG,MACfvK,MAAO+D,EAASA,EAAOqG,EAAQpB,MAAe,GAC9CjJ,SAAU8H,EACV7G,OAAQ4G,IAXL,K,aCVA,SAAS4C,EAAT,GAYX,IAXAd,EAWD,EAXCA,MACA9B,EAUD,EAVCA,WACAC,EASD,EATCA,aACA9D,EAQD,EARCA,OACAsG,EAOD,EAPCA,OAUA,OAFgBZ,YAAmBC,EAAO3F,KAMd,mBAAxB2F,EAAME,WAAW,IAA4BS,GAI9B,WAAfX,EAAMnG,MAAoC,WAAfmG,EAAMnG,KAE7B,cAACsF,EAAA,EAAD,CACI4B,SAAUf,EAAMe,SAChBzB,KAAMU,EAAMV,KACZ7H,MAAOkI,YAAeK,EAAMV,MAC5BjJ,SAAU8H,EACV7G,OAAQ4G,EACR5H,MAAO+D,EAAO2F,EAAMV,QAGN,SAAfU,EAAMnG,KAET,cAAC,IAAD,CACIkH,SAAUf,EAAMe,SAChBzB,KAAMU,EAAMV,KACZ7H,MAAOkI,YAAeK,EAAMV,MAC5BxH,MAAOkI,EAAMa,MACbxK,SAAU8H,EACV7G,OAAQ4G,EACR5H,MAAO+D,EAAO2F,EAAMV,QAGN,YAAfU,EAAMnG,KAET,cAACmH,EAAA,EAAD,CACIC,QAAS5G,EAAO2F,EAAMV,MACtB4B,QAAS,cAACC,EAAA,EAAD,CAAUJ,SAAUf,EAAMe,WACnCzB,KAAMU,EAAMV,KACZ7H,MAAOkI,YAAeK,EAAMV,MAC5BjJ,SAAU8H,EACV7G,OAAQ4G,IAMhB,cAACiB,EAAA,EAAD,CACI4B,SAAUf,EAAMe,SAChBzB,KAAMU,EAAMV,KACZ7H,MAAOkI,YAAeK,EAAMV,MAC5BjJ,SAAU8H,EACV7G,OAAQ4G,EACR5H,MAAO+D,EAAO2F,EAAMV,QAlDjB,KCIR,IAAM8B,EAAU,SAAC,GASX,EART/C,aAQU,IAPVhE,EAOS,EAPTA,OACAgH,EAMS,EANTA,OACAlD,EAKS,EALTA,aACAD,EAIS,EAJTA,WACAoD,EAGS,EAHTA,QAGS,EAFTlD,cAES,EADTuC,OAEA,OACI,mCACI,eAAC/C,EAAA,EAAD,CAAKhJ,QAAQ,OAAOkJ,oBAAoB,kBAAkByD,WAAY,GAAIxD,cAAe,GAAIyD,GAAI,EAAjG,UACI,cAACC,EAAA,EAAD,CACInM,MAAO,CACHyJ,OAAQ,UACR9F,QAAS,gBACTvE,gBAAiB,OACjBgN,cAAe,UALvB,SAQI,eAAC9D,EAAA,EAAD,CAAKhJ,QAAQ,OAAOkJ,oBAAoB,cAAcyD,WAAY,GAAIxD,cAAe,GAAIyD,GAAI,EAA7F,UACI,cAACR,EAAA,EAAD,CACI1L,MAAO,CAAEqM,SAAU,UACnBV,QAAS5G,EAAOuH,iBAChBnK,MAAM,YACN6H,KAAK,mBACLjJ,SAAU8H,EACV+C,QAAS,cAACC,EAAA,EAAD,MAEb,cAACH,EAAA,EAAD,CACI1L,MAAO,CAAEqM,SAAU,UACnBV,QAAS5G,EAAOwH,cAChBpK,MAAM,YACN6H,KAAK,gBACLjJ,SAAU8H,EACV+C,QAAS,cAACC,EAAA,EAAD,MAEb,cAACH,EAAA,EAAD,CACI1L,MAAO,CAAEqM,SAAU,UACnBV,QAAS5G,EAAOyH,oBAChBrK,MAAM,UACN6H,KAAK,sBACLjJ,SAAU8H,EACV+C,QAAS,cAACC,EAAA,EAAD,MAEb,cAACH,EAAA,EAAD,CACI1L,MAAO,CAAEqM,SAAU,UACnBV,QAAS5G,EAAO0H,SAChBtK,MAAM,WACN6H,KAAK,WACLjJ,SAAU8H,EACV+C,QAAS,cAACC,EAAA,EAAD,MAGb,cAACH,EAAA,EAAD,CACI1L,MAAO,CAAEqM,SAAU,UACnBV,QAAS5G,EAAO2H,iBAChBvK,MAAM,qBACN6H,KAAK,mBACLjJ,SAAU8H,EACV+C,QAAS,cAACC,EAAA,EAAD,MAEb,cAACH,EAAA,EAAD,CACI1L,MAAO,CAAEqM,SAAU,UACnBV,QAAS5G,EAAO4H,QAChBxK,MAAM,MACN6H,KAAK,UACLjJ,SAAU8H,EACV+C,QAAS,cAACC,EAAA,EAAD,MAEb,cAACH,EAAA,EAAD,CACI1L,MAAO,CAAEqM,SAAU,UACnBV,QAAS5G,EAAO6H,aAChBzK,MAAM,mBACN6H,KAAK,eACLjJ,SAAU8H,EACV+C,QAAS,cAACC,EAAA,EAAD,MAEb,cAACH,EAAA,EAAD,CACI1L,MAAO,CAAEqM,SAAU,UACnBV,QAAS5G,EAAO8H,YAChB1K,MAAM,sBACN6H,KAAK,cACLjJ,SAAU8H,EACV+C,QAAS,cAACC,EAAA,EAAD,MAGb,cAACH,EAAA,EAAD,CACI1L,MAAO,CAAEqM,SAAU,UACnBV,QAAS5G,EAAO+H,aAChB3K,MAAM,iBACN6H,KAAK,eACLjJ,SAAU8H,EACV+C,QAAS,cAACC,EAAA,EAAD,MAEb,cAACH,EAAA,EAAD,CACI1L,MAAO,CAAEqM,SAAU,UACnBV,QAAS5G,EAAOgI,SAChB5K,MAAM,UACN6H,KAAK,WACLjJ,SAAU8H,EACV+C,QAAS,cAACC,EAAA,EAAD,MAEZ9G,EAAOgI,UACJ,cAAClD,EAAA,EAAD,CACI1H,MAAM,eACNnB,MAAO+D,EAAOiI,YACdhD,KAAK,cACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAOiB,aAAehB,EAAQgB,aAC7C5K,YAAY,cACZ8H,UAAQ,EACRlK,MAAO,CAAEoM,cAAe,SAAUtC,aAAc,WAKhE,cAACD,EAAA,EAAD,CACI7J,MAAO,CAAEoM,cAAe,UACxBjK,MAAM,KACNnB,MAAO+D,EAAOmI,GACdlD,KAAK,KACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAOmB,IAAMlB,EAAQkB,IACpC9K,YAAY,OAEhB,cAACyH,EAAA,EAAD,CACI7J,MAAO,CAAEoM,cAAe,UACxBjK,MAAM,YACNC,YAAY,YACZ4H,KAAK,OACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAO/B,MAAQgC,EAAQhC,MACtChJ,MAAO+D,EAAOiF,OAElB,cAACH,EAAA,EAAD,CACII,WAAS,EACTjK,MAAO,CAAEoM,cAAe,UACxBtM,KAAM,EACNsC,YAAY,cACZD,MAAM,cACN6H,KAAK,cACLjJ,SAAU8H,EACV7G,OAAQ4G,EACR5H,MAAO+D,EAAOwB,oBAOrB4G,EAAW,SAAC,GAAkE,IAAhEpI,EAA+D,EAA/DA,OAAgB8D,GAA+C,EAAvDkD,OAAuD,EAA/ClD,cAAcD,EAAiC,EAAjCA,WAAiC,EAArBoD,QACjE,OACI,eAAC1D,EAAA,EAAD,CAAK8E,GAAI,EAAG9N,QAAQ,OAAOkJ,oBAAoB,YAAYC,cAAe,GAAIwD,WAAY,GAA1F,UACI,cAACpC,EAAA,EAAD,CACI1H,MAAM,UACN6H,KAAK,UACL5H,YAAY,UACZpB,MAAO+D,EAAOsI,QACdrL,OAAQ4G,EACR7H,SAAU8H,IAWd,cAACgB,EAAA,EAAD,CACI1H,MAAM,MACN6H,KAAK,MACL5H,YAAY,MACZpB,MAAO+D,EAAOkG,IACdjJ,OAAQ4G,EACR7H,SAAU8H,EACV7I,MAAO,CAAE8J,aAAc,KAE3B,cAACD,EAAA,EAAD,CACI1H,MAAM,8BACN6H,KAAK,4BACL5H,YAAY,8BACZpB,MAAO+D,EAAOuI,0BACdtL,OAAQ4G,EACR7H,SAAU8H,EACV7I,MAAO,CAAE8J,aAAc,KAE3B,cAACD,EAAA,EAAD,CACI1H,MAAM,eACN6H,KAAK,eACL5H,YAAY,eACZpB,MAAO+D,EAAOwI,aACdvL,OAAQ4G,EACR7H,SAAU8H,EACV7I,MAAO,CAAE8J,aAAc,KAE3B,cAACD,EAAA,EAAD,CACI1H,MAAM,YACN6H,KAAK,WACL5H,YAAY,YACZpB,MAAO+D,EAAOyI,SACdxL,OAAQ4G,EACR7H,SAAU8H,EACV7I,MAAO,CAAE8J,aAAc,KAG3B,cAACD,EAAA,EAAD,CACI1H,MAAM,eACN6H,KAAK,OACL5H,YAAY,eACZpB,MAAO+D,EAAO0I,KACdzL,OAAQ4G,EACR7H,SAAU8H,EACV7I,MAAO,CAAE8J,aAAc,SAM1B4D,EAAU,SAAC,GAAkE,IAAhE3I,EAA+D,EAA/DA,OAAQgH,EAAuD,EAAvDA,OAAQlD,EAA+C,EAA/CA,aAAcD,EAAiC,EAAjCA,WAAYoD,EAAqB,EAArBA,QAChE,OACI,eAAC1D,EAAA,EAAD,CAAK8E,GAAI,EAAG9N,QAAQ,OAAOkJ,oBAAoB,YAAYC,cAAe,GAAIwD,WAAY,GAA1F,UACI,cAACpC,EAAA,EAAD,CACI1H,MAAM,cACN6H,KAAK,aACL5H,YAAY,aACZpB,MAAO+D,EAAO4I,WACd3L,OAAQ4G,EACR7H,SAAU8H,EACV7I,MAAO,CAAE8J,aAAc,KAE3B,cAACD,EAAA,EAAD,CACI1H,MAAM,aACN6H,KAAK,YACL5H,YAAY,aACZpB,MAAO+D,EAAO6I,UACd5L,OAAQ4G,EACR7H,SAAU8H,EACV7I,MAAO,CAAE8J,aAAc,KAE3B,cAACD,EAAA,EAAD,CACI1H,MAAM,aACN6H,KAAK,OACL5H,YAAY,aACZpB,MAAO+D,EAAO8I,KACd7L,OAAQ4G,EACR7H,SAAU8H,EACV7I,MAAO,CAAE8J,aAAc,KAE3B,cAACD,EAAA,EAAD,CACI1H,MAAM,YACN6H,KAAK,SACL5H,YAAY,YACZpB,MAAO+D,EAAO+I,KAAO/I,EAAOgJ,UAC5B/L,OAAQ4G,EACR7H,SAAU8H,EACV7I,MAAO,CAAE8J,aAAc,GACvBI,UAAQ,IAEZ,cAACL,EAAA,EAAD,CACI1H,MAAM,eACN6H,KAAK,cACL5H,YAAY,eACZpB,MAAO+D,EAAOiJ,YACdhM,OAAQ4G,EACR7H,SAAU8H,EACV7I,MAAO,CAAE8J,aAAc,KAE3B,cAACD,EAAA,EAAD,CACI1H,MAAM,cACNnB,MAAO+D,EAAOkJ,WACdjE,KAAK,aACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAOkC,YAAcjC,EAAQiC,kBAM/CC,EAAW,SAAC,GAAwE,EAAtExG,OAAuE,IAA/DyG,EAA8D,EAA9DA,kBAAmBpJ,EAA2C,EAA3CA,OAAQqJ,EAAmC,EAAnCA,qBAO1D,OACI,eAAC9F,EAAA,EAAD,CAAK8E,GAAI,EAAG9N,QAAQ,OAAOkJ,oBAAoB,UAAUyD,WAAY,GAAIxD,cAAe,GAAxF,UACI,cAACoB,EAAA,EAAD,CACI1H,MAAM,mBACNC,YAAY,mBACZ4H,KAAK,YACLhJ,MAAO+D,EAAOgJ,UACd7D,UAAQ,IAEZ,cAACL,EAAA,EAAD,CACI1H,MAAM,oBACNC,YAAY,oBACZ4H,KAAK,eACLhJ,MAAO+D,EAAOsJ,aACdnE,UAAQ,IAEZ,cAACL,EAAA,EAAD,CACI1H,MAAM,oBACNC,YAAY,oBACZ4H,KAAK,aACLhJ,MAAO+D,EAAOuJ,WACdpE,UAAQ,IAEZ,cAACL,EAAA,EAAD,CACI1H,MAAM,qBACNC,YAAY,qBACZ4H,KAAK,eACLhJ,MAAO+D,EAAOwJ,aACdrE,UAAQ,IAEZ,cAACL,EAAA,EAAD,CACI1H,MAAM,kBACNC,YAAY,kBACZ4H,KAAK,YACLhJ,MAAO+D,EAAOyJ,UACdxO,MAAO,CAAEoM,cAAe,UACxBlC,UAAQ,IAGXkE,GACG,cAAC/E,EAAA,EAAD,CAAQvL,KAAK,OAAOwL,QAAS8E,EAA7B,6BAIHD,GACG,cAAC9E,EAAA,EAAD,CAAQvL,KAAK,MAAMwL,QAAS6E,EAA5B,qCAQHM,EAAW,SAAC,GAAkE,IAAhE1J,EAA+D,EAA/DA,OAAQgH,EAAuD,EAAvDA,OAAQlD,EAA+C,EAA/CA,aAAcD,EAAiC,EAAjCA,WAAYoD,EAAqB,EAArBA,QACjE,OACI,eAAC1D,EAAA,EAAD,CAAKhJ,QAAQ,OAAOkJ,oBAAoB,UAAUC,cAAe,GAAIwD,WAAY,GAAImB,GAAI,EAAzF,UACI,cAACvD,EAAA,EAAD,CACI7J,MAAO,CAAEoM,cAAe,UACxBjK,MAAM,oBACN6H,KAAK,kBACL5H,YAAY,oBACZpB,MAAO+D,EAAO2J,gBACd1M,OAAQ4G,EACR7H,SAAU8H,IAEd,cAACgB,EAAA,EAAD,CACI1H,MAAM,YACN6H,KAAK,WACL5H,YAAY,WACZpB,MAAO+D,EAAO4J,SACd3M,OAAQ4G,EACR7H,SAAU8H,IAEd,cAACgB,EAAA,EAAD,CACI1H,MAAM,YACN6H,KAAK,WACL5H,YAAY,WACZpB,MAAO+D,EAAO6J,SACd5M,OAAQ4G,EACR7H,SAAU8H,IAEd,cAACgB,EAAA,EAAD,CACI1H,MAAM,cACN6H,KAAK,aACL5H,YAAY,aACZpB,MAAO+D,EAAO8J,WACd7M,OAAQ4G,EACR7H,SAAU8H,IAEd,cAACgB,EAAA,EAAD,CACI1H,MAAM,cACN6H,KAAK,aACL5H,YAAY,aACZpB,MAAO+D,EAAO+J,WACd9M,OAAQ4G,EACR7H,SAAU8H,IAEd,cAACgB,EAAA,EAAD,CACI7J,MAAO,CAAEoM,cAAe,UACxBrC,WAAS,EACT5H,MAAM,OACNC,YAAY,OACZ4H,KAAK,OACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAO1J,MAAQ2J,EAAQ3J,MACtCrB,MAAO+D,EAAO1C,OAElB,cAACwH,EAAA,EAAD,CACI7J,MAAO,CAAEoM,cAAe,UACxBrC,WAAS,EACT5H,MAAM,mBACNC,YAAY,mBACZ4H,KAAK,iBACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAOgD,gBAAkB/C,EAAQ+C,gBAChD/N,MAAO+D,EAAOgK,qBAMjBC,EAAyB,SAAC,GAA0E,IAAD,IAAvEjK,cAAuE,MAA9D,GAA8D,EAA1D8D,EAA0D,EAA1DA,aAAcD,EAA4C,EAA5CA,WAA0ByC,GAAkB,EAAhC4D,aAAgC,EAAlB5D,QAC5E6D,EAAYC,YAAkB,WAApC5O,KACM6O,EAAWD,YAAiB,UAAlC5O,KAER,OAAK2O,EAKD,eAAC5G,EAAA,EAAD,CAAK8E,GAAI,EAAG9N,QAAQ,OAAOkJ,oBAAoB,UAAU6G,QAAS,GAAlE,iBACKH,QADL,IACKA,OADL,EACKA,EAASnM,KAAI,SAAC2C,GAAD,OACV,cAACyF,EAAD,CACIC,QAAS1F,EACT2F,OAAQA,EACRzC,WAAYA,EACZC,aAAcA,EACd9D,OAAQA,OAGhB,cAACuK,EAAA,EAAD,CAAStP,MAAO,CAAEoM,cAAe,YAVrC,OAWKgD,QAXL,IAWKA,OAXL,EAWKA,EAAQrM,KAAI,SAACwM,GAAD,OACT,cAAC/D,EAAD,CACId,MAAO6E,EACPlE,OAAQA,EACRzC,WAAYA,EACZC,aAAcA,EACd9D,OAAQA,UArBb,cAACyK,EAAA,EAAD,KA4BFC,EAAW,SAAC,GAAkE,IAAhE1K,EAA+D,EAA/DA,OAAQgH,EAAuD,EAAvDA,OAAQlD,EAA+C,EAA/CA,aAAcD,EAAiC,EAAjCA,WAAYoD,EAAqB,EAArBA,QACjE,OACI,eAAC1D,EAAA,EAAD,CAAK8E,GAAI,EAAG9N,QAAQ,OAAOkJ,oBAAoB,UAAUC,cAAe,GAAIwD,WAAY,GAAxF,UACI,cAACpC,EAAA,EAAD,CACIG,KAAK,MACL7H,MAAM,kBACNC,YAAY,kBACZpB,MAAO+D,EAAO2K,IACd1N,OAAQ4G,EACR7H,SAAU8H,IAEd,cAACgB,EAAA,EAAD,CACIG,KAAK,gBACL5H,YAAY,mBACZD,MAAM,mBACNnB,MAAO+D,EAAO4K,cACd3N,OAAQ4G,EACR7H,SAAU8H,IAGd,cAACgB,EAAA,EAAD,CACIG,KAAK,WACL7H,MAAM,sCACNC,YAAY,sCACZpB,MAAO+D,EAAO6K,SACd5N,OAAQ4G,EACR7H,SAAU8H,EACV7I,MAAO,CAAEoM,cAAe,YAE5B,cAACvC,EAAA,EAAD,CACIG,KAAK,YACL7H,MAAM,aACNC,YAAY,aACZpB,MAAO+D,EAAO8K,UACd7N,OAAQ4G,EACR7H,SAAU8H,IAEd,cAACgB,EAAA,EAAD,CACI1H,MAAM,uBACNnB,MAAO+D,EAAO+K,kBACd9F,KAAK,oBACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAO+D,mBAAqB9D,EAAQ8D,qBAEvD,cAACjG,EAAA,EAAD,CACI1H,MAAM,uBACNnB,MAAO+D,EAAOgL,mBACd/F,KAAK,qBACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAOgE,oBAAsB/D,EAAQgE,mBAExD,cAACnG,EAAA,EAAD,CACI1H,MAAM,uBACNnB,MAAO+D,EAAOkL,gBACdjG,KAAK,kBACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAOkE,iBAAmBjE,EAAQiE,wB,iCCzhBjE,oJAyCaC,EAAW,SAACC,EAAgB7J,GACrC,IAAM/F,EAAO,IAAImG,SAEjB,OADAnG,EAAKoG,OAAO,QAASL,GACdM,YAAK,SAAD,OAAUuJ,EAAV,UAA0B5P,IAE5B6P,EAAc,SAACD,EAAgB5P,GACxC,OAAO0G,YAAQ,SAAD,OAAUkJ,EAAV,UAA0B,KAAM5P,IAGrC8P,EAAa,SAAClK,EAAY5F,GACnC,GAAIA,EAAK+P,QAAS,CACd,IAAI3L,EAAO,IAAIE,KAAKtE,EAAK+P,SACzB/P,EAAK+P,QAAU3L,EAAK4L,UAExB,OAAOxJ,YAAM,SAAD,OAAUZ,GAAM5F,IAGnBiQ,EAAc,WACvB,OAAOpK,YAAI,W,qEClBAqK,IApCM,SAAC,GAQf,IAPH1P,EAOE,EAPFA,SACA2P,EAME,EANFA,OACAC,EAKE,EALFA,SAMM9I,EAAeC,iBAAgC,MAErD,OACI,gCACI,uBACI3B,GAAG,oBACH+C,QAAM,EACN3E,KAAK,OACLyE,IAAK,SAACnH,GAAD,OAAQgG,EAAaoB,QAAUpH,GACpCd,SAAUA,EACV4P,SAAUA,EACVD,OAAQA,IAEZ,uBAAOE,QAAQ,oBAAf,SACI,cAAC,IAAD,CACI5R,MAAM,UACND,QAAQ,YACRuK,QAAS,kCAAMzB,EAAaoB,eAAnB,aAAM,EAAsBM,SACrCzK,UAAW,cAAC,IAAD,IAJf,2B,+MCrBD,SAAS+R,EAAT,GAQX,IAPArJ,EAOD,EAPCA,KACAC,EAMD,EANCA,QACAqJ,EAKD,EALCA,OAKD,EAC6B7P,mBAAwB,MADrD,6BAWC,OACI,cAACkH,EAAA,EAAD,CAAQE,MAAM,kBAAkBb,KAAMA,EAAMC,QAASA,EAASsJ,SAAS,KAAKhH,WAAS,EAArF,SAEI,cAACzB,EAAA,EAAD,CAAKC,EAAG,EAAGjJ,QAAQ,OAAnB,SACI,cAAC,IAAD,CAAU0R,MAAO,IAAKC,QAbd,SAACC,GACjBpP,QAAQC,IAAImP,IAYwCJ,OATrC,SAACvQ,GAEhBA,GAAQuQ,EAAOvQ,IAOyDP,MAAO,CAAET,MAAO,cClBjF,SAAS4R,EAAT,GAAgF,IAA3DC,EAA0D,EAA1DA,MAC1BC,EAAUC,cAD0E,EAG5DrQ,oBAAS,GAHmD,mBAGnFsQ,EAHmF,KAG1EC,EAH0E,OAI9DvQ,qBAJ8D,mBAInFwQ,EAJmF,KAI3EC,EAJ2E,KAM5E1O,EAASmM,YAAcsC,EAAM,mBAAeA,GAAW,MAA7DlR,KAER,OACI,eAAC4L,EAAA,EAAD,CAAOnM,MAAO,CAAE8J,aAAc,IAA9B,UACI,cAAC+G,EAAD,CACIrJ,KAAM+J,EACN9J,QAAS,kBAAM+J,GAAW,IAC1BV,OAAQ,SAACvQ,GACLA,GAAQmR,EAAUnR,GAClBiR,GAAW,MAInB,eAAClJ,EAAA,EAAD,CAAKqJ,EAAG,EAAGrS,QAAQ,OAAOkJ,oBAAoB,kBAAkB6G,QAAS,GAAzE,UACI,cAACxF,EAAA,EAAD,CAAWzH,YAAY,SAASpB,MAAOyQ,EAAQ1Q,SAAU,SAACc,GAAD,OAAO6P,EAAU7P,EAAEsH,OAAOnI,UACnF,cAAC6I,EAAA,EAAD,CAAWK,UAAWlH,EAAMZ,YAAY,YAAYpB,OAAW,OAAJgC,QAAI,IAAJA,OAAA,EAAAA,EAAMgH,OAAQ,KACzE,cAACX,EAAA,EAAD,CAAQvL,KAAK,OAAOwL,QAAS,kBAAMkI,GAAW,IAA9C,qBAGA,cAACnI,EAAA,EAAD,CACIa,UAAWuH,EACX1S,QAAQ,YACRC,MAAM,UACNsK,QAAS,kBAAMtG,GAAQqO,EAAQtL,KAAR,iBAAuBqL,EAAvB,YAAgCpO,EAAKmD,MAJhE,4BAaT,IAAMyL,EAAgB,WACzB,IAAMP,EAAUC,cADe,EAGDrQ,oBAAS,GAHR,mBAGxBsQ,EAHwB,KAGfC,EAHe,OAIHvQ,qBAJG,mBAIxBwQ,EAJwB,KAIhBC,EAJgB,KAMjBG,EAAS1C,YAAcsC,EAAM,gBAAYA,GAAW,MAA1DlR,KAER,OACI,eAAC4L,EAAA,EAAD,CAAOnM,MAAO,CAAE8J,aAAc,IAA9B,UACI,cAAC+G,EAAD,CACIrJ,KAAM+J,EACN9J,QAAS,kBAAM+J,GAAW,IAC1BV,OAAQ,SAACvQ,GACLA,GAAQmR,EAAUnR,GAClBiR,GAAW,MAInB,eAAClJ,EAAA,EAAD,CAAKqJ,EAAG,EAAGrS,QAAQ,OAAOkJ,oBAAoB,kBAAkB6G,QAAS,GAAzE,UACI,cAACxF,EAAA,EAAD,CAAWzH,YAAY,SAASpB,MAAOyQ,EAAQ1Q,SAAU,SAACc,GAAD,OAAO6P,EAAU7P,EAAEsH,OAAOnI,UACnF,cAAC6I,EAAA,EAAD,CAAWK,UAAW2H,EAAMzP,YAAY,YAAYpB,OAAW,OAAJ6Q,QAAI,IAAJA,OAAA,EAAAA,EAAM7O,KAAKgH,OAAQ,KAC9E,cAACX,EAAA,EAAD,CAAQvL,KAAK,OAAOwL,QAAS,kBAAMkI,GAAW,IAA9C,qBAGA,cAACnI,EAAA,EAAD,CACIa,UAAWuH,EACX1S,QAAQ,YACRC,MAAM,UACNsK,QAAS,kBAAMuI,GAAQR,EAAQtL,KAAR,4BAAkC8L,EAAK1L,MAJlE,8B,+JCzDH2F,EAAU,SAAC,GASX,EART/C,aAQU,IAPVhE,EAOS,EAPTA,OACAgH,EAMS,EANTA,OACAlD,EAKS,EALTA,aACAD,EAIS,EAJTA,WACAoD,EAGS,EAHTA,QAGS,EAFTlD,cAES,EADTuC,OAEA,OACI,mCACI,eAAC/C,EAAA,EAAD,CAAKhJ,QAAQ,OAAOkJ,oBAAoB,UAAUyD,WAAY,GAAIxD,cAAe,GAAIyD,GAAI,EAAzF,UAEI,cAACrC,EAAA,EAAD,CACI1H,MAAM,YACNC,YAAY,YACZ4H,KAAK,OACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAO/B,MAAQgC,EAAQhC,MACtChJ,MAAO+D,EAAO/B,KAAKgH,KACnBhK,MAAO,CAAEoM,cAAe,UACxBlC,UAAQ,IAEZ,cAACL,EAAA,EAAD,CACII,WAAS,EACTjK,MAAO,CAAEoM,cAAe,UACxBtM,KAAM,EACNsC,YAAY,mBACZD,MAAM,mBACN6H,KAAK,cACLjJ,SAAU8H,EACV7G,OAAQ4G,EACR5H,MAAO+D,EAAO/B,KAAKuD,YACnB2D,UAAQ,IAEZ,cAACL,EAAA,EAAD,CACI1H,MAAM,gBACNnB,MAAO+D,EAAO/B,KAAKkK,GACnBlD,KAAK,KACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAOmB,IAAMlB,EAAQkB,IACpC9K,YAAY,gBACZpC,MAAO,CAAEoM,cAAe,UACxBlC,UAAQ,IAGZ,cAAC,IAAD,CACIlK,MAAO,CAAEoM,cAAe,UACxBrC,WAAS,EACT5H,MAAM,SACNK,MAAO,CACH,MACA,gBACA,sBACA,qBACA,gBACA,gBACA,aACA,cACA,WACA,cAEJwH,KAAK,SACLhJ,MAAO+D,EAAO+M,OACd/Q,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAO+F,UAE1B,cAACjI,EAAA,EAAD,CACI1H,MAAM,KACNC,YAAY,KACZ4H,KAAK,SACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAO0F,QAAUzF,EAAQyF,QACxCzQ,MAAO+D,EAAO0M,OACdvH,UAAQ,IAEZ,cAACL,EAAA,EAAD,CACI1H,MAAM,KACNnB,MAAO+D,EAAOgN,GAAGN,OACjBzH,KAAK,KACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAOgG,IAAM/F,EAAQ+F,IACpC3P,YAAY,KACZ8H,UAAQ,UAOf8H,EAAS,SAAC,GASV,EARTjJ,aAQU,IAAD,MAPThE,EAOS,EAPTA,OAGA6D,GAIS,EANTmD,OAMS,EALTlD,aAKS,EAJTD,YAEAE,GAES,EAHTkD,QAGS,EAFTlD,eAES,EADTuC,OAEA,OACI,mCACI,eAAC/C,EAAA,EAAD,CAAK8E,GAAI,EAAG9N,QAAQ,OAAOkJ,oBAAoB,UAAUxI,MAAO,CAAEiS,IAAK,IAAvE,UACI,cAACC,EAAA,EAAD,CACI7P,KAAK,QACLrB,MAAO+D,EAAOoN,gBACdnI,KAAK,kBACL7H,MAAM,oBACNpB,SAAU,SAAC4D,GAAD,OAAUmE,EAAc,kBAAmBnE,IACrD3C,OAAQ4G,IAEZ,cAACiB,EAAA,EAAD,CACIxH,KAAK,QACLrB,MAAOkD,YAAqB,OAACa,QAAD,IAACA,GAAD,UAACA,EAAQgN,UAAT,aAAC,EAAYpN,MACzCqF,KAAK,eACL7H,MAAM,gBACNH,OAAQ4G,EACRsB,UAAQ,IAEZ,cAACL,EAAA,EAAD,CACIxH,KAAK,QACLrB,MAAOkD,YAAqB,OAACa,QAAD,IAACA,GAAD,UAACA,EAAQgN,UAAT,aAAC,EAAYK,mBACzCpI,KAAK,oBACL7H,MAAM,sBACNH,OAAQ4G,EACRsB,UAAQ,IAGZ,cAACL,EAAA,EAAD,CACIxH,KAAK,QACLrB,MAAOkD,YAAqB,OAACa,QAAD,IAACA,GAAD,UAACA,EAAQgN,UAAT,aAAC,EAAYM,gBACzCrI,KAAK,iBACL7H,MAAM,mBACNH,OAAQ4G,EACRsB,UAAQ,IAEZ,cAACgI,EAAA,EAAD,CACI7P,KAAK,QACLrB,MAAO+D,EAAOuN,kBACdtI,KAAK,oBACL7H,MAAM,sBACNpB,SAAU,SAAC4D,GAAD,OAAUmE,EAAc,oBAAqBnE,IACvD3C,OAAQ4G,IAEZ,cAACsJ,EAAA,EAAD,CACI7P,KAAK,QACLrB,MAAO+D,EAAOwN,eACdvI,KAAK,iBACL7H,MAAM,mBACNpB,SAAU,SAAC4D,GAAD,OAAUmE,EAAc,iBAAkBnE,IACpD3C,OAAQ4G,UAOf4J,EAAU,SAAC,GASX,EARTzJ,aAQU,IAAD,MAPThE,EAOS,EAPTA,OACAgH,EAMS,EANTA,OACAlD,EAKS,EALTA,aACAD,EAIS,EAJTA,WACAoD,EAGS,EAHTA,QAGS,EAFTlD,cAES,EADTuC,OAEA,OACI,mCACI,eAAC/C,EAAA,EAAD,CAAK8E,GAAI,EAAG9N,QAAQ,OAAOkJ,oBAAoB,UAAUxI,MAAO,CAAEiS,IAAK,IAAvE,UACI,cAACpI,EAAA,EAAD,CACI1H,MAAM,kBACNnB,MAAO+D,EAAO0N,cACdzI,KAAK,gBACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAO0G,eAAiBzG,EAAQyG,eAC/CrQ,YAAY,kBACZ8H,UAAQ,IAEZ,cAACL,EAAA,EAAD,CACI1H,MAAM,kBACNnB,MAAO+D,EAAO2N,cACd1I,KAAK,gBACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAO2G,eAAiB1G,EAAQ0G,eAC/CtQ,YAAY,kBACZ8H,UAAQ,IAEZ,cAACL,EAAA,EAAD,CACI1H,MAAM,gBACNnB,MAAO+D,EAAO4N,QACd3I,KAAK,UACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAO4G,SAAW3G,EAAQ2G,SACzCvQ,YAAY,kBAEhB,cAACyH,EAAA,EAAD,CACI1H,MAAM,kBACNnB,MAAK,UAAE+D,EAAO6N,cAAT,aAAE,EAAe9E,KACtB/M,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,SAAQ,UAAAlB,EAAO6G,cAAP,eAAe9E,QAAf,UAAuB9B,EAAQ4G,cAA/B,aAAuB,EAAgB9E,OACtD1L,YAAY,kBACZ8H,UAAQ,UAOfuE,EAAW,SAAC,GASZ,EART1F,aAQU,IAPVhE,EAOS,EAPTA,OACAgH,EAMS,EANTA,OACAlD,EAKS,EALTA,aACAD,EAIS,EAJTA,WACAoD,EAGS,EAHTA,QAGS,EAFTlD,cAES,EADTuC,OAEA,OACI,mCACI,eAAC/C,EAAA,EAAD,CAAK8E,GAAI,EAAG9N,QAAQ,OAAOkJ,oBAAoB,UAAUxI,MAAO,CAAEiS,IAAK,IAAvE,UACI,cAACpI,EAAA,EAAD,CACI1H,MAAM,SACNnB,MAAO+D,EAAO8N,OACd7I,KAAK,SACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAO8G,QAAU7G,EAAQ6G,QACxCzQ,YAAY,WAEhB,cAACyH,EAAA,EAAD,CACI1H,MAAM,mBACNnB,MAAO+D,EAAO+N,gBACd9I,KAAK,kBACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAO+G,iBAAmB9G,EAAQ8G,iBACjD1Q,YAAY,qBAEhB,cAACyH,EAAA,EAAD,CACI1H,MAAM,iBACNnB,MAAO+D,EAAOgO,cACd/I,KAAK,gBACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAOgH,eAAiB/G,EAAQ+G,eAC/C3Q,YAAY,mBAEhB,cAACyH,EAAA,EAAD,CACI1H,MAAM,uBACNnB,MAAO+D,EAAOiO,mBACdhJ,KAAK,qBACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAOiH,oBAAsBhH,EAAQgH,oBACpD5Q,YAAY,yBAEhB,cAACyH,EAAA,EAAD,CACI1H,MAAM,8BACNnB,MAAO+D,EAAOkO,mBACdjJ,KAAK,qBACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAOkH,oBAAsBjH,EAAQiH,oBACpD7Q,YAAY,gCAEhB,cAACyH,EAAA,EAAD,CACI1H,MAAM,gBACNnB,MAAO+D,EAAOmO,aACdlJ,KAAK,eACLjJ,SAAU8H,EACV7G,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAOmH,cAAgBlH,EAAQkH,cAC9C9Q,YAAY,wB,4IC/R1B+Q,EAASC,MAAaC,MAAM,IAqJrBC,EAAgB,SAAC,GAUvB,IATH9L,EASE,EATFA,KACAC,EAQE,EARFA,QACA0I,EAOE,EAPFA,OACAoD,EAME,EANFA,KAOMtL,EAAY,uCAAG,WAAOlD,EAAamD,GAApB,SAAAF,EAAA,+ECpJM7B,EDsJEoN,EAAKpN,GCtJK5F,EDsJX,YAAC,eAAcwE,GAAf,IAAuByO,OAAQrD,ICrJpDpJ,YAAM,aAAD,OAAcZ,GAAM5F,GDmJX,OAGb+G,YAAO,oBAAD,OAAqB6I,IAC3B1I,IAJa,gDAMb3F,QAAQC,IAAR,MANa,yBAQbmG,GAAc,GARD,+CCpJK,IAAC/B,EAAY5F,IDoJlB,0BAAH,wDAYZkT,EAAY,uCAAG,sBAAAzL,EAAA,+EC5JM7B,ED8JEoN,EAAKpN,GC7J3Bc,YAAQ,aAAD,OAAcd,ID2JP,OAGbmB,YAAO,oBAAD,OAAqB6I,IAC3B1I,IAJa,gDAMb3F,QAAQC,IAAR,MANa,kCC5JK,IAACoE,ID4JN,oBAAH,qDAUlB,OACI,cAACgC,EAAA,EAAD,CAAQX,KAAMA,EAAMC,QAASA,EAASsC,WAAS,EAACgH,SAAS,KAAK1I,MAAM,gBAApE,SACI,cAAC,IAAD,CAAQrD,cAAeuO,EAAmB5K,SAAUV,EAAcyL,iBAAkBP,EAApF,SACK,gBAAGpO,EAAH,EAAGA,OAAQgH,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,QAASnD,EAA5B,EAA4BA,aAAcD,EAA1C,EAA0CA,WAAYE,EAAtD,EAAsDA,cAAtD,EAAqEZ,cAArE,OACG,eAAC,IAAD,WACI,cAACI,EAAA,EAAD,CAAKqJ,EAAG,EAAG3R,MAAO,CAAE2D,QAAS,YAA7B,SACI,cAAC,EAAD,CACIoB,OAAQA,EACRiH,QAASA,EACTD,OAAQA,EACRnD,WAAYA,EACZC,aAAcA,EACdC,cAAeA,MAGvB,eAACR,EAAA,EAAD,CACIhJ,QAAQ,OACR0E,WAAW,SACXD,eAAe,gBACf0F,OAAO,YACPlK,MAAM,MALV,UAOI,cAAC8J,EAAA,EAAD,CAAQ9E,KAAK,SAASzG,KAAK,OAA3B,kBAGA,cAACuL,EAAA,EAAD,CACIvL,KAAK,SACLwL,QAAS,WACLmK,KAHR,gCAgBbE,EA3NM,SAAC,GAAuF,IAArFnM,EAAoF,EAApFA,KAAMC,EAA8E,EAA9EA,QAAS0I,EAAqE,EAArEA,OAAqE,EACpElP,mBAAS,GAD2D,mBACjG2S,EADiG,KACrFC,EADqF,OAElF5S,qBAFkF,mBAE5F6S,GAF4F,WAI1FjC,EAAS1C,YAAO,SAAD,OAAUgB,IAA/B5P,KAEFwT,EAAgB,uCAAG,WAAOlS,GAAP,iBAAAmG,EAAA,0DACjBmI,EADiB,mBAEXtO,EAAEsH,OAAOC,OAASvH,EAAEsH,OAAOC,MAAM,GAFtB,wDAKb9C,EAAOzE,EAAEsH,OAAOC,MAAM,GACtB6B,EAAM+I,IAAIC,gBAAgB3N,GANb,SAOE4J,YAASC,EAAQ7J,GAPnB,gBASbwN,EAAO7I,GACP3D,YAAO,SAAD,OAAU6I,KAVH,2CAAH,sDAchB+D,EAAgB,uCAAG,WAAOjJ,GAAP,eAAAjD,EAAA,0DACjBmI,EADiB,uBAEX5P,EAAO,CAAE0K,IAAKA,GAFH,SAGEmF,YAAYD,EAAQ5P,GAHtB,eAKb+G,YAAO,SAAD,OAAU6I,IALH,2CAAH,sDAUhBgE,EAAa,WACfN,GAAc,SAACO,GAAD,OAAoBA,EAAiB,MAGjDC,EAAa,WACfR,GAAc,SAACO,GAAD,OAAoBA,EAAiB,MAEjDnM,EAAY,uCAAG,WAAOlD,EAAamD,GAApB,SAAAF,EAAA,+ECjCMzH,EDmCE,2BAAKwE,GAAN,IAAcyO,OAAQrD,IClC3CvJ,YAAK,YAAarG,GDgCJ,OAGb+G,YAAO,oBAAD,OAAqB6I,IAC3B1I,IAJa,gDAMb3F,QAAQC,IAAR,MANa,yBAQbmG,GAAc,GARD,+CCjCK,IAAC3H,IDiCN,0BAAH,wDAYlB,OACI,cAAC4H,EAAA,EAAD,CAAQX,KAAMA,EAAMC,QAASA,EAASsC,WAAS,EAACgH,SAAS,KAAK1I,MAAM,mBAApE,SACI,cAAC,IAAD,CAAQrD,cAAe,GAAW2D,SAAUV,EAAcyL,iBAAkBP,EAA5E,SACK,gBAAGpO,EAAH,EAAGA,OAAQgH,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,QAASnD,EAA5B,EAA4BA,aAAcD,EAA1C,EAA0CA,WAAYE,EAAtD,EAAsDA,cAAtD,EAAqEZ,cAArE,OACG,eAAC,IAAD,WACI,eAACoM,EAAA,EAAD,CAASV,WAAYA,EAArB,UACI,cAACW,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,oCAEJ,cAACD,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,wBAEJ,cAACD,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,yBAEJ,cAACD,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,2BAIR,eAAClM,EAAA,EAAD,CAAKqJ,EAAG,EAAG3R,MAAO,CAAE2D,QAAS,YAA7B,UACoB,IAAfiQ,GAAoB,6BACL,IAAfA,GAAoB,6BACL,IAAfA,GACG,qCACI,qBACI5T,MAAO,CACHV,QAAS,OACTC,MAAO,OACPwE,eAAgB,UAJxB,SAOI,cAAC,IAAD,CAAchD,SAAUgT,EAAkBrD,OAAO,cAErD,8BACKmB,GACGA,EAAK4C,MAAM,IACX5C,EAAK4C,MAAM1R,KAAI,SAACkI,GAAD,OACX,qCACI,qBACIjL,MAAO,CACH+Q,SAAU,OACVvR,OAAQ,OACRkV,UAAW,IACXjL,OAAQ,YAEZkL,IAAI,GACJvN,IAAG,iCAA4B6D,KAEnC,cAAC5B,EAAA,EAAD,CAAQvL,KAAK,SAASwL,QAAS,kBAAM4K,EAAiBjJ,IAAtD,+BAQR,IAAf2I,GACG,cAAC,EAAD,CACI7O,OAAQA,EACRiH,QAASA,EACTD,OAAQA,EACRnD,WAAYA,EACZC,aAAcA,EACdC,cAAeA,OAI3B,eAACR,EAAA,EAAD,CACIhJ,QAAQ,OACR0E,WAAW,SACXD,eAAe,gBACf0F,OAAO,YACPlK,MAAM,MALV,UAOI,cAAC8J,EAAA,EAAD,CAAQtK,QAAQ,YAAYmL,SAAyB,IAAf0J,EAAkBtK,QAAS+K,EAAjE,kBAGA,cAAChL,EAAA,EAAD,CAAQ9E,KAAK,SAASzG,KAAK,MAA3B,kBAGA,cAACuL,EAAA,EAAD,CACItK,QAAQ,YACRC,MAAM,UACNsK,QAAS6K,EACTjK,SAAyB,IAAf0J,EAJd,8BA2FfgB,EAAc,SAAC,GAcrB,IAbH7P,EAaE,EAbFA,OACAiH,EAYE,EAZFA,QACAD,EAWE,EAXFA,OACAnD,EAUE,EAVFA,WACAC,EASE,EATFA,aACAC,EAQE,EARFA,cASA,OACI,eAACR,EAAA,EAAD,CAAKuM,GAAI,EAAGvV,QAAQ,OAAOmJ,cAAe,GAAIwD,WAAY,GAAIzD,oBAAoB,UAAlF,UACI,cAACqB,EAAA,EAAD,CACIG,KAAK,iBACLhJ,MAAO+D,EAAO+P,eACd9S,OAAQ4G,EACR7H,SAAU8H,EACVtK,MAAO0O,QAAQlB,EAAO+I,gBACtBC,WAAY/I,EAAQ8I,gBAAkB/I,EAAO+I,gBAAkBE,OAAOjJ,EAAO+I,gBAC7E3S,MAAM,kBACNC,YAAY,oBAEhB,cAACyH,EAAA,EAAD,CACIG,KAAK,iBACLhJ,MAAO+D,EAAOkQ,eACdjT,OAAQ4G,EACR7H,SAAU8H,EACVtK,MAAO0O,QAAQlB,EAAOkJ,gBACtBF,WAAY/I,EAAQiJ,gBAAkBlJ,EAAOkJ,gBAAkBD,OAAOjJ,EAAOkJ,gBAC7E9S,MAAM,kBACNC,YAAY,oBAEhB,cAACyH,EAAA,EAAD,CACIG,KAAK,UACLhJ,MAAO+D,EAAOmQ,QACdlT,OAAQ4G,EACR7H,SAAU8H,EACVtK,MAAO0O,QAAQlB,EAAOmJ,SACtBH,WAAY/I,EAAQkJ,SAAWnJ,EAAOmJ,SAAWF,OAAOjJ,EAAOmJ,SAC/D/S,MAAM,UACNC,YAAY,YAEhB,cAACyH,EAAA,EAAD,CACIG,KAAK,aACLhJ,MAAO+D,EAAOoQ,WACdnT,OAAQ4G,EACR7H,SAAU8H,EACVtK,MAAO0O,QAAQlB,EAAOoJ,YACtBJ,WAAY/I,EAAQmJ,YAAcpJ,EAAOoJ,YAAcH,OAAOjJ,EAAOoJ,YACrEhT,MAAM,eACNC,YAAY,iBAEhB,cAAC8P,EAAA,EAAD,CACIlI,KAAK,eACLhJ,MAAO+D,EAAOqQ,cAAgB,KAC9BrU,SAAU,SAACsU,GAAD,OAAOvM,EAAc,eAAgBuM,GAAK,IAAIxQ,KAAJ,OAASwQ,QAAT,IAASA,OAAT,EAASA,EAAGC,eAAe/E,YAC/EvO,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAOqJ,cACtBL,WAAYhJ,EAAOqJ,aACnB/S,KAAK,QACLD,YAAY,gBACZD,MAAM,kBAEV,cAAC+P,EAAA,EAAD,CACIlI,KAAK,WACLhJ,MAAO+D,EAAOwQ,UAAY,KAC1BxU,SAAU,SAACsU,GAAD,OAAOvM,EAAc,WAAYuM,GAAK,IAAIxQ,KAAJ,OAASwQ,QAAT,IAASA,OAAT,EAASA,EAAGC,eAAe/E,YAC3EvO,OAAQ4G,EACRrK,MAAO0O,QAAQlB,EAAOwJ,UACtBR,WAAYhJ,EAAOwJ,SACnBlT,KAAK,QACLD,YAAY,gBACZD,MAAM,sB,kBEpShBgR,EAASC,MAAaC,MAAM,IA8SnBmC,IA5Sf,YAA6C,IAA1B3D,EAAyB,EAAzBA,KACT5J,EAAY,uCAAG,WAAO1H,GAAP,SAAAyH,EAAA,2EAET6J,QAFS,IAETA,OAFS,EAETA,EAAM1L,IAFG,gCAGHkK,YAAWwB,EAAK1L,GAAIrB,YAAkBvE,EAAMsR,IAHzC,uBAIHvK,YAAO,SAJJ,OAKTjD,YAAM,eAAgB,WALb,uDAQbvC,QAAQC,IAAR,MARa,yDAAH,sDADsB,EAaEd,mBAAS,GAbX,mBAajCwU,EAbiC,KAalBC,EAbkB,OAcEzU,mBAAS,GAdX,mBAcjC0U,EAdiC,KAclBC,EAdkB,OAeF3U,oBAAS,GAfP,mBAejC4U,EAfiC,KAepBC,EAfoB,OAgBA7U,oBAAS,GAhBT,mBAgBjC8U,EAhBiC,KAgBnBC,EAhBmB,OAiBR/U,oBAAS,GAjBD,mBAiBjCgV,EAjBiC,KAiBvBC,EAjBuB,OAkBAjV,qBAlBA,mBAkBjCkV,EAlBiC,KAkBnBC,EAlBmB,KAoB1BC,GAAelH,YAAyB,IAAlBwG,EAAA,8BAA6C9D,EAAK1L,IAAO,MAArF5F,KACM+V,GAAanH,YAAyB,IAAlBwG,EAAA,uBAAsC9D,EAAK1L,IAAO,MAA5E5F,KACMgW,GAAcpH,YAAsC,IAAlBwG,EAAA,yBAAwC9D,EAAK1L,IAAO,MAA5F5F,KACMiW,GAAcrH,YAAyB,IAAlBwG,EAAA,2BAA0C9D,EAAK1L,IAAO,MAAjF5F,KACMkW,GAAQtH,YAAyB,IAAlBwG,EAAA,qBAAoC9D,EAAKE,GAAG5L,IAAO,MAAxE5F,KACMmW,GAAQvH,YAAyB,IAAlBwG,EAAA,yBAAwC9D,EAAK1L,IAAO,MAAzE5F,KACFoW,GAAUC,mBACZ,iBAAM,CACF,CAAErH,MAAO,OAAQhQ,MAAO,IACxB,CAAEgQ,MAAO,YAAahQ,MAAO,KAC7B,CAAEgQ,MAAO,iBAAkBhQ,MAAO,KAClC,CAAEgQ,MAAO,qBAAsBpF,KAAM,GACrC,CAAEoF,MAAO,KAAMhQ,MAAO,KACtB,CAAEgQ,MAAO,MAAOhQ,MAAO,KACvB,CAAEgQ,MAAO,OAAQhQ,MAAO,QAE5B,IAGEsX,GAAUD,mBACZ,iBAAM,CACF,CAAErH,MAAO,OAAQuH,WAAY,OAAQvS,KAAM,OAAQhF,MAAO,KAC1D,CAAEgQ,MAAO,SAAUuH,WAAY,kBAAmBvX,MAAO,KACzD,CAAEgQ,MAAO,OAAQuH,WAAY,OAAQvX,MAAO,KAC5C,CAAEgQ,MAAO,cAAeuH,WAAY,OAAQ3M,KAAM,GAClD,CAAEoF,MAAO,OAAQuH,WAAY,OAAQ3M,KAAM,GAC3C,CAAEoF,MAAO,SAAUuH,WAAY,SAAUvX,MAAO,QAEpD,IAGEwX,GAAWH,mBACb,iBAAM,CACF,CAAErH,MAAO,aAAcuH,WAAY,cAAevS,KAAM,OAAQhF,MAAO,KACvE,CAAEgQ,MAAO,WAAYuH,WAAY,cAAevX,MAAO,KACvD,CAAEgQ,MAAO,aAAcuH,WAAY,cAAevX,MAAO,KACzD,CAAEgQ,MAAO,UAAWuH,WAAY,UAAW3M,KAAM,GACjD,CAAEoF,MAAO,iBAAkBuH,WAAY,kBAAmB3M,KAAM,GAChE,CAAEoF,MAAO,iBAAkBuH,WAAY,kBAAmBvX,MAAO,QAErE,IAaEyX,IAVaJ,mBACf,iBAAM,CACF,CAAErH,MAAO,gBAAiB0H,eAAgB,SAAC/U,GAAD,yBAAYA,EAAOgV,WAAnB,iBAAY,EAAYtE,cAAxB,aAAY,EAAoB1F,IAAI/C,KAAM,GACpF,CAAEoF,MAAO,cAAe0H,eAAgB,SAAC/U,GAAD,yBAAYA,EAAOgV,WAAnB,iBAAY,EAAYtE,cAAxB,aAAY,EAAoB5I,MAAMG,KAAM,GACpF,CAAEoF,MAAO,qBAAsB0H,eAAgB,SAAC/U,GAAD,yBAAYA,EAAOgV,WAAnB,iBAAY,EAAYtE,cAAxB,aAAY,EAAoBrM,aAAa4D,KAAM,GAClG,CAAEoF,MAAO,WAAYuH,WAAY,WAAYvX,MAAO,QAExD,IAGYqX,mBACZ,iBAAM,CACF,CAAErH,MAAO,OAAQ0H,eAAgB,SAAC/U,GAAD,aAAYgC,YAAqB,UAAChC,EAAOgV,WAAR,aAAC,EAAYC,YAAY5X,MAAO,KAClG,CAAEgQ,MAAO,YAAa0H,eAAgB,SAAC/U,GAAD,uBAAYA,EAAOgV,WAAnB,aAAY,EAAYzF,QAAQlS,MAAO,KAC7E,CAAEgQ,MAAO,UAAW0H,eAAgB,SAAC/U,GAAD,uBAAYA,EAAOgV,WAAnB,aAAY,EAAYE,SAASjN,KAAM,GAC3E,CAAEoF,MAAO,OAAQ0H,eAAgB,SAAC/U,GAAD,yBAAYA,EAAOgV,WAAnB,iBAAY,EAAY1D,cAAxB,aAAY,EAAoB/B,QAAQlS,MAAO,KAChF,CAAEgQ,MAAO,cAAe0H,eAAgB,SAAC/U,GAAD,yBAAYA,EAAOgV,WAAnB,iBAAY,EAAYG,gBAAxB,aAAY,EAAsBC,UAAU/X,MAAO,KAC3F,CAAEgQ,MAAO,UAAW0H,eAAgB,SAAC/U,GAAD,uBAAYA,EAAOgV,WAAnB,aAAY,EAAYK,UAAUC,UAAUjY,MAAO,KACvF,CAAEgQ,MAAO,SAAU0H,eAAgB,SAAC/U,GAAD,uBAAYA,EAAOgV,WAAnB,aAAY,EAAYpF,QAAQvS,MAAO,QAE9E,KAEEkY,GAAUb,mBACZ,iBAAM,CACF,CACIrH,MAAO,OACPuH,WAAY,OACZG,eAAgB,SAAC/U,GAAD,aAAYgC,YAAqB,UAAChC,EAAOgV,WAAR,aAAC,EAAYC,YAC9D5X,MAAO,KAEX,CACIgQ,MAAO,aACPuH,WAAY,UACZG,eAAgB,SAAC/U,GAAD,yBAAYA,EAAOgV,WAAnB,iBAAY,EAAYQ,gBAAxB,aAAY,EAAsBJ,UAClD/X,MAAO,KAEX,CAAEgQ,MAAO,OAAQuH,WAAY,OAAQ3M,KAAM,GAC3C,CAAEoF,MAAO,KAAMuH,WAAY,KAAMvX,MAAO,KACxC,CAAEgQ,MAAO,cAAeuH,WAAY,cAAe3M,KAAM,GACzD,CACIoF,MAAO,OACPuH,WAAY,YACZG,eAAgB,SAAC/U,GAAD,aAAY8I,YAAQ,UAAC9I,EAAOgV,WAAR,aAAC,EAAYxO,OACjDnJ,MAAO,QAGf,IAGEoY,GAAUf,mBACZ,iBAAM,CACF,CAAErH,MAAO,gBAAiB0H,eAAgB,SAAC/U,GAAD,yBAAYA,EAAOgV,WAAnB,iBAAY,EAAYtE,cAAxB,aAAY,EAAoB1F,IAAI/C,KAAM,GACpF,CAAEoF,MAAO,qBAAsB0H,eAAgB,SAAC/U,GAAD,yBAAYA,EAAOgV,WAAnB,iBAAY,EAAYtE,cAAxB,aAAY,EAAoBrM,aAAa4D,KAAM,MAEtG,IAEJ,OACI,qCACI,cAAC,IAAD,CAAe3C,KAAMqO,EAAapO,QAAS,kBAAMqO,GAAe,IAAQpO,OAAM,OAAEmK,QAAF,IAAEA,OAAF,EAAEA,EAAM1L,GAAID,MAAM,SAC/F2L,GAAQA,EAAK1L,IACV,cAACyR,EAAD,CAAepQ,KAAMuO,EAActO,QAAS,kBAAMuO,GAAgB,IAAQ7F,OAAQ0B,EAAK1L,KAE1F0L,GAAQA,EAAK1L,IAAMgQ,GAChB,cAAC,EAAD,CACI3O,KAAMyO,EACNxO,QAAS,kBAAMyO,GAAY,IAC3B/F,OAAQ0B,EAAK1L,GACboN,KAAM4C,IAGd,cAAC,IAAD,CAAQnR,cAAe6M,EAAe6B,iBAAkBP,EAAQxK,SAAUV,EAA1E,SACK,oBAAGlD,EAAH,EAAGA,OAAQgH,EAAX,EAAWA,OAAQlD,EAAnB,EAAmBA,aAAcD,EAAjC,EAAiCA,WAAYG,EAA7C,EAA6CA,aAAcD,EAA3D,EAA2DA,cAAekD,EAA1E,EAA0EA,QAA1E,OACG,cAAC,IAAD,UACI,eAAC1D,EAAA,EAAD,CAAKuP,GAAI,EAAGvY,QAAQ,OAAOkJ,oBAAoB,UAAU6G,QAAS,GAAlE,UACI,eAAC,IAAD,WACI,cAAC,EAAD,CACItK,OAAQA,EACRgH,OAAQA,EACRC,QAASA,EACTpD,WAAYA,EACZC,aAAcA,EACdC,cAAeA,IAEnB,cAACR,EAAA,EAAD,CAAKwP,UAAU,SAASjD,GAAI,EAA5B,SACI,cAACxL,EAAA,EAAD,CAAQa,SAAUnB,EAAcjL,KAAK,MAAMyG,KAAK,SAAhD,uBAKR,eAAC,IAAD,WACI,eAACwT,EAAA,EAAD,CACI/W,MAAOyU,EACP1U,SAAU,SAACc,EAAGmW,GAAJ,OAAWtC,EAAiBsC,IACtChY,MAAO,CAAE8J,aAAc,SAH3B,UAKI,cAACmO,EAAA,EAAD,CAAK9V,MAAM,UACX,cAAC8V,EAAA,EAAD,CAAK9V,MAAM,WACX,cAAC8V,EAAA,EAAD,CAAK9V,MAAM,YACX,cAAC8V,EAAA,EAAD,CAAK9V,MAAM,aACX,cAAC8V,EAAA,EAAD,CAAK9V,MAAM,uBAEI,IAAlBsT,GACG,cAACnN,EAAA,EAAD,CACI8E,GAAI,EACJ5N,OAAO,OACPF,QAAQ,OACRyE,eAAe,SACfC,WAAW,SACXF,cAAc,SACduL,QAAS,GAPb,UASS,OAAJwC,QAAI,IAAJA,GAAA,UAAAA,EAAM7O,YAAN,eAAYyR,QACT,qBACIzU,MAAO,CACH+Q,SAAU,OACVvR,OAAQ,OACRkV,UAAW,IACXjL,OAAQ,YAEZkL,IAAI,GACJvN,IAAG,wCAA4ByK,QAA5B,IAA4BA,GAA5B,UAA4BA,EAAM7O,YAAlC,aAA4B,EAAYyR,WAKxC,IAAlBgB,GACG,cAAC,EAAD,CACI1Q,OAAQA,EACRgH,OAAQA,EACRC,QAASA,EACTpD,WAAYA,EACZC,aAAcA,EACdC,cAAeA,IAGJ,IAAlB2M,GACG,cAAC,EAAD,CACI1Q,OAAQA,EACRgH,OAAQA,EACRC,QAASA,EACTpD,WAAYA,EACZC,aAAcA,EACdC,cAAeA,IAGJ,IAAlB2M,GACG,cAAC,EAAD,CACI1Q,OAAQA,EACRgH,OAAQA,EACRC,QAASA,EACTpD,WAAYA,EACZC,aAAcA,EACdC,cAAeA,IAGJ,IAAlB2M,GACG,cAAC,IAAD,CACI1Q,OAAQA,EAAO/B,KACf6F,aAAcA,EACdD,WAAYA,EACZE,cAAeA,EACfiD,OAAQA,EACRC,QAASA,EACTiD,aAAY,OAAE4C,QAAF,IAAEA,OAAF,EAAEA,EAAM7O,kBAQhD,eAAC,IAAD,WACI,eAAC+U,EAAA,EAAD,CAAM/W,MAAO2U,EAAe5U,SAAU,SAACc,EAAGmW,GAAJ,OAAWpC,EAAiBoC,IAAlE,UACI,cAACC,EAAA,EAAD,CAAK9V,MAAM,mBADf,KAEI,cAAC8V,EAAA,EAAD,CAAK9V,MAAM,eAFf,KAGI,cAAC8V,EAAA,EAAD,CAAK9V,MAAM,QAHf,KAII,cAAC8V,EAAA,EAAD,CAAK9V,MAAM,cAJf,KAKI,cAAC8V,EAAA,EAAD,CAAK9V,MAAM,aALf,KAMI,cAAC8V,EAAA,EAAD,CAAK9V,MAAM,oBANf,KAOI,cAAC8V,EAAA,EAAD,CAAK9V,MAAM,sBAPf,KAQI,cAAC8V,EAAA,EAAD,CAAK9V,MAAM,0BARf,KASI,cAAC8V,EAAA,EAAD,CAAK9V,MAAM,SATf,KAUI,cAAC8V,EAAA,EAAD,CAAK9V,MAAM,aAVf,QAYmB,IAAlBwT,GACG,cAACrN,EAAA,EAAD,UACI,cAAC1I,EAAA,EAAD,CAAcG,KAAM8W,GAAS/W,KAAMuW,IAAc,GAAIxW,cAAe,SAACwV,SAG1D,IAAlBM,GAAuB,cAAC/V,EAAA,EAAD,CAAcG,KAAM4W,GAAS7W,KAAMwW,IAAY,GAAIzW,cAAe,SAACS,OACxE,IAAlBqV,GACG,qCACI,cAACtM,EAAA,EAAD,CACIC,QAAS,WACLwM,GAAe,IAEnB/W,QAAQ,WAJZ,4BAQA,cAACa,EAAA,EAAD,CACIJ,OAAQ,IACRO,KAAM0X,GACN3X,KAAMyW,IAAaA,GAAUzT,OAASyT,GAAY,GAClD1W,cAAe,SAACqY,UAIT,IAAlBvC,GACG,qCACI,cAACtM,EAAA,EAAD,CACIC,QAAS,WACL0M,GAAgB,IAEpBjX,QAAQ,WAJZ,4BAQA,cAACa,EAAA,EAAD,CACIG,KAAMgX,GACNjX,KAAM0W,IAAa,GACnB3W,cAAe,SAACqY,GACZ9B,EAAgB8B,GAChBhC,GAAY,SAKT,IAAlBP,GACG,cAAC/V,EAAA,EAAD,CAAcG,KAAM4X,GAAS7X,KAAM2W,GAAI0B,QAAU,GAAItY,cAAe,SAACS,OAEtD,IAAlBqV,GAAuB,cAAC/V,EAAA,EAAD,CAAcG,KAAMiX,GAASlX,KAAM4W,IAAO,GAAI7W,cAAe,SAACS,e,6LCpTvF,SAAS8X,IAAQ,IAAD,EACOnX,mBAAS,GADhB,mBACpBoX,EADoB,KACTC,EADS,OAEarX,qBAFb,mBAEpBsX,EAFoB,KAENC,EAFM,KAIbC,EAAUC,YAAO,SAAvBnY,KAEFR,EAAoB,CACtB,CACIwP,MAAO,SACPuH,WAAY,SACZ3M,KAAM,EACN8M,eAAgB,SAAC3W,GAAD,yBAAOA,EAAE4W,WAAT,iBAAO,EAAOlU,YAAd,aAAO,EAAakK,KAExC,CACIqC,MAAO,UACP0H,eAAgB,SAAC3W,GAAD,eAAO4D,YAAqB,UAAC5D,EAAE4W,WAAH,iBAAC,EAAOnF,UAAR,aAAC,EAAWK,oBACxD7S,MAAO,KAEX,CACIgQ,MAAO,WACP0H,eAAgB,SAAC3W,GAAD,eAAO4D,YAAqB,UAAC5D,EAAE4W,WAAH,iBAAC,EAAOnF,UAAR,aAAC,EAAWM,iBACxD9S,MAAO,KAEX,CAAEgQ,MAAO,SAAUuH,WAAY,SAAUvX,MAAO,KAChD,CAAEgQ,MAAO,iBAAkBuH,WAAY,kBAAmBvX,MAAO,KACjE,CAAEgQ,MAAO,kBAAmBuH,WAAY,oBAAqBvX,MAAO,KACpE,CACIgQ,MAAO,SACPuH,WAAY,SACZvX,MAAO,GACP0X,eAAgB,SAAC3W,GAAD,yBAAOA,EAAE4W,WAAT,iBAAO,EAAOnF,UAAd,aAAO,EAAWN,SAEtC,CACIlC,MAAO,UACPuH,WAAY,UACZvX,MAAO,IACP0X,eAAgB,SAAC3W,GAAD,eAAO4D,YAAqB,UAAC5D,EAAE4W,WAAH,iBAAC,EAAOnF,UAAR,aAAC,EAAWoF,cAIhE,OACI,cAAC,IAAD,UA2BI,eAAC,IAAD,WACI,eAAC,IAAD,CACInW,MAAOqX,EACPM,UAAU,UACV5X,SAAU,SAACc,EAAGmW,GAAJ,OAAWM,EAAaN,IAClChY,MAAO,CAAE8J,aAAc,IAJ3B,UAMI,cAAC,IAAD,CAAK3H,MAAM,SACX,cAAC,IAAD,CAAKA,MAAM,UAAU+H,UAAWqO,OAErB,IAAdF,GAAmBI,GAChB,qCACI,cAAC,IAAD,IACA,cAAC,IAAD,CACI3Y,KAAM2Y,EAAMN,QAAU,GACtBpY,KAAMA,EACNF,cAAe,SAACwV,GACZmD,EAAgBnD,GAChBiD,EAAa,SAKd,IAAdD,GAAmBE,GAAgB,cAAC,IAAD,CAAS1G,KAAM0G","file":"static/js/26.dcdde945.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button, ButtonProps, makeStyles } from \"@material-ui/core\";\r\nimport { AddRounded, EditRounded, DeleteRounded } from \"@material-ui/icons\";\r\n\r\nimport { Gradients } from \"../theme\";\r\n\r\ninterface IButton extends ButtonProps {\r\n    kind?: \"add\" | \"edit\" | \"delete\";\r\n}\r\nexport default function MyButton({ kind, ...props }: IButton) {\r\n    const useStyles = makeStyles({\r\n        btnStyle: {\r\n            background: kind ? (kind === \"add\" ? Gradients.success : kind === \"edit\" ? Gradients.warning : Gradients.error) : \"default\",\r\n        },\r\n    });\r\n    let icons = {\r\n        add: <AddRounded />,\r\n        edit: <EditRounded />,\r\n        delete: <DeleteRounded />,\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={classes.btnStyle}\r\n            startIcon={kind ? icons[kind] : props.startIcon}\r\n            variant={kind ? \"contained\" : props.variant}\r\n            color={kind ? \"primary\" : props.color}\r\n            {...props}\r\n        >\r\n            {props.children}\r\n        </Button>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { DataGrid, GridToolbar } from \"@material-ui/data-grid\";\r\n\r\nexport const useDataGridStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: \"#f9f9f9\",\r\n        border: \"none\",\r\n\r\n        \"& .MuiDataGrid-columnsContainer\": {\r\n            backgroundColor: \"#202731\",\r\n            color: \"#fff\",\r\n            // borderRadius: \" 10px 10px 0 0\",\r\n        },\r\n        \"& .MuiDataGrid-iconSeparator\": {\r\n            display: \"none\",\r\n            width: 0,\r\n            height: 0,\r\n            opacity: 0,\r\n        },\r\n        \"& .Mui-selected\": {\r\n            boxShadow: \" rgba(149, 157, 165, 0.2) 0px 8px 24px\",\r\n            backgroundColor: \"#fff !important\",\r\n        },\r\n        \"& .MuiDataGrid-sortIcon\": {\r\n            fill: \"white\",\r\n        },\r\n    },\r\n});\r\n\r\ninterface IBaseDataGrid {\r\n    onRowSelected?: (row: any) => void;\r\n    rows: any[];\r\n    cols: any[];\r\n    height?: number;\r\n}\r\n\r\nexport default function BaseDataGrid({ onRowSelected, rows, cols, height }: IBaseDataGrid) {\r\n    const classes = useDataGridStyles();\r\n\r\n    // const updatedCols = cols.map((x) => {\r\n    //     let obj = Object.keys(x);\r\n    //     let check = false;\r\n    //     for (let o in obj) {\r\n    //         if (o == \"flex\") {\r\n    //             check = true;\r\n    //         }\r\n    //     }\r\n    //     if (!check) {\r\n    //         x = { ...x, flex: 1 };\r\n    //     }\r\n    //     return x;\r\n    // });\r\n\r\n    return (\r\n        // <Box display=\"flex\" boxShadow=\"rgba(0, 0, 0, 0.08) 0px 4px 12px\" border=\"none\" height=\"100%\">\r\n        <div\r\n            style={{\r\n                flexGrow: 1,\r\n                height: height || 450,\r\n            }}\r\n        >\r\n            <DataGrid\r\n                density=\"compact\"\r\n                components={{ Toolbar: GridToolbar }}\r\n                className={classes.root}\r\n                onRowSelected={(r) => {\r\n                    onRowSelected && onRowSelected(r.data);\r\n                }}\r\n                columns={cols}\r\n                rows={rows}\r\n            />\r\n        </div>\r\n        // </Box>\r\n    );\r\n}\r\n\r\nexport const ScrollDataGrid = ({ onRowSelected, rows, cols, height }: IBaseDataGrid) => {\r\n    const classes = useDataGridStyles();\r\n\r\n    return (\r\n        // <div\r\n        //     style={{\r\n        //         height: height || 450,\r\n        //     }}\r\n        // >\r\n        <DataGrid\r\n            density=\"compact\"\r\n            components={{ Toolbar: GridToolbar }}\r\n            className={classes.root}\r\n            onRowSelected={(r) => {\r\n                onRowSelected && onRowSelected(r.data);\r\n            }}\r\n            columns={cols}\r\n            rows={rows}\r\n        />\r\n        // </div>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MenuItem, TextField, StandardTextFieldProps } from \"@material-ui/core\";\r\n// import { BootstrapInput } from \"../TextField\";\r\n\r\n// import styles from \"./inputs.module.css\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { CSSProperties } from \"@material-ui/styles\";\r\n\r\ninterface IMFS {\r\n    request: () => Promise<any>;\r\n    limit?: number;\r\n    label?: string;\r\n    getOptionLabel: (option: any) => string;\r\n    getOptionValue: (option: any) => string;\r\n    onChange?: (e: React.ChangeEvent<{}>, newValue: any) => void;\r\n    onBlur?: React.FocusEventHandler<HTMLDivElement>;\r\n    error?: boolean;\r\n    placeholder?: string;\r\n    style?: CSSProperties;\r\n    value?: any;\r\n}\r\nexport const MaterialFieldSelect = ({\r\n    request,\r\n    limit,\r\n    getOptionLabel,\r\n    getOptionValue,\r\n    onChange,\r\n    value,\r\n    ...props\r\n}: IMFS) => {\r\n    const [options, setOptions] = useState([]);\r\n    const [findValue, setFindValue] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        const t = options.find((o) => getOptionValue(o) === value);\r\n        setFindValue(t);\r\n    }, [value, options, getOptionValue]);\r\n\r\n    useEffect(() => {\r\n        request()\r\n            .then((data) => {\r\n                if (limit && limit > 0) {\r\n                    setOptions(data.slice(0, limit));\r\n                } else {\r\n                    setOptions(data);\r\n                }\r\n            })\r\n            .catch((e) => console.log(e));\r\n    }, [limit, request]);\r\n\r\n    return (\r\n        <Autocomplete\r\n            style={props.style as any}\r\n            getOptionLabel={getOptionLabel}\r\n            options={options}\r\n            onChange={onChange}\r\n            onBlur={props.onBlur}\r\n            value={findValue}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label={props?.label}\r\n                    error={props.error}\r\n                    placeholder={props.placeholder}\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                />\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\ninterface IOS extends StandardTextFieldProps {\r\n    items: any[];\r\n    itemValueField: string;\r\n    itemTitleField: string;\r\n    keyField?: string;\r\n    inputStyle?: any;\r\n}\r\nexport const ObjectSelect = ({ inputStyle, items, itemTitleField, itemValueField, keyField, ...props }: IOS) => {\r\n    return (\r\n        <TextField {...props} variant=\"outlined\" size=\"small\" select>\r\n            <MenuItem value={undefined}>None</MenuItem>\r\n            {items &&\r\n                items.length >= 0 &&\r\n                items.map((item: any, i) => (\r\n                    <MenuItem key={keyField ? item[keyField] : i} value={item[itemValueField]}>\r\n                        {item[itemTitleField]}\r\n                    </MenuItem>\r\n                ))}\r\n        </TextField>\r\n    );\r\n};\r\n\r\ninterface IFieldSelect extends StandardTextFieldProps {\r\n    request: () => Promise<any>;\r\n    getOptionList?: (data: any) => any;\r\n    itemValueField: string;\r\n    itemTitleField: string;\r\n    limit?: number;\r\n    keyField?: string;\r\n}\r\nexport const FieldSelect = ({\r\n    keyField,\r\n    request,\r\n    itemValueField,\r\n    itemTitleField,\r\n    limit,\r\n    getOptionList,\r\n    ...props\r\n}: IFieldSelect) => {\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        request()\r\n            .then((data) => {\r\n                if (limit && limit > 0) {\r\n                    let options = getOptionList ? getOptionList(data) : data.slice(0, limit);\r\n                    setItems(options);\r\n                } else {\r\n                    let options = getOptionList ? getOptionList(data) : data;\r\n                    setItems(options);\r\n                }\r\n            })\r\n            .catch((e) => console.log(e));\r\n    }, [getOptionList, limit, request]);\r\n\r\n    return <ObjectSelect {...props} itemTitleField={itemTitleField} itemValueField={itemValueField} items={items} />;\r\n};\r\n\r\ninterface IArraySelect extends StandardTextFieldProps {\r\n    items?: any[];\r\n}\r\nexport const ArraySelect = ({ items, ...props }: IArraySelect) => {\r\n    return (\r\n        <ObjectSelect\r\n            itemTitleField=\"item\"\r\n            itemValueField=\"item\"\r\n            items={items ? items.map((item) => ({ item: item })) : []}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport const BaseSelect = (props: StandardTextFieldProps) => {\r\n    return (\r\n        <TextField {...props} variant=\"outlined\" size=\"small\" select>\r\n            {props.children}\r\n        </TextField>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Paper, withStyles, PaperProps } from \"@material-ui/core\";\r\n\r\nexport const BasePaper = withStyles((theme) => ({\r\n    root: {\r\n        borderRadius: 20,\r\n        padding: \"1em\",\r\n        boxShadow: \"rgba(0, 0, 0, 0.08) 0px 4px 12px\",\r\n    },\r\n}))((props: PaperProps) => <Paper {...props} />);\r\n\r\nexport const IconPaper = withStyles((theme) => ({\r\n    root: {\r\n        borderRadius: 10,\r\n        padding: theme.spacing(4),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        color: \"#fff\",\r\n    },\r\n}))((props: PaperProps) => <Paper {...props} elevation={5} />);\r\n","import { format } from \"date-fns\";\r\n\r\nexport const formatTimestampToDate = (timestamp: number) => {\r\n    return timestamp ? format(timestamp, \"MM/dd/yyyy\") : \"\";\r\n};\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport default function Toast(content: string, type?: \"success\" | \"warning\" | \"error\" | \"info\") {\r\n    switch (type) {\r\n        case \"success\":\r\n            toast.success(content);\r\n            break;\r\n        case \"warning\":\r\n            toast.warning(content);\r\n            break;\r\n        case \"error\":\r\n            toast.error(content);\r\n            break;\r\n        case \"info\":\r\n            toast.info(content);\r\n            break;\r\n        default:\r\n            toast(content);\r\n            break;\r\n    }\r\n}\r\n","import { format } from \"date-fns\";\r\n\r\nexport const formatDate = (date: string, dateFormat: string) => {\r\n    return format(new Date(date), dateFormat);\r\n};\r\n\r\nexport const getModifiedValues = (values: any, initialValues: any) => {\r\n    let modifiedValues: any = {};\r\n\r\n    if (values) {\r\n        Object.entries(values).forEach((entry) => {\r\n            let key = entry[0];\r\n            let value = entry[1];\r\n\r\n            if (value !== initialValues[key]) {\r\n                modifiedValues[key as any] = value;\r\n            }\r\n        });\r\n    }\r\n\r\n    return Object.keys(modifiedValues).length === 0 ? null : modifiedValues;\r\n};\r\n\r\nexport const countProperty = (data: any[], value: string, propGetter: (item: any) => any) => {\r\n    return data.filter((item) => propGetter(item) === value).length;\r\n};\r\n\r\nexport type ParameterType = {\r\n    [key: string]: string | number | boolean | null | undefined;\r\n};\r\n\r\nexport const generateQuery = (params: ParameterType) => {\r\n    const queryArray = [];\r\n    let paramValue: any = \"\";\r\n\r\n    for (const paramName in params) {\r\n        paramValue = params[paramName];\r\n\r\n        if (paramValue !== null && paramValue !== undefined && paramValue !== \"\") {\r\n            queryArray.push(`${paramName}=${paramValue}`);\r\n        }\r\n    }\r\n    \r\n    return queryArray.join(\"&\");\r\n};\r\n","import { delete_, get, patch, post } from \".\";\r\n\r\nexport interface IDocument {\r\n    id?: string;\r\n    path?: string;\r\n    file: File | string;\r\n    description: string;\r\n}\r\n\r\nexport const getAllModelDocuments = (model: string, id: string) => {\r\n    return get(`/document/${model}/${id}`);\r\n};\r\n\r\nexport const createAModelDocument = (model: string, id: string, file: any, description: string, fileName?: string) => {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"document\", file);\r\n    formData.append(\"description\", description);\r\n    fileName && formData.append(\"fileName\", fileName);\r\n\r\n    return post(`/document/${model}/${id}`, formData);\r\n};\r\n\r\nexport const updateAModelDocument = (docid: string, file: any, description: string) => {\r\n    const formData = new FormData();\r\n    formData.append(\"document\", file);\r\n    formData.append(\"description\", description);\r\n\r\n    return patch(`/document/${docid}`, formData);\r\n};\r\n\r\nexport const deleteAModelDocument = (docid: string) => {\r\n    return delete_(`/document/${docid}`);\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function PDFPreview({ pdf, height }: { pdf: string; height?: string }) {\r\n    return (\r\n        <object width=\"100%\" height={height ? height : 400} data={pdf} type=\"application/pdf\">\r\n            <embed src={pdf} type=\"application/pdf\" />\r\n            Can\"t load pdf :(, If you have IDM extention please desable it or download the file\r\n        </object>\r\n    );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { Box, TextField, Link } from \"@material-ui/core\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport Dialog from \"../../app/Dialog\";\r\nimport Button from \"../../app/Button\";\r\n\r\nimport { createAModelDocument, updateAModelDocument, deleteAModelDocument, IDocument } from \"../../api/document\";\r\nimport PhotoSizeSelectActualOutlinedIcon from \"@material-ui/icons/PhotoSizeSelectActualOutlined\";\r\nimport PDFPreview from \"../../components/PDFPreview\";\r\nimport { mutate } from \"swr\";\r\n\r\ninterface IDocumentModal {\r\n    open: boolean;\r\n    model: string;\r\n    itemId: string;\r\n    docData?: any;\r\n    onDone?: () => void;\r\n    onClose: () => void;\r\n}\r\n\r\nconst mutateDocuments = (type: string, id: string) => {\r\n    return mutate(`/document/${type}/${id}`);\r\n};\r\n\r\nexport default function DocumentModal({ open, onClose, model, itemId, onDone, docData }: IDocumentModal) {\r\n    const fileUploader = useRef<HTMLInputElement | null>();\r\n\r\n    const deleteDocument = async () => {\r\n        try {\r\n            if (docData && docData.id) {\r\n                await deleteAModelDocument(docData.id);\r\n                onDone && onDone();\r\n                mutateDocuments(model, itemId);\r\n                onClose();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (values: any, { setSubmitting }: any) => {\r\n        try {\r\n            if (docData && docData.id) {\r\n                await updateAModelDocument(docData.id, values.file, values.description);\r\n\r\n                onDone && onDone();\r\n                mutateDocuments(model, itemId);\r\n                onClose();\r\n            } else {\r\n                await createAModelDocument(model, itemId as any, values.file, values.description);\r\n\r\n                onDone && onDone();\r\n                mutateDocuments(model, itemId);\r\n                onClose();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} fullScreen title={`${docData ? \"Edit\" : \"Add\"} Document to ${model}`}>\r\n            <Box height=\"82vh\" m={3} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridColumnGap={10}>\r\n                <Box>\r\n                    {docData?.path && <PDFPreview height=\"100%\" pdf={\"http://digitalphocus.ir/\" + docData?.path} />}\r\n                </Box>\r\n                <Formik initialValues={docData ? docData : ({} as IDocument)} onSubmit={handleSubmit}>\r\n                    {({ values, handleBlur, handleChange, setFieldValue, isSubmitting }) => (\r\n                        <Form>\r\n                            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n                                <input\r\n                                    type=\"file\"\r\n                                    ref={(e) => (fileUploader.current = e)}\r\n                                    hidden\r\n                                    onChange={(e) =>\r\n                                        e.target.files !== null && setFieldValue(\"file\", e.target.files[0])\r\n                                    }\r\n                                />\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    style={{\r\n                                        backgroundColor: \"#fff\",\r\n                                        color: \" rgb(43,140,255) \",\r\n                                        border: \"1px solid rgb(43,140,255) \",\r\n                                        width: \"100%\",\r\n                                    }}\r\n                                    variant=\"contained\"\r\n                                    onClick={() => fileUploader.current?.click()}\r\n                                >\r\n                                    <PhotoSizeSelectActualOutlinedIcon style={{ marginRight: \"7px\" }} />\r\n                                    Upload file\r\n                                </Button>\r\n\r\n                                <div style={{ margin: \"1em 0\" }}>\r\n                                    {values.file ? (\r\n                                        // String((values.file as any).name)\r\n                                        <p>ads</p>\r\n                                    ) : docData ? (\r\n                                        <Link download href={docData.path}>\r\n                                            Download previous file\r\n                                        </Link>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </div>\r\n\r\n                                <TextField\r\n                                    style={{ marginBottom: \"20px\" }}\r\n                                    fullWidth\r\n                                    value={values.description}\r\n                                    name=\"description\"\r\n                                    label=\"Description\"\r\n                                    variant=\"outlined\"\r\n                                    multiline\r\n                                    rows={4}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                />\r\n                                <Box style={{ display: \"flex\", width: \"100%\" }}>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        kind={docData ? \"edit\" : \"add\"}\r\n                                        disabled={isSubmitting}\r\n                                        style={{ flex: 1 }}\r\n                                    >\r\n                                        Save\r\n                                    </Button>\r\n                                    {docData && (\r\n                                        <Button\r\n                                            style={{ marginLeft: \"1em\" }}\r\n                                            onClick={deleteDocument}\r\n                                            kind=\"delete\"\r\n                                            disabled={isSubmitting}\r\n                                        >\r\n                                            Delete\r\n                                        </Button>\r\n                                    )}\r\n                                </Box>\r\n                            </Box>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { nanoid } from \"nanoid\";\r\n\r\nimport { IItem } from \"../api/items\";\r\nimport { IField } from \"../api/field\";\r\n\r\nexport const LEVEL_SEPARATOR = \"__\";\r\n\r\nexport const splitLevelName = (name: string): string => {\r\n    const splited = name.split(LEVEL_SEPARATOR);\r\n    return splited[0];\r\n};\r\n\r\nexport const generateLevelName = (name: string): string => {\r\n    return `${name}${LEVEL_SEPARATOR}${nanoid()}`;\r\n};\r\n\r\nexport const getVisibilityState = (level: IField, item: IItem) => {\r\n    if (level.all) {\r\n        return true;\r\n    }\r\n\r\n    for (const fn of level.filterName) {\r\n        for (const fv of level.filterValue) {\r\n            if (item[fn] && (fv === \"all\" || item[fn] === fv)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n};\r\n","export const fileType = (url: string) => {\r\n    const splited = url.split(\".\").pop();\r\n    return splited;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { ArraySelect } from \"../../../app/Inputs\";\r\nimport { IFilter } from \"../../../api/filter\";\r\n\r\nexport default function Cluster({\r\n    cluster,\r\n    device,\r\n    handleBlur,\r\n    handleChange,\r\n    values,\r\n}: {\r\n    device: boolean;\r\n    values: any;\r\n    handleChange: any;\r\n    handleBlur: any;\r\n    cluster: IFilter;\r\n}) {\r\n    if (cluster.name === \"Product Family\" && !device) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <ArraySelect\r\n            defaultValue={values ? values[cluster.name as any] : \"\"}\r\n            name={cluster.name}\r\n            label={cluster.name}\r\n            items={cluster.valid}\r\n            value={values ? values[cluster.name as any] : \"\"}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n        />\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { FormControlLabel, Checkbox } from \"@material-ui/core\";\r\n\r\nimport TextField from \"../../../app/TextField\";\r\nimport { ArraySelect } from \"../../../app/Inputs\";\r\n\r\nimport { getVisibilityState, splitLevelName } from \"../../../logic/levels\";\r\nimport { IField } from \"../../../api/field\";\r\n\r\nexport default function Level({\r\n    level,\r\n    handleBlur,\r\n    handleChange,\r\n    values,\r\n    device,\r\n}: {\r\n    device: boolean;\r\n    level: IField;\r\n    values: any;\r\n    handleChange: any;\r\n    handleBlur: any;\r\n}) {\r\n    const visible = getVisibilityState(level, values);\r\n\r\n    if (!visible) {\r\n        return null;\r\n    }\r\n\r\n    if (level.filterName[0] === \"Product Family\" && !device) {\r\n        return null;\r\n    }\r\n\r\n    if (level.type === \"string\" || level.type === \"number\") {\r\n        return (\r\n            <TextField\r\n                required={level.required}\r\n                name={level.name}\r\n                label={splitLevelName(level.name)}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values[level.name]}\r\n            />\r\n        );\r\n    } else if (level.type === \"enum\") {\r\n        return (\r\n            <ArraySelect\r\n                required={level.required}\r\n                name={level.name}\r\n                label={splitLevelName(level.name)}\r\n                items={level.valid}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values[level.name]}\r\n            />\r\n        );\r\n    } else if (level.type === \"boolean\") {\r\n        return (\r\n            <FormControlLabel\r\n                checked={values[level.name]}\r\n                control={<Checkbox required={level.required} />}\r\n                name={level.name}\r\n                label={splitLevelName(level.name)}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <TextField\r\n            required={level.required}\r\n            name={level.name}\r\n            label={splitLevelName(level.name)}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            value={values[level.name]}\r\n        />\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Box, FormControlLabel, Checkbox, LinearProgress, Divider, Paper } from \"@material-ui/core\";\r\nimport useSWR from \"swr\";\r\n\r\nimport TextField from \"../../app/TextField\";\r\nimport Button from \"../../app/Button\";\r\n\r\nimport { IFilter } from \"../../api/filter\";\r\nimport { IField } from \"../../api/field\";\r\nimport Cluster from \"./ClusterAndLevels/Cluster\";\r\nimport Level from \"./ClusterAndLevels/Level\";\r\n\r\ninterface IForm {\r\n    values: any;\r\n    errors: any;\r\n    touched: any;\r\n    handleChange: (e: any) => void;\r\n    handleBlur: (e: any) => void;\r\n    setFieldValue: any;\r\n    isSubmitting?: boolean;\r\n    device?: boolean;\r\n}\r\n\r\ninterface IQForm extends IForm {\r\n    itemId: string;\r\n    handleManualCount?: () => void;\r\n    handleUpdateQuantity?: () => void;\r\n}\r\n\r\nexport const General = ({\r\n    isSubmitting,\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    touched,\r\n    setFieldValue,\r\n    device,\r\n}: IForm) => {\r\n    return (\r\n        <>\r\n            <Box display=\"grid\" gridTemplateColumns=\"1fr 1fr 1fr 1fr\" gridRowGap={10} gridColumnGap={10} pr={1}>\r\n                <Paper\r\n                    style={{\r\n                        margin: \"0.5em 0\",\r\n                        padding: \"0 0.5em 0 1em\",\r\n                        backgroundColor: \"#eee\",\r\n                        gridColumnEnd: \"span 4\",\r\n                    }}\r\n                >\r\n                    <Box display=\"grid\" gridTemplateColumns=\"1fr 1fr 1fr\" gridRowGap={10} gridColumnGap={10} pr={1}>\r\n                        <FormControlLabel\r\n                            style={{ fontSize: \"0.7rem\" }}\r\n                            checked={values.shippingApproved}\r\n                            label=\"Ship. Ap.\"\r\n                            name=\"shippingApproved\"\r\n                            onChange={handleChange}\r\n                            control={<Checkbox />}\r\n                        />\r\n                        <FormControlLabel\r\n                            style={{ fontSize: \"0.7rem\" }}\r\n                            checked={values.salesApproved}\r\n                            label=\"Sales Ap.\"\r\n                            name=\"salesApproved\"\r\n                            onChange={handleChange}\r\n                            control={<Checkbox />}\r\n                        />\r\n                        <FormControlLabel\r\n                            style={{ fontSize: \"0.7rem\" }}\r\n                            checked={values.engineeringApproved}\r\n                            label=\"En. Ap.\"\r\n                            name=\"engineeringApproved\"\r\n                            onChange={handleChange}\r\n                            control={<Checkbox />}\r\n                        />\r\n                        <FormControlLabel\r\n                            style={{ fontSize: \"0.7rem\" }}\r\n                            checked={values.obsolete}\r\n                            label=\"Obsolete\"\r\n                            name=\"obsolete\"\r\n                            onChange={handleChange}\r\n                            control={<Checkbox />}\r\n                        />\r\n\r\n                        <FormControlLabel\r\n                            style={{ fontSize: \"0.7rem\" }}\r\n                            checked={values.nonInventoryItem}\r\n                            label=\"Non-Inventory Item\"\r\n                            name=\"nonInventoryItem\"\r\n                            onChange={handleChange}\r\n                            control={<Checkbox />}\r\n                        />\r\n                        <FormControlLabel\r\n                            style={{ fontSize: \"0.7rem\" }}\r\n                            checked={values.rndOnly}\r\n                            label=\"R&D\"\r\n                            name=\"rndOnly\"\r\n                            onChange={handleChange}\r\n                            control={<Checkbox />}\r\n                        />\r\n                        <FormControlLabel\r\n                            style={{ fontSize: \"0.7rem\" }}\r\n                            checked={values.dontTrackQoh}\r\n                            label=\"Do not Track QOH\"\r\n                            name=\"dontTrackQoh\"\r\n                            onChange={handleChange}\r\n                            control={<Checkbox />}\r\n                        />\r\n                        <FormControlLabel\r\n                            style={{ fontSize: \"0.7rem\" }}\r\n                            checked={values.dontOrderPO}\r\n                            label=\"Do not order on POs\"\r\n                            name=\"dontOrderPO\"\r\n                            onChange={handleChange}\r\n                            control={<Checkbox />}\r\n                        />\r\n\r\n                        <FormControlLabel\r\n                            style={{ fontSize: \"0.7rem\" }}\r\n                            checked={values.buildToStock}\r\n                            label=\"Build To Stock\"\r\n                            name=\"buildToStock\"\r\n                            onChange={handleChange}\r\n                            control={<Checkbox />}\r\n                        />\r\n                        <FormControlLabel\r\n                            style={{ fontSize: \"0.7rem\" }}\r\n                            checked={values.archived}\r\n                            label=\"Archive\"\r\n                            name=\"archived\"\r\n                            onChange={handleChange}\r\n                            control={<Checkbox />}\r\n                        />\r\n                        {values.archived && (\r\n                            <TextField\r\n                                label=\"Archive Date\"\r\n                                value={values.archiveDate}\r\n                                name=\"archiveDate\"\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={Boolean(errors.archiveDate && touched.archiveDate)}\r\n                                placeholder=\"archiveDate\"\r\n                                disabled\r\n                                style={{ gridColumnEnd: \"span 2\", marginBottom: 10 }}\r\n                            />\r\n                        )}\r\n                    </Box>\r\n                </Paper>\r\n                <TextField\r\n                    style={{ gridColumnEnd: \"span 4\" }}\r\n                    label=\"no\"\r\n                    value={values.no}\r\n                    name=\"no\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.no && touched.no)}\r\n                    placeholder=\"no\"\r\n                />\r\n                <TextField\r\n                    style={{ gridColumnEnd: \"span 4\" }}\r\n                    label=\"Item name\"\r\n                    placeholder=\"Item name\"\r\n                    name=\"name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.name && touched.name)}\r\n                    value={values.name}\r\n                />\r\n                <TextField\r\n                    multiline\r\n                    style={{ gridColumnEnd: \"span 4\" }}\r\n                    rows={4}\r\n                    placeholder=\"description\"\r\n                    label=\"Description\"\r\n                    name=\"description\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.description}\r\n                />\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const MoreInfo = ({ values, errors, handleChange, handleBlur, touched }: IForm) => {\r\n    return (\r\n        <Box mt={1} display=\"grid\" gridTemplateColumns=\"auto auto\" gridColumnGap={10} gridRowGap={10}>\r\n            <TextField\r\n                label=\"Version\"\r\n                name=\"version\"\r\n                placeholder=\"Version\"\r\n                value={values.version}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n            />\r\n            {/* <TextField\r\n                label=\"keywords\"\r\n                name=\"keywords\"\r\n                placeholder=\"keywords\"\r\n                value={values.keywords}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                style={{ marginBottom: 3 }}\r\n            /> */}\r\n            <TextField\r\n                label=\"Url\"\r\n                name=\"url\"\r\n                placeholder=\"Url\"\r\n                value={values.url}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                style={{ marginBottom: 3 }}\r\n            />\r\n            <TextField\r\n                label=\"Manufacturer Product Number\"\r\n                name=\"manufacturerProductNumber\"\r\n                placeholder=\"Manufacturer Product Number\"\r\n                value={values.manufacturerProductNumber}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                style={{ marginBottom: 3 }}\r\n            />\r\n            <TextField\r\n                label=\"Manufacturer\"\r\n                name=\"manufacturer\"\r\n                placeholder=\"Manufacturer\"\r\n                value={values.manufacturer}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                style={{ marginBottom: 3 }}\r\n            />\r\n            <TextField\r\n                label=\"Lead Time\"\r\n                name=\"leadTime\"\r\n                placeholder=\"Lead Time\"\r\n                value={values.leadTime}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                style={{ marginBottom: 3 }}\r\n            />\r\n\r\n            <TextField\r\n                label=\"Quickbook ID\"\r\n                name=\"qbid\"\r\n                placeholder=\"Quickbook ID\"\r\n                value={values.qbid}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                style={{ marginBottom: 3 }}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const Pricing = ({ values, errors, handleChange, handleBlur, touched }: IForm) => {\r\n    return (\r\n        <Box mt={1} display=\"grid\" gridTemplateColumns=\"auto auto\" gridColumnGap={10} gridRowGap={10}>\r\n            <TextField\r\n                label=\"Recent cost\"\r\n                name=\"recentCost\"\r\n                placeholder=\"recentCost\"\r\n                value={values.recentCost}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                style={{ marginBottom: 3 }}\r\n            />\r\n            <TextField\r\n                label=\"Labor Cost\"\r\n                name=\"laborCost\"\r\n                placeholder=\"Labor Cost\"\r\n                value={values.laborCost}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                style={{ marginBottom: 3 }}\r\n            />\r\n            <TextField\r\n                label=\"FIFO Value\"\r\n                name=\"fifo\"\r\n                placeholder=\"FIFO Value\"\r\n                value={values.fifo}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                style={{ marginBottom: 3 }}\r\n            />\r\n            <TextField\r\n                label=\"QOH Value\"\r\n                name=\"qohVal\"\r\n                placeholder=\"QOH Value\"\r\n                value={values.cost * values.qtyOnHand}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                style={{ marginBottom: 3 }}\r\n                disabled\r\n            />\r\n            <TextField\r\n                label=\"retail price\"\r\n                name=\"retailPrice\"\r\n                placeholder=\"Retail Price\"\r\n                value={values.retailPrice}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                style={{ marginBottom: 3 }}\r\n            />\r\n            <TextField\r\n                label=\"Resell Cost\"\r\n                value={values.resellCost}\r\n                name=\"resellCost\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={Boolean(errors.resellCost && touched.resellCost)}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const Quantity = ({ itemId, handleManualCount, values, handleUpdateQuantity }: IQForm) => {\r\n    // qtyOnHand -> ,\r\n    // qtyAvailable -> ,\r\n    // qtyOnOrder -> ,\r\n    // qtyAllocated -> ,\r\n    // qtyRemain -> ,\r\n\r\n    return (\r\n        <Box mt={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridRowGap={10} gridColumnGap={10}>\r\n            <TextField\r\n                label=\"Quantity on hand\"\r\n                placeholder=\"Quantity on hand\"\r\n                name=\"qtyOnHand\"\r\n                value={values.qtyOnHand}\r\n                disabled\r\n            />\r\n            <TextField\r\n                label=\"Quantity availabe\"\r\n                placeholder=\"Quantity availabe\"\r\n                name=\"qtyAvailable\"\r\n                value={values.qtyAvailable}\r\n                disabled\r\n            />\r\n            <TextField\r\n                label=\"Quantity on order\"\r\n                placeholder=\"Quantity on order\"\r\n                name=\"qtyOnOrder\"\r\n                value={values.qtyOnOrder}\r\n                disabled\r\n            />\r\n            <TextField\r\n                label=\"Quantity allocated\"\r\n                placeholder=\"Quantity allocated\"\r\n                name=\"qtyAllocated\"\r\n                value={values.qtyAllocated}\r\n                disabled\r\n            />\r\n            <TextField\r\n                label=\"Quantity remain\"\r\n                placeholder=\"Quantity remain\"\r\n                name=\"qtyRemain\"\r\n                value={values.qtyRemain}\r\n                style={{ gridColumnEnd: \"span 2\" }}\r\n                disabled\r\n            />\r\n\r\n            {handleUpdateQuantity && (\r\n                <Button kind=\"edit\" onClick={handleUpdateQuantity}>\r\n                    Update quantity\r\n                </Button>\r\n            )}\r\n            {handleManualCount && (\r\n                <Button kind=\"add\" onClick={handleManualCount}>\r\n                    Adjust manual count\r\n                </Button>\r\n            )}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const Shipping = ({ values, errors, handleChange, handleBlur, touched }: IForm) => {\r\n    return (\r\n        <Box display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridColumnGap={10} gridRowGap={10} mt={1}>\r\n            <TextField\r\n                style={{ gridColumnEnd: \"span 2\" }}\r\n                label=\"Last shipping fee\"\r\n                name=\"lastShippingFee\"\r\n                placeholder=\"Last shipping fee\"\r\n                value={values.lastShippingFee}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n            />\r\n            <TextField\r\n                label=\"weight Lb\"\r\n                name=\"weightLb\"\r\n                placeholder=\"weightLb\"\r\n                value={values.weightLb}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n            />\r\n            <TextField\r\n                label=\"weight Oz\"\r\n                name=\"weightOz\"\r\n                placeholder=\"weightOz\"\r\n                value={values.weightOz}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n            />\r\n            <TextField\r\n                label=\"shipping Lb\"\r\n                name=\"shippingLb\"\r\n                placeholder=\"shippingLb\"\r\n                value={values.shippingLb}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n            />\r\n            <TextField\r\n                label=\"shipping Oz\"\r\n                name=\"shippingOz\"\r\n                placeholder=\"shippingOz\"\r\n                value={values.shippingOz}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n            />\r\n            <TextField\r\n                style={{ gridColumnEnd: \"span 2\" }}\r\n                fullWidth\r\n                label=\"size\"\r\n                placeholder=\"size\"\r\n                name=\"size\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={Boolean(errors.size && touched.size)}\r\n                value={values.size}\r\n            />\r\n            <TextField\r\n                style={{ gridColumnEnd: \"span 2\" }}\r\n                fullWidth\r\n                label=\"Last Ordered Qty\"\r\n                placeholder=\"Last Ordered Qty\"\r\n                name=\"lastOrderedQty\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={Boolean(errors.lastOrderedQty && touched.lastOrderedQty)}\r\n                value={values.lastOrderedQty}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const DynamicFilterAndFields = ({ values = \"\", handleChange, handleBlur, selectedItem, device }: any) => {\r\n    const { data: filters } = useSWR<IFilter[]>(\"/filter\");\r\n    const { data: fields } = useSWR<IField[]>(\"/field\");\r\n\r\n    if (!filters) {\r\n        return <LinearProgress />;\r\n    }\r\n\r\n    return (\r\n        <Box mt={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridGap={10}>\r\n            {filters?.map((filter) => (\r\n                <Cluster\r\n                    cluster={filter}\r\n                    device={device}\r\n                    handleBlur={handleBlur}\r\n                    handleChange={handleChange}\r\n                    values={values}\r\n                />\r\n            ))}\r\n            <Divider style={{ gridColumnEnd: \"span 2\" }} />\r\n            {fields?.map((field) => (\r\n                <Level\r\n                    level={field}\r\n                    device={device}\r\n                    handleBlur={handleBlur}\r\n                    handleChange={handleChange}\r\n                    values={values}\r\n                />\r\n            ))}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const LastUsed = ({ values, errors, handleChange, handleBlur, touched }: IForm) => {\r\n    return (\r\n        <Box mt={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridColumnGap={10} gridRowGap={10}>\r\n            <TextField\r\n                name=\"uom\"\r\n                label=\"Unit Of Measure\"\r\n                placeholder=\"Unit Of Measure\"\r\n                value={values.uom}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n            />\r\n            <TextField\r\n                name=\"lastUsedInBom\"\r\n                placeholder=\"last Used In Bom\"\r\n                label=\"last Used In Bom\"\r\n                value={values.lastUsedInBom}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n            />\r\n\r\n            <TextField\r\n                name=\"minOrder\"\r\n                label=\"Minimum Order Quantity Per Purchase\"\r\n                placeholder=\"Minimum Order Quantity Per Purchase\"\r\n                value={values.minOrder}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                style={{ gridColumnEnd: \"span 2\" }}\r\n            />\r\n            <TextField\r\n                name=\"lastCount\"\r\n                label=\"Last Count\"\r\n                placeholder=\"Last Count\"\r\n                value={values.lastCount}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n            />\r\n            <TextField\r\n                label=\"last used in 90 days\"\r\n                value={values.usedInLastQuarter}\r\n                name=\"usedInLastQuarter\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={Boolean(errors.usedInLastQuarter && touched.usedInLastQuarter)}\r\n            />\r\n            <TextField\r\n                label=\"last used in 60 days\"\r\n                value={values.usedInLastTwoMonth}\r\n                name=\"usedInLastTwoMonth\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={Boolean(errors.usedInLastTwoMonth && touched.usedInLastSixty)}\r\n            />\r\n            <TextField\r\n                label=\"last used in 30 days\"\r\n                value={values.usedInLastMonth}\r\n                name=\"usedInLastMonth\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={Boolean(errors.usedInLastMonth && touched.usedInLastMonth)}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n","import { patch, get, post, delete_ } from \".\";\r\n\r\nimport { IItem } from \"./items\";\r\nimport { ISO } from \"./so\";\r\n\r\nexport interface IUnit {\r\n    id: string;\r\n    assignee: string[];\r\n    status: string;\r\n    seen: boolean;\r\n    number: string | number;\r\n    LineItemRecordId: string;\r\n    ItemId: IItem;\r\n    dueDate: number;\r\n    item: IItem;\r\n    so: ISO;\r\n    laborTime: string;\r\n    laborCost: number;\r\n    totalCost: number;\r\n    bomCost: number;\r\n    productionStatus: string;\r\n    options: any[];\r\n}\r\n\r\nexport interface IUnitHistory {\r\n    itemno: string;\r\n    item: IItem;\r\n    unit: IUnit;\r\n    id: string;\r\n    estimatedShipDate: string;\r\n    actualShipDate: string;\r\n    serialNumber: string;\r\n    status: string;\r\n    warrantyStatus: string;\r\n    warrantyEndDate: string;\r\n    sonumber: string;\r\n    soid: string;\r\n    so: ISO;\r\n    SODate: number;\r\n}\r\n\r\nexport const addImage = (unitId: string, file: any) => {\r\n    const data = new FormData();\r\n    data.append(\"photo\", file);\r\n    return post(`/unit/${unitId}/photo`, data);\r\n};\r\nexport const deleteImage = (unitId: string, data: any) => {\r\n    return delete_(`/unit/${unitId}/photo`, null, data);\r\n};\r\n\r\nexport const updateUnit = (id: string, data: any) => {\r\n    if (data.dueDate) {\r\n        let date = new Date(data.dueDate);\r\n        data.dueDate = date.getTime();\r\n    }\r\n    return patch(`/unit/${id}`, data);\r\n};\r\n\r\nexport const getAllUnits = () => {\r\n    return get(\"/unit\");\r\n};\r\n","import React, { ChangeEventHandler, useRef } from \"react\";\r\nimport { PhotoCamera } from \"@material-ui/icons\";\r\n\r\nimport Button from \"./Button\";\r\n\r\nconst FileUploader = ({\r\n    onChange,\r\n    accept,\r\n    multiple,\r\n}: {\r\n    onChange?: ChangeEventHandler<HTMLInputElement>;\r\n    multiple?: boolean;\r\n    accept?: string;\r\n}) => {\r\n    const fileUploader = useRef<HTMLInputElement | null>(null);\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                id=\"custom-file-input\"\r\n                hidden\r\n                type=\"file\"\r\n                ref={(e) => (fileUploader.current = e)}\r\n                onChange={onChange}\r\n                multiple={multiple}\r\n                accept={accept}\r\n            />\r\n            <label htmlFor=\"custom-file-input\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={() => fileUploader.current?.click()}\r\n                    startIcon={<PhotoCamera />}\r\n                >\r\n                    Upload\r\n                </Button>\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUploader;\r\n","import React, { useState } from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport QrReader from \"react-qr-reader\";\r\n\r\nimport Dialog from \"./Dialog\";\r\nimport Button from \"./Button\";\r\n\r\nexport default function QRCodeScanner({\r\n    open,\r\n    onClose,\r\n    onScan,\r\n}: {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onScan: (data: string | null) => void;\r\n}) {\r\n    const [number, setNumber] = useState<string | null>(null);\r\n    const handleError = (err: any) => {\r\n        console.log(err);\r\n    };\r\n\r\n    const handleScan = (data: string | null): void => {\r\n        // data && setNumber(data);\r\n        data && onScan(data);\r\n    };\r\n\r\n    return (\r\n        <Dialog title=\"QR Code Scanner\" open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n            {/* <Box m={1} display=\"grid\" gridTemplateColumns=\"3fr 1fr\" gridGap={10}> */}\r\n            <Box m={1} display=\"flex\">\r\n                <QrReader delay={300} onError={handleError} onScan={handleScan} style={{ width: \"100%\" }} />\r\n                {/* <Box>\r\n                    <Typography>Number: {number}</Typography>\r\n                    <Button disabled={!number} kind=\"add\" onClick={() => onScan(number)}>\r\n                        Submit\r\n                    </Button>\r\n                </Box> */}\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Box, Paper } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useSWR from \"swr\";\r\n\r\nimport Button from \"./Button\";\r\nimport TextField from \"./TextField\";\r\nimport QRCodeScanner from \"./QRCodeScanner\";\r\n\r\nimport { IItem } from \"../api/items\";\r\nimport { IUnit } from \"../api/units\";\r\n\r\nexport default function SearchBox({ panel }: { panel: \"unit\" | \"engineering\" | \"inventory\" }) {\r\n    const history = useHistory();\r\n\r\n    const [scanner, setScanner] = useState(false);\r\n    const [number, setNumber] = useState<string>();\r\n\r\n    const { data: item } = useSWR<IItem>(number ? `/item/no/${number}` : null);\r\n\r\n    return (\r\n        <Paper style={{ marginBottom: 10 }}>\r\n            <QRCodeScanner\r\n                open={scanner}\r\n                onClose={() => setScanner(false)}\r\n                onScan={(data) => {\r\n                    data && setNumber(data);\r\n                    setScanner(false);\r\n                }}\r\n            />\r\n\r\n            <Box p={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr 1fr 1fr\" gridGap={10}>\r\n                <TextField placeholder=\"Number\" value={number} onChange={(e) => setNumber(e.target.value)} />\r\n                <TextField disabled={!item} placeholder=\"Item Name\" value={item?.name || \"\"} />\r\n                <Button kind=\"edit\" onClick={() => setScanner(true)}>\r\n                    Scanner\r\n                </Button>\r\n                <Button\r\n                    disabled={!number}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => item && history.push(`/panel/${panel}/${item.id}`)}\r\n                >\r\n                    Redirect\r\n                </Button>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport const UnitSearchBox = () => {\r\n    const history = useHistory();\r\n\r\n    const [scanner, setScanner] = useState(false);\r\n    const [number, setNumber] = useState<string>();\r\n\r\n    const { data: unit } = useSWR<IUnit>(number ? `/unit/${number}` : null);\r\n\r\n    return (\r\n        <Paper style={{ marginBottom: 10 }}>\r\n            <QRCodeScanner\r\n                open={scanner}\r\n                onClose={() => setScanner(false)}\r\n                onScan={(data) => {\r\n                    data && setNumber(data);\r\n                    setScanner(false);\r\n                }}\r\n            />\r\n\r\n            <Box p={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr 1fr 1fr\" gridGap={10}>\r\n                <TextField placeholder=\"Number\" value={number} onChange={(e) => setNumber(e.target.value)} />\r\n                <TextField disabled={!unit} placeholder=\"Item Name\" value={unit?.item.name || \"\"} />\r\n                <Button kind=\"edit\" onClick={() => setScanner(true)}>\r\n                    Scanner\r\n                </Button>\r\n                <Button\r\n                    disabled={!number}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={() => unit && history.push(`/panel/production/${unit.id}`)}\r\n                >\r\n                    Redirect\r\n                </Button>\r\n            </Box>\r\n        </Paper>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\n\r\nimport TextField from \"../../../app/TextField\";\r\nimport { formatTimestampToDate } from \"../../../logic/date\";\r\nimport { ArraySelect } from \"../../../app/Inputs\";\r\n\r\ninterface IForm {\r\n    values: any;\r\n    errors: any;\r\n    touched: any;\r\n    handleChange: (e: any) => void;\r\n    handleBlur: (e: any) => void;\r\n    setFieldValue: any;\r\n    isSubmitting?: boolean;\r\n    device?: boolean;\r\n}\r\nexport const General = ({\r\n    isSubmitting,\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    touched,\r\n    setFieldValue,\r\n    device,\r\n}: IForm) => {\r\n    return (\r\n        <>\r\n            <Box display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridRowGap={10} gridColumnGap={10} pr={1}>\r\n                {/* Unite Name Unite Description Serial Number Status ID SO */}\r\n                <TextField\r\n                    label=\"Unit name\"\r\n                    placeholder=\"Unit name\"\r\n                    name=\"name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.name && touched.name)}\r\n                    value={values.item.name}\r\n                    style={{ gridColumnEnd: \"span 2\" }}\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    multiline\r\n                    style={{ gridColumnEnd: \"span 2\" }}\r\n                    rows={4}\r\n                    placeholder=\"Unit Description\"\r\n                    label=\"Unit Description\"\r\n                    name=\"description\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    value={values.item.description}\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    label=\"Serial Number\"\r\n                    value={values.item.no}\r\n                    name=\"no\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.no && touched.no)}\r\n                    placeholder=\"Serial Number\"\r\n                    style={{ gridColumnEnd: \"span 2\" }}\r\n                    disabled\r\n                />\r\n\r\n                <ArraySelect\r\n                    style={{ gridColumnEnd: \"span 2\" }}\r\n                    fullWidth\r\n                    label=\"Status\"\r\n                    items={[\r\n                        \"New\",\r\n                        \"Sales Pending\",\r\n                        \"Engineering Pending\",\r\n                        \"Purchasing Pending\",\r\n                        \"in Production\",\r\n                        \"In Evaluation\",\r\n                        \"In Testing\",\r\n                        \"In Shipping\",\r\n                        \"Shipped \",\r\n                        \"Started-Up\",\r\n                    ]}\r\n                    name=\"status\"\r\n                    value={values.status}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.status)}\r\n                />\r\n                <TextField\r\n                    label=\"ID\"\r\n                    placeholder=\"ID\"\r\n                    name=\"number\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.number && touched.number)}\r\n                    value={values.number}\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    label=\"SO\"\r\n                    value={values.so.number}\r\n                    name=\"so\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.so && touched.so)}\r\n                    placeholder=\"SO\"\r\n                    disabled\r\n                />\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const Status = ({\r\n    isSubmitting,\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    touched,\r\n    setFieldValue,\r\n    device,\r\n}: IForm) => {\r\n    return (\r\n        <>\r\n            <Box mt={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" style={{ gap: 10 }}>\r\n                <DateTimePicker\r\n                    size=\"small\"\r\n                    value={values.warrantyExpDate}\r\n                    name=\"warrantyExpDate\"\r\n                    label=\"Warranty exp date\"\r\n                    onChange={(date) => setFieldValue(\"warrantyExpDate\", date)}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <TextField\r\n                    size=\"small\"\r\n                    value={formatTimestampToDate(values?.so?.date)}\r\n                    name=\"purchaseDate\"\r\n                    label=\"purchase date\"\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    size=\"small\"\r\n                    value={formatTimestampToDate(values?.so?.estimatedShipDate)}\r\n                    name=\"estimatedShipDate\"\r\n                    label=\"Estimated ship date\"\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n\r\n                <TextField\r\n                    size=\"small\"\r\n                    value={formatTimestampToDate(values?.so?.actualShipDate)}\r\n                    name=\"actualShipDate\"\r\n                    label=\"Actual ship date\"\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n                <DateTimePicker\r\n                    size=\"small\"\r\n                    value={values.estimatedLeadTime}\r\n                    name=\"estimatedLeadTime\"\r\n                    label=\"Estimated Lead time\"\r\n                    onChange={(date) => setFieldValue(\"estimatedLeadTime\", date)}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <DateTimePicker\r\n                    size=\"small\"\r\n                    value={values.actualLeadTime}\r\n                    name=\"actualLeadTime\"\r\n                    label=\"Actual Lead Time\"\r\n                    onChange={(date) => setFieldValue(\"actualLeadTime\", date)}\r\n                    onBlur={handleBlur}\r\n                />\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const Expense = ({\r\n    isSubmitting,\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    touched,\r\n    setFieldValue,\r\n    device,\r\n}: IForm) => {\r\n    return (\r\n        <>\r\n            <Box mt={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" style={{ gap: 10 }}>\r\n                <TextField\r\n                    label=\"Item Labor Time\"\r\n                    value={values.itemLaborTime}\r\n                    name=\"itemLaborTime\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.itemLaborTime && touched.itemLaborTime)}\r\n                    placeholder=\"Item Labor Time\"\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    label=\"Item Labor Cost\"\r\n                    value={values.itemLaborCost}\r\n                    name=\"itemLaborCost\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.itemLaborCost && touched.itemLaborCost)}\r\n                    placeholder=\"Item Labor Cost\"\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    label=\"Item BOM Cost\"\r\n                    value={values.bomCost}\r\n                    name=\"bomCost\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.bomCost && touched.bomCost)}\r\n                    placeholder=\"Item BOM Cost\"\r\n                />\r\n                <TextField\r\n                    label=\"Item Total Cost\"\r\n                    value={values.ItemId?.cost}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.ItemId?.cost && touched.ItemId?.cost)}\r\n                    placeholder=\"Item Total Cost\"\r\n                    disabled\r\n                />\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const Shipping = ({\r\n    isSubmitting,\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    touched,\r\n    setFieldValue,\r\n    device,\r\n}: IForm) => {\r\n    return (\r\n        <>\r\n            <Box mt={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" style={{ gap: 10 }}>\r\n                <TextField\r\n                    label=\"Entity\"\r\n                    value={values.entity}\r\n                    name=\"entity\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.entity && touched.entity)}\r\n                    placeholder=\"Entity\"\r\n                />\r\n                <TextField\r\n                    label=\"Shipping Address\"\r\n                    value={values.shippingAddress}\r\n                    name=\"shippingAddress\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.shippingAddress && touched.shippingAddress)}\r\n                    placeholder=\"Shipping Address\"\r\n                />\r\n                <TextField\r\n                    label=\"Contact Person\"\r\n                    value={values.contactPerson}\r\n                    name=\"contactPerson\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.contactPerson && touched.contactPerson)}\r\n                    placeholder=\"Contact Person\"\r\n                />\r\n                <TextField\r\n                    label=\"Contact Person Email\"\r\n                    value={values.contactPersonEmail}\r\n                    name=\"contactPersonEmail\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.contactPersonEmail && touched.contactPersonEmail)}\r\n                    placeholder=\"Contact Person Email\"\r\n                />\r\n                <TextField\r\n                    label=\"Contact Person Phone Number\"\r\n                    value={values.contactPersonPhone}\r\n                    name=\"contactPersonPhone\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.contactPersonPhone && touched.contactPersonPhone)}\r\n                    placeholder=\"Contact Person Phone Number\"\r\n                />\r\n                <TextField\r\n                    label=\"Unit Location\"\r\n                    value={values.unitLocation}\r\n                    name=\"unitLocation\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.unitLocation && touched.unitLocation)}\r\n                    placeholder=\"Unit Location\"\r\n                />\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Box, Step, StepLabel, Stepper } from \"@material-ui/core\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport useSWR, { mutate } from \"swr\";\r\n\r\nimport Dialog from \"../../app/Dialog\";\r\nimport Button from \"../../app/Button\";\r\nimport TextField from \"../../app/TextField\";\r\nimport UploadButton from \"../../app/FileUploader\";\r\nimport * as Yup from \"yup\";\r\nimport { createShipment, deleteShipment, IShipment, updateShipment } from \"../../api/shipment\";\r\nimport { addImage, deleteImage } from \"../../api/units\";\r\n\r\nconst schema = Yup.object().shape({\r\n    // name: Yup.string().required(),\r\n});\r\n\r\nconst AddShipModal = ({ open, onClose, unitId }: { open: boolean; onClose: () => void; unitId: string }) => {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [img, setImg] = useState<any>();\r\n\r\n    const { data: unit } = useSWR(`/unit/${unitId}`);\r\n\r\n    const handleFileChange = async (e: any) => {\r\n        if (unitId) {\r\n            if (!(e.target.files || e.target.files[0])) {\r\n                return;\r\n            }\r\n            let file = e.target.files[0];\r\n            let url = URL.createObjectURL(file);\r\n            const resp = await addImage(unitId, file);\r\n            if (resp) {\r\n                setImg(url);\r\n                mutate(`/unit/${unitId}`);\r\n            }\r\n        }\r\n    };\r\n    const handleFileDelete = async (url: string) => {\r\n        if (unitId) {\r\n            const data = { url: url };\r\n            const resp = await deleteImage(unitId, data);\r\n            if (resp) {\r\n                mutate(`/unit/${unitId}`);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleNext = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n    };\r\n    const handleSubmit = async (values: any, setSubmitting: any) => {\r\n        try {\r\n            await createShipment({ ...values, UnitId: unitId });\r\n            mutate(`/shipment?UnitId=${unitId}`);\r\n            onClose();\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"md\" title=\"Add New Shipment\">\r\n            <Formik initialValues={{} as any} onSubmit={handleSubmit} validationSchema={schema}>\r\n                {({ values, errors, touched, handleChange, handleBlur, setFieldValue, setSubmitting }) => (\r\n                    <Form>\r\n                        <Stepper activeStep={activeStep}>\r\n                            <Step>\r\n                                <StepLabel>Packing Instruction</StepLabel>\r\n                            </Step>\r\n                            <Step>\r\n                                <StepLabel>Packing</StepLabel>\r\n                            </Step>\r\n                            <Step>\r\n                                <StepLabel>Pictures</StepLabel>\r\n                            </Step>\r\n                            <Step>\r\n                                <StepLabel>Shipped</StepLabel>\r\n                            </Step>\r\n                        </Stepper>\r\n\r\n                        <Box p={5} style={{ padding: \"30px 15%\" }}>\r\n                            {activeStep === 0 && <></>}\r\n                            {activeStep === 1 && <></>}\r\n                            {activeStep === 2 && (\r\n                                <>\r\n                                    <div\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            width: \"100%\",\r\n                                            justifyContent: \"center\",\r\n                                        }}\r\n                                    >\r\n                                        <UploadButton onChange={handleFileChange} accept=\"image/*\" />\r\n                                    </div>\r\n                                    <div>\r\n                                        {unit &&\r\n                                            unit.photo[0] &&\r\n                                            unit.photo.map((url: string) => (\r\n                                                <>\r\n                                                    <img\r\n                                                        style={{\r\n                                                            maxWidth: \"100%\",\r\n                                                            height: \"auto\",\r\n                                                            maxHeight: 400,\r\n                                                            margin: \"0px auto\",\r\n                                                        }}\r\n                                                        alt=\"\"\r\n                                                        src={`http://digitalphocus.ir${url}`}\r\n                                                    />\r\n                                                    <Button kind=\"delete\" onClick={() => handleFileDelete(url)}>\r\n                                                        delete\r\n                                                    </Button>\r\n                                                </>\r\n                                            ))}\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                            {activeStep === 3 && (\r\n                                <ShippedForm\r\n                                    values={values}\r\n                                    touched={touched}\r\n                                    errors={errors}\r\n                                    handleBlur={handleBlur}\r\n                                    handleChange={handleChange}\r\n                                    setFieldValue={setFieldValue}\r\n                                />\r\n                            )}\r\n                        </Box>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            alignItems=\"center\"\r\n                            justifyContent=\"space-between\"\r\n                            margin=\"10px auto\"\r\n                            width=\"50%\"\r\n                        >\r\n                            <Button variant=\"contained\" disabled={activeStep === 0} onClick={handleBack}>\r\n                                Back\r\n                            </Button>\r\n                            <Button type=\"submit\" kind=\"add\">\r\n                                Save\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleNext}\r\n                                disabled={activeStep === 3}\r\n                            >\r\n                                Next\r\n                            </Button>\r\n                        </Box>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </Dialog>\r\n    );\r\n};\r\nexport const EditShipModal = ({\r\n    open,\r\n    onClose,\r\n    unitId,\r\n    init,\r\n}: {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    unitId: string;\r\n    init: IShipment;\r\n}) => {\r\n    const handleSubmit = async (values: any, setSubmitting: any) => {\r\n        try {\r\n            await updateShipment(init.id, { ...values, UnitId: unitId });\r\n            mutate(`/shipment?UnitId=${unitId}`);\r\n            onClose();\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            await deleteShipment(init.id);\r\n            mutate(`/shipment?UnitId=${unitId}`);\r\n            onClose();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} fullWidth maxWidth=\"md\" title=\"Edit Shipment\">\r\n            <Formik initialValues={init as IShipment} onSubmit={handleSubmit} validationSchema={schema}>\r\n                {({ values, errors, touched, handleChange, handleBlur, setFieldValue, setSubmitting }) => (\r\n                    <Form>\r\n                        <Box p={5} style={{ padding: \"30px 15%\" }}>\r\n                            <ShippedForm\r\n                                values={values}\r\n                                touched={touched}\r\n                                errors={errors}\r\n                                handleBlur={handleBlur}\r\n                                handleChange={handleChange}\r\n                                setFieldValue={setFieldValue}\r\n                            />\r\n                        </Box>\r\n                        <Box\r\n                            display=\"flex\"\r\n                            alignItems=\"center\"\r\n                            justifyContent=\"space-between\"\r\n                            margin=\"10px auto\"\r\n                            width=\"50%\"\r\n                        >\r\n                            <Button type=\"submit\" kind=\"edit\">\r\n                                Save\r\n                            </Button>\r\n                            <Button\r\n                                kind=\"delete\"\r\n                                onClick={() => {\r\n                                    handleDelete();\r\n                                }}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </Box>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default AddShipModal;\r\n\r\nexport const ShippedForm = ({\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n}: {\r\n    values: any;\r\n    errors: any;\r\n    touched: any;\r\n    handleBlur: any;\r\n    handleChange: any;\r\n    setFieldValue: any;\r\n}) => {\r\n    return (\r\n        <Box my={2} display=\"grid\" gridColumnGap={10} gridRowGap={10} gridTemplateColumns=\"1fr 1fr\">\r\n            <TextField\r\n                name=\"deliveryMethod\"\r\n                value={values.deliveryMethod}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                error={Boolean(errors.deliveryMethod)}\r\n                helperText={touched.deliveryMethod && errors.deliveryMethod && String(errors.deliveryMethod)}\r\n                label=\"Delivery Method\"\r\n                placeholder=\"Delivery Method\"\r\n            />\r\n            <TextField\r\n                name=\"trackingNumber\"\r\n                value={values.trackingNumber}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                error={Boolean(errors.trackingNumber)}\r\n                helperText={touched.trackingNumber && errors.trackingNumber && String(errors.trackingNumber)}\r\n                label=\"Tracking Number\"\r\n                placeholder=\"Tracking Number\"\r\n            />\r\n            <TextField\r\n                name=\"carrier\"\r\n                value={values.carrier}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                error={Boolean(errors.carrier)}\r\n                helperText={touched.carrier && errors.carrier && String(errors.carrier)}\r\n                label=\"Carrier\"\r\n                placeholder=\"Carrier\"\r\n            />\r\n            <TextField\r\n                name=\"shipmentNo\"\r\n                value={values.shipmentNo}\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                error={Boolean(errors.shipmentNo)}\r\n                helperText={touched.shipmentNo && errors.shipmentNo && String(errors.shipmentNo)}\r\n                label=\"shipment No.\"\r\n                placeholder=\"shipment No.\"\r\n            />\r\n            <DateTimePicker\r\n                name=\"deliveryDate\"\r\n                value={values.deliveryDate || null}\r\n                onChange={(d) => setFieldValue(\"deliveryDate\", d && new Date(d?.toISOString()).getTime())}\r\n                onBlur={handleBlur}\r\n                error={Boolean(errors.deliveryDate)}\r\n                helperText={errors.deliveryDate}\r\n                size=\"small\"\r\n                placeholder=\"Delivery Date\"\r\n                label=\"Delivery Date\"\r\n            />\r\n            <DateTimePicker\r\n                name=\"shipDate\"\r\n                value={values.shipDate || null}\r\n                onChange={(d) => setFieldValue(\"shipDate\", d && new Date(d?.toISOString()).getTime())}\r\n                onBlur={handleBlur}\r\n                error={Boolean(errors.shipDate)}\r\n                helperText={errors.shipDate}\r\n                size=\"small\"\r\n                placeholder=\"Shipping Date\"\r\n                label=\"Shipping Date\"\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n","import { delete_, get, patch, post } from \".\";\r\nimport { IUnit } from \"./units\";\r\n\r\nexport interface IShipment {\r\n    id: string;\r\n    deliveryMethod: string;\r\n    trackingNumber: string;\r\n    deliveryDate: number;\r\n    shipmentNo: string;\r\n    shipDate: number;\r\n    targetDate: number;\r\n    carrier: string;\r\n    UnitId: IUnit;\r\n\r\n    createdAt: number;\r\n    updatedAt: number;\r\n    __v: number;\r\n}\r\n\r\nexport const getShipments = () => {\r\n    return get(\"/shipment\");\r\n};\r\n\r\nexport const createShipment = (data: IShipment) => {\r\n    return post(\"/shipment\", data);\r\n};\r\n\r\nexport const updateShipment = (id: string, data: IShipment) => {\r\n    return patch(`/shipment/${id}`, data);\r\n};\r\n\r\nexport const deleteShipment = (id: string) => {\r\n    return delete_(`/shipment/${id}`);\r\n};\r\n","import React, { useMemo, useState, Fragment } from \"react\";\r\nimport { Box, Tabs, Tab } from \"@material-ui/core\";\r\nimport { GridColDef, GridColumns } from \"@material-ui/data-grid\";\r\nimport useSWR, { mutate } from \"swr\";\r\n\r\nimport { General, Status, Expense, Shipping } from \"./Forms\";\r\n\r\nimport Button from \"../../../app/Button\";\r\nimport { BasePaper } from \"../../../app/Paper\";\r\nimport BaseDataGrid from \"../../../app/BaseDataGrid\";\r\n\r\nimport { IUnit, updateUnit } from \"../../../api/units\";\r\n\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Toast from \"../../../app/Toast\";\r\nimport { IDocument } from \"../../../api/document\";\r\nimport { formatTimestampToDate } from \"../../../logic/date\";\r\nimport { fileType } from \"../../../logic/fileType\";\r\nimport DocumentModal from \"../../Modals/DocumentModals\";\r\nimport ShipmentModal, { EditShipModal } from \"../../Modals/ShipmentModal\";\r\nimport { getModifiedValues } from \"../../../logic/utils\";\r\nimport { DynamicFilterAndFields } from \"../../Items/Forms\";\r\nimport { IShipment } from \"../../../api/shipment\";\r\n\r\nconst schema = Yup.object().shape({});\r\n\r\nfunction Details({ unit }: { unit: IUnit }) {\r\n    const handleSubmit = async (data: any) => {\r\n        try {\r\n            if (unit?.id) {\r\n                await updateUnit(unit.id, getModifiedValues(data, unit));\r\n                await mutate(\"/unit\");\r\n                Toast(\"Unit updated\", \"success\");\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const [infoActiveTab, setInfoActiveTab] = useState(0);\r\n    const [gridActiveTab, setGridActiveTab] = useState(0);\r\n    const [addDocModal, setAddDocModal] = useState(false);\r\n    const [addShipModal, setAddShipModal] = useState(false);\r\n    const [editShip, setEditShip] = useState(false);\r\n    const [selectedShip, setSelectedShip] = useState<IShipment>();\r\n\r\n    const { data: warranties } = useSWR(gridActiveTab === 1 ? `/lineservice?UnitId=${unit.id}` : null);\r\n    const { data: unitBoms } = useSWR(gridActiveTab === 2 ? `/ubom?UnitId=${unit.id}` : null);\r\n    const { data: documents } = useSWR<IDocument[]>(gridActiveTab === 3 ? `/document/unit/${unit.id}` : null);\r\n    const { data: shipments } = useSWR(gridActiveTab === 4 ? `/shipment?UnitId=${unit.id}` : null);\r\n    const { data: SOI } = useSWR(gridActiveTab === 6 ? `/unit?SOId=${unit.so.id}` : null);\r\n    const { data: fsh } = useSWR(gridActiveTab === 7 ? `/ticket?UnitId=${unit.id}` : null);\r\n    const bomCols = useMemo<GridColDef[]>(\r\n        () => [\r\n            { field: \"Line\", width: 80 },\r\n            { field: \"Component\", width: 180 },\r\n            { field: \"Component Name\", width: 180 },\r\n            { field: \"Component Location\", flex: 1 },\r\n            { field: \"UM\", width: 120 },\r\n            { field: \"QTY\", width: 120 },\r\n            { field: \"Note\", width: 200 },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const warCols = useMemo<GridColumns>(\r\n        () => [\r\n            { field: \"date\", headerName: \"Date\", type: \"date\", width: 120 },\r\n            { field: \"number\", headerName: \"Warranty Number\", width: 160 },\r\n            { field: \"name\", headerName: \"Name\", width: 160 },\r\n            { field: \"description\", headerName: \"Note\", flex: 1 },\r\n            { field: \"term\", headerName: \"Term\", flex: 1 },\r\n            { field: \"status\", headerName: \"Status\", width: 150 },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const shipCols = useMemo<GridColumns>(\r\n        () => [\r\n            { field: \"targetDate\", headerName: \"Target Date\", type: \"date\", width: 130 },\r\n            { field: \"shipDate\", headerName: \"Actual Date\", width: 130 },\r\n            { field: \"shipmentNo\", headerName: \"Shipment No\", width: 130 },\r\n            { field: \"carrier\", headerName: \"Carrier\", flex: 1 },\r\n            { field: \"deliveryMethod\", headerName: \"Delivery Method\", flex: 1 },\r\n            { field: \"trackingNumber\", headerName: \"Tracking Number\", width: 150 },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const optionCols = useMemo<GridColumns>(\r\n        () => [\r\n            { field: \"Option Number\", valueFormatter: (params) => params.row?.ItemId?.no, flex: 1 },\r\n            { field: \"Option Name\", valueFormatter: (params) => params.row?.ItemId?.name, flex: 1 },\r\n            { field: \"Option Description\", valueFormatter: (params) => params.row?.ItemId?.description, flex: 1 },\r\n            { field: \"quantity\", headerName: \"Quantity\", width: 100 },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const fshCols = useMemo<GridColumns>(\r\n        () => [\r\n            { field: \"Date\", valueFormatter: (params) => formatTimestampToDate(params.row?.createdAt), width: 120 },\r\n            { field: \"Ticket ID\", valueFormatter: (params) => params.row?.number, width: 120 },\r\n            { field: \"Subject\", valueFormatter: (params) => params.row?.subject, flex: 1 },\r\n            { field: \"Unit\", valueFormatter: (params) => params.row?.UnitId?.number, width: 150 },\r\n            { field: \"Assigned To\", valueFormatter: (params) => params.row?.assignee?.username, width: 120 },\r\n            { field: \"Contact\", valueFormatter: (params) => params.row?.ContactId.lastName, width: 120 },\r\n            { field: \"Status\", valueFormatter: (params) => params.row?.status, width: 120 },\r\n        ],\r\n        []\r\n    );\r\n    const docCols = useMemo<GridColumns>(\r\n        () => [\r\n            {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                valueFormatter: (params) => formatTimestampToDate(params.row?.createdAt),\r\n                width: 120,\r\n            },\r\n            {\r\n                field: \"EmployeeId\",\r\n                headerName: \"Creator\",\r\n                valueFormatter: (params) => params.row?.employee?.username,\r\n                width: 120,\r\n            },\r\n            { field: \"name\", headerName: \"Name\", flex: 1 },\r\n            { field: \"id\", headerName: \"ID\", width: 200 },\r\n            { field: \"description\", headerName: \"Description\", flex: 1 },\r\n            {\r\n                field: \"type\",\r\n                headerName: \"File Type\",\r\n                valueFormatter: (params) => fileType(params.row?.path),\r\n                width: 120,\r\n            },\r\n        ],\r\n        []\r\n    );\r\n    // Part Number\tDescription\tQTY\r\n    const SOICols = useMemo<GridColumns>(\r\n        () => [\r\n            { field: \"Option Number\", valueFormatter: (params) => params.row?.ItemId?.no, flex: 1 },\r\n            { field: \"Option Description\", valueFormatter: (params) => params.row?.ItemId?.description, flex: 1 },\r\n        ],\r\n        []\r\n    );\r\n    return (\r\n        <>\r\n            <DocumentModal open={addDocModal} onClose={() => setAddDocModal(false)} itemId={unit?.id} model=\"unit\" />\r\n            {unit && unit.id && (\r\n                <ShipmentModal open={addShipModal} onClose={() => setAddShipModal(false)} unitId={unit.id} />\r\n            )}\r\n            {unit && unit.id && selectedShip && (\r\n                <EditShipModal\r\n                    open={editShip}\r\n                    onClose={() => setEditShip(false)}\r\n                    unitId={unit.id}\r\n                    init={selectedShip}\r\n                />\r\n            )}\r\n            <Formik initialValues={unit as IUnit} validationSchema={schema} onSubmit={handleSubmit}>\r\n                {({ values, errors, handleChange, handleBlur, isSubmitting, setFieldValue, touched }) => (\r\n                    <Form>\r\n                        <Box mb={2} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridGap={10}>\r\n                            <BasePaper>\r\n                                <General\r\n                                    values={values}\r\n                                    errors={errors}\r\n                                    touched={touched}\r\n                                    handleBlur={handleBlur}\r\n                                    handleChange={handleChange}\r\n                                    setFieldValue={setFieldValue}\r\n                                />\r\n                                <Box textAlign=\"center\" my={1}>\r\n                                    <Button disabled={isSubmitting} kind=\"add\" type=\"submit\">\r\n                                        Save\r\n                                    </Button>\r\n                                </Box>\r\n                            </BasePaper>\r\n                            <BasePaper>\r\n                                <Tabs\r\n                                    value={infoActiveTab}\r\n                                    onChange={(e, nv) => setInfoActiveTab(nv)}\r\n                                    style={{ marginBottom: \"0.5em\" }}\r\n                                >\r\n                                    <Tab label=\"Image\" />\r\n                                    <Tab label=\"Status\" />\r\n                                    <Tab label=\"Expense\" />\r\n                                    <Tab label=\"Shipping\" />\r\n                                    <Tab label=\"Cluster & Level\" />\r\n                                </Tabs>\r\n                                {infoActiveTab === 0 && (\r\n                                    <Box\r\n                                        mt={1}\r\n                                        height=\"100%\"\r\n                                        display=\"flex\"\r\n                                        justifyContent=\"center\"\r\n                                        alignItems=\"center\"\r\n                                        flexDirection=\"column\"\r\n                                        gridGap={10}\r\n                                    >\r\n                                        {unit?.item?.photo && (\r\n                                            <img\r\n                                                style={{\r\n                                                    maxWidth: \"100%\",\r\n                                                    height: \"auto\",\r\n                                                    maxHeight: 400,\r\n                                                    margin: \"0px auto\",\r\n                                                }}\r\n                                                alt=\"\"\r\n                                                src={`http://digitalphocus.ir${unit?.item?.photo}`}\r\n                                            />\r\n                                        )}\r\n                                    </Box>\r\n                                )}\r\n                                {infoActiveTab === 1 && (\r\n                                    <Status\r\n                                        values={values}\r\n                                        errors={errors}\r\n                                        touched={touched}\r\n                                        handleBlur={handleBlur}\r\n                                        handleChange={handleChange}\r\n                                        setFieldValue={setFieldValue}\r\n                                    />\r\n                                )}\r\n                                {infoActiveTab === 2 && (\r\n                                    <Expense\r\n                                        values={values}\r\n                                        errors={errors}\r\n                                        touched={touched}\r\n                                        handleBlur={handleBlur}\r\n                                        handleChange={handleChange}\r\n                                        setFieldValue={setFieldValue}\r\n                                    />\r\n                                )}\r\n                                {infoActiveTab === 3 && (\r\n                                    <Shipping\r\n                                        values={values}\r\n                                        errors={errors}\r\n                                        touched={touched}\r\n                                        handleBlur={handleBlur}\r\n                                        handleChange={handleChange}\r\n                                        setFieldValue={setFieldValue}\r\n                                    />\r\n                                )}\r\n                                {infoActiveTab === 4 && (\r\n                                    <DynamicFilterAndFields\r\n                                        values={values.item}\r\n                                        handleChange={handleChange}\r\n                                        handleBlur={handleBlur}\r\n                                        setFieldValue={setFieldValue}\r\n                                        errors={errors}\r\n                                        touched={touched}\r\n                                        selectedItem={unit?.item}\r\n                                    />\r\n                                )}\r\n                            </BasePaper>\r\n                        </Box>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n            <BasePaper>\r\n                <Tabs value={gridActiveTab} onChange={(e, nv) => setGridActiveTab(nv)}>\r\n                    <Tab label=\"Phocus Monitor\" /> 0\r\n                    <Tab label=\"Warranties\" /> 1\r\n                    <Tab label=\"Job\" /> 2\r\n                    <Tab label=\"Documents\" /> 3\r\n                    <Tab label=\"Shipment\" /> 4\r\n                    <Tab label=\"Quality Control\" /> 5\r\n                    <Tab label=\"Sales Order Items\" /> 6\r\n                    <Tab label=\"Field Service History\" /> 7\r\n                    <Tab label=\"Note\" /> 8\r\n                    <Tab label=\"Auditing\" /> 9\r\n                </Tabs>\r\n                {gridActiveTab === 1 && (\r\n                    <Box>\r\n                        <BaseDataGrid cols={warCols} rows={warranties || []} onRowSelected={(d) => {}} />\r\n                    </Box>\r\n                )}\r\n                {gridActiveTab === 2 && <BaseDataGrid cols={bomCols} rows={unitBoms || []} onRowSelected={(r) => {}} />}\r\n                {gridActiveTab === 3 && (\r\n                    <>\r\n                        <Button\r\n                            onClick={() => {\r\n                                setAddDocModal(true);\r\n                            }}\r\n                            variant=\"outlined\"\r\n                        >\r\n                            + Add Document\r\n                        </Button>\r\n                        <BaseDataGrid\r\n                            height={250}\r\n                            cols={docCols}\r\n                            rows={documents && documents.length ? documents : []}\r\n                            onRowSelected={(v) => {}}\r\n                        />\r\n                    </>\r\n                )}\r\n                {gridActiveTab === 4 && (\r\n                    <>\r\n                        <Button\r\n                            onClick={() => {\r\n                                setAddShipModal(true);\r\n                            }}\r\n                            variant=\"outlined\"\r\n                        >\r\n                            + Add Shipment\r\n                        </Button>\r\n                        <BaseDataGrid\r\n                            cols={shipCols}\r\n                            rows={shipments || []}\r\n                            onRowSelected={(v) => {\r\n                                setSelectedShip(v);\r\n                                setEditShip(true);\r\n                            }}\r\n                        />\r\n                    </>\r\n                )}\r\n                {gridActiveTab === 6 && (\r\n                    <BaseDataGrid cols={SOICols} rows={SOI.result || []} onRowSelected={(r) => {}} />\r\n                )}\r\n                {gridActiveTab === 7 && <BaseDataGrid cols={fshCols} rows={fsh || []} onRowSelected={(r) => {}} />}\r\n            </BasePaper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Details;\r\n","import React, { useState } from \"react\";\r\nimport { GridColumns } from \"@material-ui/data-grid\";\r\nimport { Box, Tabs, Tab } from \"@material-ui/core\";\r\nimport useSwr from \"swr\";\r\n\r\nimport BaseDataGrid from \"../../../app/BaseDataGrid\";\r\nimport { BasePaper } from \"../../../app/Paper\";\r\n\r\nimport Details from \"./Details\";\r\n\r\nimport { formatTimestampToDate } from \"../../../logic/date\";\r\nimport { UnitSearchBox } from \"../../../app/SearchBox\";\r\n\r\nexport default function Unit() {\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [selectedUnit, setSelectedUnit] = useState<any>();\r\n\r\n    const { data: units } = useSwr(\"/unit\");\r\n\r\n    const cols: GridColumns = [\r\n        {\r\n            field: \"Device\",\r\n            headerName: \"Device\",\r\n            flex: 1,\r\n            valueFormatter: (r) => r.row?.item?.no,\r\n        },\r\n        {\r\n            field: \"EST.S.D\",\r\n            valueFormatter: (r) => formatTimestampToDate(r.row?.so?.estimatedShipDate),\r\n            width: 120,\r\n        },\r\n        {\r\n            field: \"Act.S.D.\",\r\n            valueFormatter: (r) => formatTimestampToDate(r.row?.so?.actualShipDate),\r\n            width: 120,\r\n        },\r\n        { field: \"status\", headerName: \"Status\", width: 100 },\r\n        { field: \"warrantyStatus\", headerName: \"Warranty Status\", width: 150 },\r\n        { field: \"warrantyEndDate\", headerName: \"warranty End Date\", width: 150 },\r\n        {\r\n            field: \"SO NO.\",\r\n            headerName: \"SO NO.\",\r\n            width: 90,\r\n            valueFormatter: (r) => r.row?.so?.number,\r\n        },\r\n        {\r\n            field: \"SO Date\",\r\n            headerName: \"SO Date\",\r\n            width: 100,\r\n            valueFormatter: (r) => formatTimestampToDate(r.row?.so?.createdAt),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Box>\r\n            {/* <Box mb={2} display=\"flex\" alignItems=\"center\">\r\n                <Button\r\n                    onClick={() => setAddCall(true)}\r\n                    style={{\r\n                        backgroundColor: \"#1a73e8\",\r\n                        color: \"#fff\",\r\n                        margin: \"0 0.5em\",\r\n                        padding: \" 6px 15px\",\r\n                        boxShadow: \"rgba(99, 99, 99, 0.2) 0px 2px 8px 0px\",\r\n                    }}\r\n                >\r\n                    <AddRoundedIcon />\r\n                    Add Ticket\r\n                </Button>\r\n                <Button\r\n                    kind=\"delete\"\r\n                    disabled={!selectedUnit}\r\n                    onClick={() => setConfirm(true)}\r\n                    style={{ margin: \"0 0.5em\" }}\r\n                >\r\n                    Delete Ticket\r\n                </Button>\r\n                <Button kind=\"add\" onClick={() => setCTagModal(true)} style={{ margin: \"0 0.5em\" }}>\r\n                    Add Call Tags\r\n                </Button>\r\n            </Box> */}\r\n            <BasePaper>\r\n                <Tabs\r\n                    value={activeTab}\r\n                    textColor=\"primary\"\r\n                    onChange={(e, nv) => setActiveTab(nv)}\r\n                    style={{ marginBottom: 10 }}\r\n                >\r\n                    <Tab label=\"List\" />\r\n                    <Tab label=\"Details\" disabled={!selectedUnit} />\r\n                </Tabs>\r\n                {activeTab === 0 && units && (\r\n                    <>\r\n                        <UnitSearchBox />\r\n                        <BaseDataGrid\r\n                            rows={units.result || []}\r\n                            cols={cols}\r\n                            onRowSelected={(d) => {\r\n                                setSelectedUnit(d);\r\n                                setActiveTab(1);\r\n                            }}\r\n                        />\r\n                    </>\r\n                )}\r\n                {activeTab === 1 && selectedUnit && <Details unit={selectedUnit} />}\r\n            </BasePaper>\r\n        </Box>\r\n    );\r\n}\r\n"],"sourceRoot":""}