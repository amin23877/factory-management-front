{"version":3,"sources":["features/Activity/Forms.tsx","features/Activity/EditForm.tsx","features/Activity/CatStatusPrioModal.tsx","features/Activity/AddActivityModal.tsx","pages/Activity.tsx","app/Button.tsx","app/BaseDataGrid.tsx","app/Inputs/index.tsx","app/Paper.tsx","logic/date.ts","api/document.ts","components/PDFPreview/index.tsx","features/Modals/DocumentModals.tsx","app/Snack.tsx","logic/fileType.ts","features/Modals/NoteModals.tsx","../node_modules/@material-ui/icons/PhotoSizeSelectActualOutlined.js","api/contact.ts","app/Tabs.tsx","api/customer.ts","api/quote.ts","api/note.ts","app/SideUtilityList.tsx","api/project.ts","../node_modules/@material-ui/core/esm/Link/Link.js","../node_modules/@material-ui/icons/DeleteRounded.js","../node_modules/@material-ui/icons/AddRounded.js","app/Forms.tsx","api/activity.ts","../node_modules/@material-ui/icons/CategoryRounded.js"],"names":["schema","Yup","shape","name","required","EditActivityForm","open","init","onDone","handleSubmit","data","a","setSubmitting","id","updateActivity","createActivity","console","log","initialValues","validationSchema","onSubmit","values","errors","touched","handleChange","handleBlur","Box","display","style","marginRight","flex","justifyContent","my","TextField","error","Boolean","label","value","onChange","onBlur","marginLeft","subject","location","notes","alignItems","type","startTime","substr","endTime","request","getCustomers","itemTitleField","itemValueField","ClientId","getContacts","ContactId","fetcher","ActivityPriorityId","getProjects","ProjectId","getAllEmployees","EmployeeId","getQuotes","QuoteId","ActivityCategoryId","ActivityStatusId","height","minHeight","flexDirection","FormControlLabel","control","checked","allDayActivity","notifyOnDay","recurring","notifyNow","doNotShowOnCalendar","width","marginTop","Button","kind","EditForm","selectedActivity","docs","onNoteSelected","onDocSelected","useState","activeTab","setActiveTab","noteCols","useMemo","field","headerName","valueFormatter","params","formatTimestampToDate","row","createdAt","username","docCols","employee","fileType","path","marginBottom","textColor","e","nv","Tab","BaseDataGrid","cols","rows","onRowSelected","CatTypeFamilyModal","onClose","Dialog","title","addRecord","post","deleteRecord","delete_","getRecord","updateRecord","patch","AddActivityModal","maxWidth","m","gridTemplateColumns","gridColumnGap","gridRowGap","get","paddingTop","paddingBottom","Activity","addActivity","setAddActivity","catStatPrio","setCatStatPrio","activities","setActivities","setSelectedActivity","addNote","setAddNote","addDoc","setAddDoc","selNote","setSelNote","selDoc","setSelDoc","confirm","setConfirm","snack","setSnack","msg","setMsg","setNotes","setDocs","refreshNotes","getAllModelNotes","resp","refreshDocs","getAllModelDocuments","useEffect","refreshActivities","getActivities","handleDelete","deleteActivity","undefined","Snack","Confirm","onConfirm","noteData","itemId","model","docData","disabled","onClick","flexGrow","mt","boxShadow","ListItem","IconButton","ml","d","MyButton","props","useStyles","makeStyles","btnStyle","background","Gradients","success","warning","icons","add","edit","delete","classes","className","startIcon","variant","color","children","useDataGridStyles","root","backgroundColor","border","opacity","fill","density","components","Toolbar","GridToolbar","r","columns","ScrollDataGrid","MaterialFieldSelect","limit","getOptionLabel","getOptionValue","options","setOptions","findValue","setFindValue","t","find","o","then","slice","catch","renderInput","placeholder","size","ObjectSelect","inputStyle","items","keyField","select","length","map","item","i","FieldSelect","getOptionList","setItems","ArraySelect","BaseSelect","BasePaper","withStyles","theme","borderRadius","padding","IconPaper","spacing","elevation","timestamp","format","createAModelDocument","file","description","fileName","formData","FormData","append","updateAModelDocument","docid","deleteAModelDocument","PDFPreview","pdf","src","mutateDocuments","mutate","DocumentModal","fileUploader","useRef","deleteDocument","fullScreen","setFieldValue","isSubmitting","ref","current","hidden","target","files","click","margin","Link","download","href","fullWidth","multiline","severity","autoHideDuration","url","split","pop","AddModelNoteSchema","min","note","mutateNotes","NoteModal","updateAModelNote","createAModelNote","deleteAModelNote","helperText","gridColumnEnd","textAlign","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","getAllModelContact","createAModelContact","updateAModelContact","deleteAModelContact","MyTabs","indicator","Tabs","MyTab","createStyles","textTransform","minWidth","selected","disableRipple","addCustomer","customer","deleteCustomer","editCustomer","getQuoteById","createQuote","createQuoteComplete","updateQuote","deleteQuote","position","top","shadows","List","createProject","updateProject","pId","deleteProject","React","_props$color","_props$component","component","onFocus","TypographyClasses","_props$underline","underline","_props$variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","_extends","clsx","concat","capitalize","button","event","underlineNone","textDecoration","underlineHover","underlineAlways","WebkitTapHighlightColor","outline","cursor","userSelect","verticalAlign","borderStyle","GeneralForm","setData","dis","setDis","showSnack","setShowSnack","snackMsg","setSnackMsg","addName","setAddName","editName","setEditName","selectedData","setSelectedData","showMsg","refreshData","handleAdd","handleEdit","p","expandIcon","preventDefault","defaultExpanded","cat","getProjectActivities","projectId","Fragment","cx","cy"],"mappings":"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","file":"static/js/23.00c84ff1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport CheckBox from \"@material-ui/core/Checkbox\";\r\n\r\nimport TextField from \"../../app/TextField\";\r\nimport { FieldSelect } from \"../../app/Inputs\";\r\nimport Button from \"../../app/Button\";\r\n\r\nimport { getCustomers } from \"../../api/customer\";\r\nimport { getContacts } from \"../../api/contact\";\r\nimport { getProjects } from \"../../api/project\";\r\nimport { getAllEmployees } from \"../../api/employee\";\r\nimport { getQuotes } from \"../../api/quote\";\r\nimport { IActivity, createActivity, updateActivity } from \"../../api/activity\";\r\nimport { fetcher } from \"../../api\";\r\nimport { BasePaper } from \"../../app/Paper\";\r\n\r\nconst schema = Yup.object().shape({\r\n    name: Yup.string().required(),\r\n});\r\n\r\nexport default function EditActivityForm({\r\n    open,\r\n    init,\r\n    onDone,\r\n}: {\r\n    open?: boolean;\r\n    init: IActivity;\r\n    onDone: () => void;\r\n}) {\r\n    const handleSubmit = async (data: IActivity, { setSubmitting }: { setSubmitting: any }) => {\r\n        try {\r\n            if (init && init?.id) {\r\n                const resp = await updateActivity(init.id, data);\r\n                if (resp) {\r\n                    onDone();\r\n                }\r\n            } else {\r\n                const resp = await createActivity(data);\r\n                if (resp) {\r\n                    onDone();\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Formik initialValues={init} validationSchema={schema} onSubmit={handleSubmit}>\r\n            {({ values, errors, touched, handleChange, handleBlur }) => (\r\n                <Form>\r\n                    <Box display=\"flex\">\r\n                        <BasePaper style={{ marginRight: \"1em\" }}>\r\n                            <Box flex={3}>\r\n                                <Box display=\"flex\" justifyContent=\"space-between\" my={1}>\r\n                                    <TextField\r\n                                        error={Boolean(errors.name && touched.name)}\r\n                                        name=\"name\"\r\n                                        label=\"name\"\r\n                                        value={values.name}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        style={{ flex: \"1 1 25%\" }}\r\n                                    />\r\n                                    <TextField\r\n                                        style={{ flex: \"1 1 25%\", marginRight: 5, marginLeft: 5 }}\r\n                                        name=\"subject\"\r\n                                        label=\"subject\"\r\n                                        value={values.subject}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <TextField\r\n                                        style={{ flex: \"1 1 25%\", marginRight: 5 }}\r\n                                        name=\"location\"\r\n                                        label=\"location\"\r\n                                        value={values.location}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <TextField\r\n                                        name=\"notes\"\r\n                                        label=\"notes\"\r\n                                        value={values.notes}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        style={{ flex: \"1 1 25%\" }}\r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" my={1}>\r\n                                    <TextField\r\n                                        style={{ flex: \"1 1 25%\" }}\r\n                                        type=\"date\"\r\n                                        name=\"startTime\"\r\n                                        label=\"Start time\"\r\n                                        value={values.startTime ? values.startTime.substr(0, 10) : \"\"}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <TextField\r\n                                        style={{ marginRight: 5, marginLeft: 5, flex: \"1 1 25%\" }}\r\n                                        type=\"date\"\r\n                                        name=\"endTime\"\r\n                                        label=\"End time\"\r\n                                        value={values.endTime ? values.endTime.substr(0, 10) : \"\"}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <FieldSelect\r\n                                        style={{ flex: \"1 1 25%\", marginRight: 5 }}\r\n                                        request={getCustomers}\r\n                                        itemTitleField=\"name\"\r\n                                        itemValueField=\"id\"\r\n                                        label=\"Client\"\r\n                                        name=\"ClientId\"\r\n                                        value={values.ClientId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n\r\n                                    <FieldSelect\r\n                                        style={{ flex: \"1 1 25%\" }}\r\n                                        label=\"Contact\"\r\n                                        name=\"ContactId\"\r\n                                        request={getContacts}\r\n                                        itemTitleField=\"lastName\"\r\n                                        itemValueField=\"id\"\r\n                                        value={values.ContactId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" my={1}>\r\n                                    <FieldSelect\r\n                                        style={{ flex: \"1 1 25%\" }}\r\n                                        label=\"ActivityPriorityId\"\r\n                                        name=\"ActivityPriorityId\"\r\n                                        request={() => fetcher(\"/activitypriority\")}\r\n                                        itemTitleField=\"name\"\r\n                                        itemValueField=\"id\"\r\n                                        value={values.ActivityPriorityId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <FieldSelect\r\n                                        style={{ flex: \"1 1 25%\", marginRight: 5, marginLeft: 5 }}\r\n                                        label=\"Project\"\r\n                                        name=\"ProjectId\"\r\n                                        request={getProjects}\r\n                                        itemTitleField=\"name\"\r\n                                        itemValueField=\"id\"\r\n                                        value={values.ProjectId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <FieldSelect\r\n                                        style={{ flex: \"1 1 25%\", marginRight: 5 }}\r\n                                        label=\"Employee\"\r\n                                        name=\"EmployeeId\"\r\n                                        request={getAllEmployees}\r\n                                        itemTitleField=\"username\"\r\n                                        itemValueField=\"id\"\r\n                                        value={values.EmployeeId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <FieldSelect\r\n                                        style={{ flex: \"1 1 25%\" }}\r\n                                        label=\"Quote\"\r\n                                        name=\"QuoteId\"\r\n                                        request={getQuotes}\r\n                                        itemTitleField=\"number\"\r\n                                        itemValueField=\"id\"\r\n                                        value={values.QuoteId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" my={1}>\r\n                                    <FieldSelect\r\n                                        label=\"ActivityCategoryId\"\r\n                                        name=\"ActivityCategoryId\"\r\n                                        request={() => fetcher(\"/activitycategory\")}\r\n                                        itemTitleField=\"name\"\r\n                                        itemValueField=\"id\"\r\n                                        value={values.ActivityCategoryId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        style={{ marginRight: 5 }}\r\n                                    />\r\n                                    <FieldSelect\r\n                                        label=\"ActivityStatusId\"\r\n                                        name=\"ActivityStatusId\"\r\n                                        request={() => fetcher(\"/activitystatus\")}\r\n                                        itemTitleField=\"name\"\r\n                                        itemValueField=\"id\"\r\n                                        value={values.ActivityStatusId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </Box>\r\n                            </Box>\r\n                        </BasePaper>\r\n                        <BasePaper\r\n                            style={{\r\n                                height: \"100%\",\r\n                                minHeight: \"350px\",\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                                justifyContent: \"space-evenly\",\r\n                            }}\r\n                        >\r\n                            <Box flex={1}>\r\n                                <Box>\r\n                                    <div>\r\n                                        <FormControlLabel\r\n                                            name=\"allDayActivity\"\r\n                                            control={<CheckBox />}\r\n                                            label=\"All dat activity\"\r\n                                            checked={values.allDayActivity}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            name=\"notifyOnDay\"\r\n                                            control={<CheckBox />}\r\n                                            label=\"Notify on day\"\r\n                                            checked={values.notifyOnDay}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                    </div>\r\n                                    <div>\r\n                                        <FormControlLabel\r\n                                            name=\"recurring\"\r\n                                            control={<CheckBox />}\r\n                                            label=\"Recurring\"\r\n                                            checked={values.recurring}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            name=\"notifyNow\"\r\n                                            control={<CheckBox />}\r\n                                            label=\"Notify now\"\r\n                                            checked={values.notifyNow}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                    </div>\r\n                                    <FormControlLabel\r\n                                        name=\"doNotShowOnCalendar\"\r\n                                        control={<CheckBox />}\r\n                                        label=\"Do not show on calendar\"\r\n                                        checked={values.doNotShowOnCalendar}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </Box>\r\n                                <Box my={4}>\r\n                                    <div\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            width: \"100%\",\r\n                                            alignItems: \"flex-end\",\r\n                                            marginTop: \"auto\",\r\n                                        }}\r\n                                    >\r\n                                        <Button kind=\"add\" type=\"submit\" style={{ flex: 1 }}>\r\n                                            {open ? \"Add\" : \"Save\"}\r\n                                        </Button>\r\n                                    </div>\r\n                                </Box>\r\n                            </Box>\r\n                        </BasePaper>\r\n                    </Box>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n","import React, { useState, useMemo } from \"react\";\r\nimport { GridColumns } from \"@material-ui/data-grid\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n\r\nimport { IActivity } from \"../../api/activity\";\r\n\r\nimport EditActivityForm from \"./Forms\";\r\n\r\nimport BaseDataGrid from \"../../app/BaseDataGrid\";\r\nimport { BasePaper } from \"../../app/Paper\";\r\nimport { formatTimestampToDate } from \"../../logic/date\";\r\nimport { fileType } from \"../../logic/fileType\";\r\n\r\nexport default function EditForm({\r\n    selectedActivity,\r\n    onDone,\r\n    notes,\r\n    docs,\r\n    onNoteSelected,\r\n    onDocSelected,\r\n}: {\r\n    selectedActivity: IActivity;\r\n    onDone: () => void;\r\n    notes: any;\r\n    docs: any;\r\n    onNoteSelected: (d: any) => void;\r\n    onDocSelected: (d: any) => void;\r\n}) {\r\n    const [activeTab, setActiveTab] = useState(0);\r\n\r\n    const noteCols = useMemo<GridColumns>(\r\n        () => [\r\n            {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                valueFormatter: (params) => formatTimestampToDate(params.row?.createdAt),\r\n                width: 120,\r\n            },\r\n            {\r\n                field: \"creator\",\r\n                headerName: \"Creator\",\r\n                width: 180,\r\n                valueFormatter: (params) => params.row?.EmployeeId?.username,\r\n            },\r\n            { field: \"subject\", headerName: \"Subject\", width: 300 },\r\n            { field: \"note\", headerName: \"Note\", flex: 1 },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const docCols = useMemo<GridColumns>(\r\n        () => [\r\n            {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                valueFormatter: (params) => formatTimestampToDate(params.row?.createdAt),\r\n                width: 120,\r\n            },\r\n            {\r\n                field: \"EmployeeId\",\r\n                headerName: \"Creator\",\r\n                valueFormatter: (params) => params.row?.employee?.username,\r\n                width: 120,\r\n            },\r\n            { field: \"name\", headerName: \"Name\", flex: 1 },\r\n            { field: \"id\", headerName: \"ID\", width: 200 },\r\n            { field: \"description\", headerName: \"Description\", flex: 1 },\r\n            {\r\n                field: \"type\",\r\n                headerName: \"File Type\",\r\n                valueFormatter: (params) => fileType(params.row?.path),\r\n                width: 120,\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    return (\r\n        <Box>\r\n            <EditActivityForm init={selectedActivity} onDone={onDone} />\r\n\r\n            <BasePaper style={{ marginTop: \"1em\" }}>\r\n                <Box>\r\n                    <Tabs\r\n                        style={{ marginBottom: 10 }}\r\n                        value={activeTab}\r\n                        textColor=\"primary\"\r\n                        onChange={(e, nv) => setActiveTab(nv)}\r\n                    >\r\n                        <Tab label=\"Notes\" />\r\n                        <Tab label=\"Documents\" />\r\n                    </Tabs>\r\n                    {activeTab === 0 && (\r\n                        <BaseDataGrid cols={noteCols} rows={notes} onRowSelected={onNoteSelected} height={250} />\r\n                    )}\r\n                    {activeTab === 1 && (\r\n                        <BaseDataGrid cols={docCols} rows={docs} onRowSelected={onDocSelected} height={250} />\r\n                    )}\r\n                </Box>\r\n            </BasePaper>\r\n        </Box>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Box, Tabs, Tab } from \"@material-ui/core\";\r\n\r\nimport Dialog from \"../../app/Dialog\";\r\n\r\nimport { GeneralForm } from \"../../app/Forms\";\r\nimport { delete_, fetcher, patch, post } from \"../../api\";\r\n\r\nexport default function CatTypeFamilyModal({ open, onClose }: { open: boolean; onClose: () => void }) {\r\n    const [activeTab, setActiveTab] = useState(0);\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} title={`Manage Category - Satatus - Priority`}>\r\n            <Box>\r\n                <Tabs value={activeTab} textColor=\"primary\" onChange={(e, nv) => setActiveTab(nv)}>\r\n                    <Tab label=\"Category\" />\r\n                    <Tab label=\"Status\" />\r\n                    <Tab label=\"Priority\" />\r\n                </Tabs>\r\n                {activeTab === 0 && (\r\n                    <GeneralForm\r\n                        type=\"Category\"\r\n                        addRecord={(data) => post(\"/activitycategory\", { name: data })}\r\n                        deleteRecord={(data) => delete_(\"/activitycategory/\" + data)}\r\n                        getRecord={() => fetcher(\"/activitycategory\")}\r\n                        updateRecord={(id, data) => patch(\"/activitycategory/\" + id, { name: data })}\r\n                    />\r\n                )}\r\n                {activeTab === 1 && (\r\n                    <GeneralForm\r\n                        type=\"Status\"\r\n                        addRecord={(data) => post(\"/activitystatus\", { name: data })}\r\n                        deleteRecord={(data) => delete_(\"/activitystatus/\" + data)}\r\n                        getRecord={() => fetcher(\"/activitystatus\")}\r\n                        updateRecord={(id, data) => patch(\"/activitystatus/\" + id, { name: data })}\r\n                    />\r\n                )}\r\n                {activeTab === 2 && (\r\n                    <GeneralForm\r\n                        type=\"Priority\"\r\n                        addRecord={(data) => post(\"/activitypriority\", { name: data })}\r\n                        deleteRecord={(data) => delete_(\"/activitypriority/\" + data)}\r\n                        getRecord={() => fetcher(\"/activitypriority\")}\r\n                        updateRecord={(id, data) => patch(\"/activitypriority/\" + id, { name: data })}\r\n                    />\r\n                )}\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport CheckBox from \"@material-ui/core/Checkbox\";\r\n\r\nimport TextField from \"../../app/TextField\";\r\nimport { FieldSelect } from \"../../app/Inputs\";\r\nimport Button from \"../../app/Button\";\r\nimport Dialog from \"../../app/Dialog\";\r\n\r\nimport { getCustomers } from \"../../api/customer\";\r\nimport { getContacts } from \"../../api/contact\";\r\nimport { getProjects } from \"../../api/project\";\r\nimport { getAllEmployees } from \"../../api/employee\";\r\nimport { getQuotes } from \"../../api/quote\";\r\nimport { createActivity, IActivity } from \"../../api/activity\";\r\nimport { get } from \"../../api\";\r\n\r\nconst schema = Yup.object().shape({\r\n    name: Yup.string().required(),\r\n});\r\nexport default function AddActivityModal({\r\n    open,\r\n    onClose,\r\n    onDone,\r\n}: {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onDone: () => void;\r\n}) {\r\n    const handleSubmit = async (data: any, { setSubmitting }: { setSubmitting: any }) => {\r\n        try {\r\n            const resp = await createActivity(data);\r\n            if (resp) {\r\n                onDone();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} title=\"Add new activity\" maxWidth=\"sm\">\r\n            <Box m={3}>\r\n                <Formik initialValues={{} as IActivity} validationSchema={schema} onSubmit={handleSubmit}>\r\n                    {({ values, errors, touched, handleChange, handleBlur }) => (\r\n                        <Form>\r\n                            <Box>\r\n                                <Box\r\n                                    display=\"grid\"\r\n                                    gridTemplateColumns=\"auto auto auto\"\r\n                                    gridColumnGap={10}\r\n                                    gridRowGap={10}\r\n                                >\r\n                                    <TextField\r\n                                        error={Boolean(errors.name && touched.name)}\r\n                                        name=\"name\"\r\n                                        label=\"name\"\r\n                                        value={values.name}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <TextField\r\n                                        name=\"subject\"\r\n                                        label=\"subject\"\r\n                                        value={values.subject}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <TextField\r\n                                        name=\"location\"\r\n                                        label=\"location\"\r\n                                        value={values.location}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <TextField\r\n                                        name=\"notes\"\r\n                                        label=\"notes\"\r\n                                        value={values.notes}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"date\"\r\n                                        name=\"startTime\"\r\n                                        label=\"Start time\"\r\n                                        value={values.startTime}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <TextField\r\n                                        type=\"date\"\r\n                                        name=\"endTime\"\r\n                                        label=\"End time\"\r\n                                        value={values.endTime}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <FieldSelect\r\n                                        style={{ width: \"100%\" }}\r\n                                        request={getCustomers}\r\n                                        itemTitleField=\"name\"\r\n                                        itemValueField=\"id\"\r\n                                        label=\"Client\"\r\n                                        name=\"ClientId\"\r\n                                        value={values.ClientId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n\r\n                                    <FieldSelect\r\n                                        style={{ width: \"100%\" }}\r\n                                        label=\"Contact\"\r\n                                        name=\"ContactId\"\r\n                                        request={getContacts}\r\n                                        itemTitleField=\"lastName\"\r\n                                        itemValueField=\"id\"\r\n                                        value={values.ContactId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <FieldSelect\r\n                                        style={{ width: \"100%\" }}\r\n                                        label=\"Project\"\r\n                                        name=\"ProjectId\"\r\n                                        request={getProjects}\r\n                                        itemTitleField=\"name\"\r\n                                        itemValueField=\"id\"\r\n                                        value={values.ProjectId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <FieldSelect\r\n                                        style={{ width: \"100%\" }}\r\n                                        label=\"Employee\"\r\n                                        name=\"EmployeeId\"\r\n                                        request={getAllEmployees}\r\n                                        itemTitleField=\"username\"\r\n                                        itemValueField=\"id\"\r\n                                        value={values.EmployeeId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <FieldSelect\r\n                                        style={{ width: \"100%\" }}\r\n                                        label=\"Quote\"\r\n                                        name=\"QuoteId\"\r\n                                        request={getQuotes}\r\n                                        itemTitleField=\"number\"\r\n                                        itemValueField=\"id\"\r\n                                        value={values.QuoteId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    <FieldSelect\r\n                                        style={{ width: \"100%\" }}\r\n                                        label=\"ActivityCategoryId\"\r\n                                        name=\"ActivityCategoryId\"\r\n                                        request={() => get(\"/activitycategory\")}\r\n                                        itemTitleField=\"name\"\r\n                                        itemValueField=\"id\"\r\n                                        value={values.ActivityCategoryId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </Box>\r\n                                <Box display=\"flex\" justifyContent=\"space-between\" my={1.2}>\r\n                                    <FieldSelect\r\n                                        label=\"ActivityStatusId\"\r\n                                        name=\"ActivityStatusId\"\r\n                                        request={() => get(\"/activitystatus\")}\r\n                                        itemTitleField=\"name\"\r\n                                        itemValueField=\"id\"\r\n                                        value={values.ActivityStatusId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        style={{ flex: 1, marginRight: 5 }}\r\n                                    />\r\n                                    <FieldSelect\r\n                                        label=\"ActivityPriorityId\"\r\n                                        name=\"ActivityPriorityId\"\r\n                                        request={() => get(\"/activitypriority\")}\r\n                                        itemTitleField=\"name\"\r\n                                        itemValueField=\"id\"\r\n                                        value={values.ActivityPriorityId}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        style={{ flex: 1 }}\r\n                                    />\r\n                                </Box>\r\n                                <Box>\r\n                                    <Box display=\"flex\">\r\n                                        <FormControlLabel\r\n                                            style={{ flex: 1 }}\r\n                                            name=\"allDayActivity\"\r\n                                            control={<CheckBox />}\r\n                                            label=\"All day activity\"\r\n                                            checked={values.allDayActivity}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            style={{ flex: 1 }}\r\n                                            name=\"notifyOnDay\"\r\n                                            control={<CheckBox />}\r\n                                            label=\"Notify on day\"\r\n                                            checked={values.notifyOnDay}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                    </Box>\r\n                                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                                        <FormControlLabel\r\n                                            style={{ flex: 1 }}\r\n                                            name=\"recurring\"\r\n                                            control={<CheckBox />}\r\n                                            label=\"Recurring\"\r\n                                            checked={values.recurring}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            style={{ flex: 1 }}\r\n                                            name=\"notifyNow\"\r\n                                            control={<CheckBox />}\r\n                                            label=\"Notify now\"\r\n                                            checked={values.notifyNow}\r\n                                            onChange={handleChange}\r\n                                            onBlur={handleBlur}\r\n                                        />\r\n                                    </Box>\r\n                                    <FormControlLabel\r\n                                        name=\"doNotShowOnCalendar\"\r\n                                        control={<CheckBox />}\r\n                                        label=\"Do not show on calendar\"\r\n                                        checked={values.doNotShowOnCalendar}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                </Box>\r\n                                <Box my={2}>\r\n                                    <div style={{ display: \"flex\", width: \"100%\", alignItems: \"flex-end\" }}>\r\n                                        <Button\r\n                                            kind=\"add\"\r\n                                            type=\"submit\"\r\n                                            style={\r\n                                                open\r\n                                                    ? { width: \"50%\", marginLeft: \"auto\", marginRight: \"auto\" }\r\n                                                    : {\r\n                                                          marginLeft: \"auto\",\r\n                                                          marginRight: \"auto\",\r\n                                                          width: \"40%\",\r\n                                                          marginBottom: \"20px\",\r\n                                                          marginTop: \"20px\",\r\n                                                          paddingTop: \"8px\",\r\n                                                          paddingBottom: \"8px\",\r\n                                                      }\r\n                                            }\r\n                                        >\r\n                                            {open ? \"Add\" : \"Save\"}\r\n                                        </Button>\r\n                                    </div>\r\n                                </Box>\r\n                            </Box>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { GridColDef } from \"@material-ui/data-grid\";\r\nimport DeleteRounded from \"@material-ui/icons/DeleteRounded\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\nimport CategoryRounded from \"@material-ui/icons/CategoryRounded\";\r\n\r\nimport List from \"../app/SideUtilityList\";\r\nimport Snack from \"../app/Snack\";\r\nimport Button from \"../app/Button\";\r\nimport BaseDateGrid from \"../app/BaseDataGrid\";\r\nimport { MyTabs, MyTab } from \"../app/Tabs\";\r\n\r\nimport { getAllModelNotes, INote } from \"../api/note\";\r\nimport { getAllModelDocuments } from \"../api/document\";\r\n\r\nimport Confirm from \"../features/Modals/Confirm\";\r\nimport NoteModal from \"../features/Modals/NoteModals\";\r\nimport DocumentModal from \"../features/Modals/DocumentModals\";\r\n\r\nimport EditForm from \"../features/Activity/EditForm\";\r\nimport CatStatusPrioModal from \"../features/Activity/CatStatusPrioModal\";\r\nimport AddActivityModal from \"../features/Activity/AddActivityModal\";\r\n\r\nimport { getActivities, IActivity, deleteActivity } from \"../api/activity\";\r\n\r\nexport default function Activity() {\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [addActivity, setAddActivity] = useState(false);\r\n    const [catStatPrio, setCatStatPrio] = useState(false);\r\n    const [activities, setActivities] = useState([]);\r\n    const [selectedActivity, setSelectedActivity] = useState<IActivity>();\r\n\r\n    const [addNote, setAddNote] = useState(false);\r\n    const [addDoc, setAddDoc] = useState(false);\r\n\r\n    const [selNote, setSelNote] = useState<INote>();\r\n    const [selDoc, setSelDoc] = useState<any>();\r\n\r\n    const [confirm, setConfirm] = useState(false);\r\n    const [snack, setSnack] = useState(false);\r\n    const [msg, setMsg] = useState(\"\");\r\n\r\n    const [notes, setNotes] = useState([]);\r\n    const [docs, setDocs] = useState([]);\r\n    const cols: GridColDef[] = [{ field: \"name\" }, { field: \"subject\" }, { field: \"location\" }];\r\n    const refreshNotes = async () => {\r\n        try {\r\n            if (selectedActivity && selectedActivity.id) {\r\n                const resp = await getAllModelNotes(\"activity\", selectedActivity.id);\r\n                setNotes(resp);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const refreshDocs = async () => {\r\n        try {\r\n            if (selectedActivity && selectedActivity.id) {\r\n                const resp = await getAllModelDocuments(\"activity\", selectedActivity.id);\r\n                setDocs(resp);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (activeTab === 1) {\r\n            refreshNotes();\r\n            refreshDocs();\r\n        }\r\n    }, [activeTab]);\r\n\r\n    const refreshActivities = async () => {\r\n        try {\r\n            const resp = await getActivities();\r\n            setActivities(resp);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshActivities();\r\n    }, []);\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            if (selectedActivity && selectedActivity.id) {\r\n                const resp = await deleteActivity(selectedActivity.id);\r\n                if (resp) {\r\n                    setActiveTab(0);\r\n                    setSelectedActivity(undefined);\r\n                    refreshActivities();\r\n                    setConfirm(false);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Snack open={snack} onClose={() => setSnack(false)}>\r\n                {msg}\r\n            </Snack>\r\n\r\n            <Confirm open={confirm} onClose={() => setConfirm(false)} onConfirm={handleDelete} />\r\n            <AddActivityModal open={addActivity} onClose={() => setAddActivity(false)} onDone={refreshActivities} />\r\n            <CatStatusPrioModal open={catStatPrio} onClose={() => setCatStatPrio(false)} />\r\n            {selectedActivity && selectedActivity.id && (\r\n                <NoteModal\r\n                    noteData={selNote}\r\n                    itemId={selectedActivity.id}\r\n                    model=\"activity\"\r\n                    open={addNote}\r\n                    onClose={() => setAddNote(false)}\r\n                    onDone={refreshNotes}\r\n                />\r\n            )}\r\n            {selectedActivity && selectedActivity.id && (\r\n                <DocumentModal\r\n                    docData={selDoc}\r\n                    itemId={selectedActivity.id}\r\n                    model=\"activity\"\r\n                    open={addDoc}\r\n                    onClose={() => setAddDoc(false)}\r\n                    onDone={refreshDocs}\r\n                />\r\n            )}\r\n\r\n            <Box my={1} display=\"flex\" justifyContent=\"flex-end\" alignItems=\"center\">\r\n                <Button\r\n                    disabled={activeTab === 0}\r\n                    onClick={() => {\r\n                        setSelNote(undefined);\r\n                        setAddNote(true);\r\n                    }}\r\n                >\r\n                    Add Note\r\n                </Button>\r\n                <Button\r\n                    disabled={activeTab === 0}\r\n                    onClick={() => {\r\n                        setSelDoc(undefined);\r\n                        setAddDoc(true);\r\n                    }}\r\n                >\r\n                    Add Document\r\n                </Button>\r\n                <div style={{ flexGrow: 1 }} />\r\n                <MyTabs value={activeTab} onChange={(e, nv) => setActiveTab(nv)}>\r\n                    <MyTab label=\"List\" />\r\n                    <MyTab label=\"Details\" disabled={!selectedActivity} />\r\n                </MyTabs>\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"flex-start\" mt={1}>\r\n                <List style={{ boxShadow: \"rgba(0, 0, 0, 0.08) 0px 4px 12px\" }}>\r\n                    <ListItem>\r\n                        <IconButton onClick={() => setAddActivity(true)}>\r\n                            <AddRounded />\r\n                        </IconButton>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <IconButton disabled={!selectedActivity} onClick={() => setConfirm(true)}>\r\n                            <DeleteRounded />\r\n                        </IconButton>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <IconButton onClick={() => setCatStatPrio(true)}>\r\n                            <CategoryRounded />\r\n                        </IconButton>\r\n                    </ListItem>\r\n                </List>\r\n                <Box flex={11} ml={2}>\r\n                    {activeTab === 0 && (\r\n                        <BaseDateGrid\r\n                            cols={cols}\r\n                            rows={activities}\r\n                            onRowSelected={(d) => {\r\n                                setSelectedActivity(d);\r\n                                setActiveTab(1);\r\n                            }}\r\n                        />\r\n                    )}\r\n                    {activeTab === 1 && selectedActivity && (\r\n                        <EditForm\r\n                            notes={notes}\r\n                            docs={docs}\r\n                            onNoteSelected={(d) => {\r\n                                setSelNote(d);\r\n                                setAddNote(true);\r\n                            }}\r\n                            onDocSelected={(d) => {\r\n                                setSelDoc(d);\r\n                                setAddDoc(true);\r\n                            }}\r\n                            onDone={() => {\r\n                                setMsg(\"Updated...\");\r\n                                setSnack(true);\r\n                                refreshActivities();\r\n                            }}\r\n                            selectedActivity={selectedActivity}\r\n                        />\r\n                    )}\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Button, ButtonProps, makeStyles } from \"@material-ui/core\";\r\nimport { AddRounded, EditRounded, DeleteRounded } from \"@material-ui/icons\";\r\n\r\nimport { Gradients } from \"../theme\";\r\n\r\ninterface IButton extends ButtonProps {\r\n    kind?: \"add\" | \"edit\" | \"delete\";\r\n}\r\nexport default function MyButton({ kind, ...props }: IButton) {\r\n    const useStyles = makeStyles({\r\n        btnStyle: {\r\n            background: kind ? (kind === \"add\" ? Gradients.success : kind === \"edit\" ? Gradients.warning : Gradients.error) : \"default\",\r\n        },\r\n    });\r\n    let icons = {\r\n        add: <AddRounded />,\r\n        edit: <EditRounded />,\r\n        delete: <DeleteRounded />,\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={classes.btnStyle}\r\n            startIcon={kind ? icons[kind] : props.startIcon}\r\n            variant={kind ? \"contained\" : props.variant}\r\n            color={kind ? \"primary\" : props.color}\r\n            {...props}\r\n        >\r\n            {props.children}\r\n        </Button>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { DataGrid, GridToolbar } from \"@material-ui/data-grid\";\r\n\r\nexport const useDataGridStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: \"#f9f9f9\",\r\n        border: \"none\",\r\n\r\n        \"& .MuiDataGrid-columnsContainer\": {\r\n            backgroundColor: \"#202731\",\r\n            color: \"#fff\",\r\n            // borderRadius: \" 10px 10px 0 0\",\r\n        },\r\n        \"& .MuiDataGrid-iconSeparator\": {\r\n            display: \"none\",\r\n            width: 0,\r\n            height: 0,\r\n            opacity: 0,\r\n        },\r\n        \"& .Mui-selected\": {\r\n            boxShadow: \" rgba(149, 157, 165, 0.2) 0px 8px 24px\",\r\n            backgroundColor: \"#fff !important\",\r\n        },\r\n        \"& .MuiDataGrid-sortIcon\": {\r\n            fill: \"white\",\r\n        },\r\n    },\r\n});\r\n\r\ninterface IBaseDataGrid {\r\n    onRowSelected?: (row: any) => void;\r\n    rows: any[];\r\n    cols: any[];\r\n    height?: number;\r\n}\r\n\r\nexport default function BaseDataGrid({ onRowSelected, rows, cols, height }: IBaseDataGrid) {\r\n    const classes = useDataGridStyles();\r\n\r\n    // const updatedCols = cols.map((x) => {\r\n    //     let obj = Object.keys(x);\r\n    //     let check = false;\r\n    //     for (let o in obj) {\r\n    //         if (o == \"flex\") {\r\n    //             check = true;\r\n    //         }\r\n    //     }\r\n    //     if (!check) {\r\n    //         x = { ...x, flex: 1 };\r\n    //     }\r\n    //     return x;\r\n    // });\r\n\r\n    return (\r\n        // <Box display=\"flex\" boxShadow=\"rgba(0, 0, 0, 0.08) 0px 4px 12px\" border=\"none\" height=\"100%\">\r\n        <div\r\n            style={{\r\n                flexGrow: 1,\r\n                height: height || 450,\r\n            }}\r\n        >\r\n            <DataGrid\r\n                density=\"compact\"\r\n                components={{ Toolbar: GridToolbar }}\r\n                className={classes.root}\r\n                onRowSelected={(r) => {\r\n                    onRowSelected && onRowSelected(r.data);\r\n                }}\r\n                columns={cols}\r\n                rows={rows}\r\n            />\r\n        </div>\r\n        // </Box>\r\n    );\r\n}\r\n\r\nexport const ScrollDataGrid = ({ onRowSelected, rows, cols, height }: IBaseDataGrid) => {\r\n    const classes = useDataGridStyles();\r\n\r\n    return (\r\n        // <div\r\n        //     style={{\r\n        //         height: height || 450,\r\n        //     }}\r\n        // >\r\n        <DataGrid\r\n            density=\"compact\"\r\n            components={{ Toolbar: GridToolbar }}\r\n            className={classes.root}\r\n            onRowSelected={(r) => {\r\n                onRowSelected && onRowSelected(r.data);\r\n            }}\r\n            columns={cols}\r\n            rows={rows}\r\n        />\r\n        // </div>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MenuItem, TextField, StandardTextFieldProps } from \"@material-ui/core\";\r\n// import { BootstrapInput } from \"../TextField\";\r\n\r\n// import styles from \"./inputs.module.css\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { CSSProperties } from \"@material-ui/styles\";\r\n\r\ninterface IMFS {\r\n    request: () => Promise<any>;\r\n    limit?: number;\r\n    label?: string;\r\n    getOptionLabel: (option: any) => string;\r\n    getOptionValue: (option: any) => string;\r\n    onChange?: (e: React.ChangeEvent<{}>, newValue: any) => void;\r\n    onBlur?: React.FocusEventHandler<HTMLDivElement>;\r\n    error?: boolean;\r\n    placeholder?: string;\r\n    style?: CSSProperties;\r\n    value?: any;\r\n}\r\nexport const MaterialFieldSelect = ({\r\n    request,\r\n    limit,\r\n    getOptionLabel,\r\n    getOptionValue,\r\n    onChange,\r\n    value,\r\n    ...props\r\n}: IMFS) => {\r\n    const [options, setOptions] = useState([]);\r\n    const [findValue, setFindValue] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        const t = options.find((o) => getOptionValue(o) === value);\r\n        setFindValue(t);\r\n    }, [value, options, getOptionValue]);\r\n\r\n    useEffect(() => {\r\n        request()\r\n            .then((data) => {\r\n                if (limit && limit > 0) {\r\n                    setOptions(data.slice(0, limit));\r\n                } else {\r\n                    setOptions(data);\r\n                }\r\n            })\r\n            .catch((e) => console.log(e));\r\n    }, [limit, request]);\r\n\r\n    return (\r\n        <Autocomplete\r\n            style={props.style as any}\r\n            getOptionLabel={getOptionLabel}\r\n            options={options}\r\n            onChange={onChange}\r\n            onBlur={props.onBlur}\r\n            value={findValue}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label={props?.label}\r\n                    error={props.error}\r\n                    placeholder={props.placeholder}\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                />\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\ninterface IOS extends StandardTextFieldProps {\r\n    items: any[];\r\n    itemValueField: string;\r\n    itemTitleField: string;\r\n    keyField?: string;\r\n    inputStyle?: any;\r\n}\r\nexport const ObjectSelect = ({ inputStyle, items, itemTitleField, itemValueField, keyField, ...props }: IOS) => {\r\n    return (\r\n        <TextField {...props} variant=\"outlined\" size=\"small\" select>\r\n            <MenuItem value={undefined}>None</MenuItem>\r\n            {items &&\r\n                items.length >= 0 &&\r\n                items.map((item: any, i) => (\r\n                    <MenuItem key={keyField ? item[keyField] : i} value={item[itemValueField]}>\r\n                        {item[itemTitleField]}\r\n                    </MenuItem>\r\n                ))}\r\n        </TextField>\r\n    );\r\n};\r\n\r\ninterface IFieldSelect extends StandardTextFieldProps {\r\n    request: () => Promise<any>;\r\n    getOptionList?: (data: any) => any;\r\n    itemValueField: string;\r\n    itemTitleField: string;\r\n    limit?: number;\r\n    keyField?: string;\r\n}\r\nexport const FieldSelect = ({\r\n    keyField,\r\n    request,\r\n    itemValueField,\r\n    itemTitleField,\r\n    limit,\r\n    getOptionList,\r\n    ...props\r\n}: IFieldSelect) => {\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        request()\r\n            .then((data) => {\r\n                if (limit && limit > 0) {\r\n                    let options = getOptionList ? getOptionList(data) : data.slice(0, limit);\r\n                    setItems(options);\r\n                } else {\r\n                    let options = getOptionList ? getOptionList(data) : data;\r\n                    setItems(options);\r\n                }\r\n            })\r\n            .catch((e) => console.log(e));\r\n    }, [getOptionList, limit, request]);\r\n\r\n    return <ObjectSelect {...props} itemTitleField={itemTitleField} itemValueField={itemValueField} items={items} />;\r\n};\r\n\r\ninterface IArraySelect extends StandardTextFieldProps {\r\n    items?: any[];\r\n}\r\nexport const ArraySelect = ({ items, ...props }: IArraySelect) => {\r\n    return (\r\n        <ObjectSelect\r\n            itemTitleField=\"item\"\r\n            itemValueField=\"item\"\r\n            items={items ? items.map((item) => ({ item: item })) : []}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport const BaseSelect = (props: StandardTextFieldProps) => {\r\n    return (\r\n        <TextField {...props} variant=\"outlined\" size=\"small\" select>\r\n            {props.children}\r\n        </TextField>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Paper, withStyles, PaperProps } from \"@material-ui/core\";\r\n\r\nexport const BasePaper = withStyles((theme) => ({\r\n    root: {\r\n        borderRadius: 20,\r\n        padding: \"1em\",\r\n        boxShadow: \"rgba(0, 0, 0, 0.08) 0px 4px 12px\",\r\n    },\r\n}))((props: PaperProps) => <Paper {...props} />);\r\n\r\nexport const IconPaper = withStyles((theme) => ({\r\n    root: {\r\n        borderRadius: 10,\r\n        padding: theme.spacing(4),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        color: \"#fff\",\r\n    },\r\n}))((props: PaperProps) => <Paper {...props} elevation={5} />);\r\n","import { format } from \"date-fns\";\r\n\r\nexport const formatTimestampToDate = (timestamp: number) => {\r\n    return timestamp ? format(timestamp, \"MM/dd/yyyy\") : \"\";\r\n};\r\n","import { delete_, get, patch, post } from \".\";\r\n\r\nexport interface IDocument {\r\n    id?: string;\r\n    path?: string;\r\n    file: File | string;\r\n    description: string;\r\n}\r\n\r\nexport const getAllModelDocuments = (model: string, id: string) => {\r\n    return get(`/document/${model}/${id}`);\r\n};\r\n\r\nexport const createAModelDocument = (model: string, id: string, file: any, description: string, fileName?: string) => {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"document\", file);\r\n    formData.append(\"description\", description);\r\n    fileName && formData.append(\"fileName\", fileName);\r\n\r\n    return post(`/document/${model}/${id}`, formData);\r\n};\r\n\r\nexport const updateAModelDocument = (docid: string, file: any, description: string) => {\r\n    const formData = new FormData();\r\n    formData.append(\"document\", file);\r\n    formData.append(\"description\", description);\r\n\r\n    return patch(`/document/${docid}`, formData);\r\n};\r\n\r\nexport const deleteAModelDocument = (docid: string) => {\r\n    return delete_(`/document/${docid}`);\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function PDFPreview({ pdf, height }: { pdf: string; height?: string }) {\r\n    return (\r\n        <object width=\"100%\" height={height ? height : 400} data={pdf} type=\"application/pdf\">\r\n            <embed src={pdf} type=\"application/pdf\" />\r\n            Can\"t load pdf :(, If you have IDM extention please desable it or download the file\r\n        </object>\r\n    );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { Box, TextField, Link } from \"@material-ui/core\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport Dialog from \"../../app/Dialog\";\r\nimport Button from \"../../app/Button\";\r\n\r\nimport { createAModelDocument, updateAModelDocument, deleteAModelDocument, IDocument } from \"../../api/document\";\r\nimport PhotoSizeSelectActualOutlinedIcon from \"@material-ui/icons/PhotoSizeSelectActualOutlined\";\r\nimport PDFPreview from \"../../components/PDFPreview\";\r\nimport { mutate } from \"swr\";\r\n\r\ninterface IDocumentModal {\r\n    open: boolean;\r\n    model: string;\r\n    itemId: string;\r\n    docData?: any;\r\n    onDone?: () => void;\r\n    onClose: () => void;\r\n}\r\n\r\nconst mutateDocuments = (type: string, id: string) => {\r\n    return mutate(`/document/${type}/${id}`);\r\n};\r\n\r\nexport default function DocumentModal({ open, onClose, model, itemId, onDone, docData }: IDocumentModal) {\r\n    const fileUploader = useRef<HTMLInputElement | null>();\r\n\r\n    const deleteDocument = async () => {\r\n        try {\r\n            if (docData && docData.id) {\r\n                await deleteAModelDocument(docData.id);\r\n                onDone && onDone();\r\n                mutateDocuments(model, itemId);\r\n                onClose();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (values: any, { setSubmitting }: any) => {\r\n        try {\r\n            if (docData && docData.id) {\r\n                await updateAModelDocument(docData.id, values.file, values.description);\r\n\r\n                onDone && onDone();\r\n                mutateDocuments(model, itemId);\r\n                onClose();\r\n            } else {\r\n                await createAModelDocument(model, itemId as any, values.file, values.description);\r\n\r\n                onDone && onDone();\r\n                mutateDocuments(model, itemId);\r\n                onClose();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} fullScreen title={`${docData ? \"Edit\" : \"Add\"} Document to ${model}`}>\r\n            <Box height=\"82vh\" m={3} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridColumnGap={10}>\r\n                <Box>\r\n                    {docData?.path && <PDFPreview height=\"100%\" pdf={\"http://digitalphocus.ir/\" + docData?.path} />}\r\n                </Box>\r\n                <Formik initialValues={docData ? docData : ({} as IDocument)} onSubmit={handleSubmit}>\r\n                    {({ values, handleBlur, handleChange, setFieldValue, isSubmitting }) => (\r\n                        <Form>\r\n                            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n                                <input\r\n                                    type=\"file\"\r\n                                    ref={(e) => (fileUploader.current = e)}\r\n                                    hidden\r\n                                    onChange={(e) =>\r\n                                        e.target.files !== null && setFieldValue(\"file\", e.target.files[0])\r\n                                    }\r\n                                />\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    style={{\r\n                                        backgroundColor: \"#fff\",\r\n                                        color: \" rgb(43,140,255) \",\r\n                                        border: \"1px solid rgb(43,140,255) \",\r\n                                        width: \"100%\",\r\n                                    }}\r\n                                    variant=\"contained\"\r\n                                    onClick={() => fileUploader.current?.click()}\r\n                                >\r\n                                    <PhotoSizeSelectActualOutlinedIcon style={{ marginRight: \"7px\" }} />\r\n                                    Upload file\r\n                                </Button>\r\n\r\n                                <div style={{ margin: \"1em 0\" }}>\r\n                                    {values.file ? (\r\n                                        // String((values.file as any).name)\r\n                                        <p>ads</p>\r\n                                    ) : docData ? (\r\n                                        <Link download href={docData.path}>\r\n                                            Download previous file\r\n                                        </Link>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </div>\r\n\r\n                                <TextField\r\n                                    style={{ marginBottom: \"20px\" }}\r\n                                    fullWidth\r\n                                    value={values.description}\r\n                                    name=\"description\"\r\n                                    label=\"Description\"\r\n                                    variant=\"outlined\"\r\n                                    multiline\r\n                                    rows={4}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                />\r\n                                <Box style={{ display: \"flex\", width: \"100%\" }}>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        kind={docData ? \"edit\" : \"add\"}\r\n                                        disabled={isSubmitting}\r\n                                        style={{ flex: 1 }}\r\n                                    >\r\n                                        Save\r\n                                    </Button>\r\n                                    {docData && (\r\n                                        <Button\r\n                                            style={{ marginLeft: \"1em\" }}\r\n                                            onClick={deleteDocument}\r\n                                            kind=\"delete\"\r\n                                            disabled={isSubmitting}\r\n                                        >\r\n                                            Delete\r\n                                        </Button>\r\n                                    )}\r\n                                </Box>\r\n                            </Box>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { ReactNode } from \"react\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nexport default function Snack({\r\n    open,\r\n    onClose,\r\n    severity,\r\n    children,\r\n}: {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    severity?: \"success\" | \"info\" | \"warning\" | \"error\";\r\n    children: ReactNode;\r\n}) {\r\n    return (\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={onClose}>\r\n            <Alert onClose={onClose} severity={severity}>\r\n                {children}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n","export const fileType = (url: string) => {\r\n    const splited = url.split(\".\").pop();\r\n    return splited;\r\n};\r\n","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Dialog from \"../../app/Dialog\";\r\nimport Button from \"../../app/Button\";\r\nimport TextField from \"../../app/TextField\";\r\n\r\nimport { createAModelNote, updateAModelNote, deleteAModelNote, INote } from \"../../api/note\";\r\nimport { mutate } from \"swr\";\r\n\r\nconst AddModelNoteSchema = Yup.object().shape({\r\n    subject: Yup.string().min(1, \"Too short!\").required(),\r\n    note: Yup.string().required(),\r\n});\r\n\r\ninterface INoteModal {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    model: string;\r\n    itemId: string;\r\n    noteData?: INote;\r\n    onDone?: () => void;\r\n}\r\n\r\nconst mutateNotes = (type: string, id: string) => {\r\n    return mutate(`/note/${type}/${id}`);\r\n};\r\n\r\nexport default function NoteModal({ open, onClose, model, itemId, noteData, onDone }: INoteModal) {\r\n    const handleSubmit = async (values: any, { setSubmitting }: any) => {\r\n        try {\r\n            if (noteData && noteData?.id) {\r\n                await updateAModelNote(noteData?.id, values);\r\n\r\n                onDone && onDone();\r\n                mutateNotes(model, itemId);\r\n                onClose();\r\n            } else {\r\n                await createAModelNote(model, itemId as any, values);\r\n\r\n                onDone && onDone();\r\n                mutateNotes(model, itemId);\r\n                onClose();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            if (noteData && noteData.id) {\r\n                await deleteAModelNote(noteData.id);\r\n\r\n                onDone && onDone();\r\n                mutateNotes(model, itemId);\r\n                onClose();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} title={`${noteData?.id ? \"Edit\" : \"Add\"} a note to ${model}`}>\r\n            <Box m={3}>\r\n                <Formik\r\n                    initialValues={noteData ? noteData : ({} as INote)}\r\n                    validationSchema={AddModelNoteSchema}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    {({ values, errors, touched, handleBlur, handleChange, isSubmitting }) => (\r\n                        <Form>\r\n                            <Box display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridColumnGap={10} gridRowGap={10}>\r\n                                <TextField\r\n                                    name=\"subject\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    error={Boolean(errors.subject && touched.subject)}\r\n                                    helperText={errors.subject && touched.subject}\r\n                                    value={values.subject}\r\n                                    label=\"subject\"\r\n                                />\r\n                                <TextField\r\n                                    name=\"url\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    value={values.url}\r\n                                    error={Boolean(errors.url && touched.url)}\r\n                                    helperText={errors.url && touched.url}\r\n                                    label=\"url\"\r\n                                />\r\n                                <TextField\r\n                                    style={{ gridColumnEnd: \"span 2\" }}\r\n                                    name=\"note\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    value={values.note}\r\n                                    error={Boolean(errors.note && touched.note)}\r\n                                    helperText={errors.note && touched.note}\r\n                                    label=\"note\"\r\n                                    multiline\r\n                                    rows={4}\r\n                                />\r\n                            </Box>\r\n                            <Box my={2} textAlign=\"center\" display=\"flex\" alignItems=\"center\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    style={{ flex: 1 }}\r\n                                    disabled={isSubmitting}\r\n                                    kind={noteData ? \"edit\" : \"add\"}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                                {noteData && (\r\n                                    <Button kind=\"delete\" style={{ margin: \"0 1em\" }} onClick={handleDelete}>\r\n                                        Delete\r\n                                    </Button>\r\n                                )}\r\n                            </Box>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M21 3H3C2 3 1 4 1 5v14c0 1.1.9 2 2 2h18c1 0 2-1 2-2V5c0-1-1-2-2-2zm0 15.92c-.02.03-.06.06-.08.08H3V5.08L3.08 5h17.83c.03.02.06.06.08.08v13.84zm-10-3.41L8.5 12.5 5 17h14l-4.5-6z\"\n}), 'PhotoSizeSelectActualOutlined');\n\nexports.default = _default;","import { get, post, patch, delete_ } from \".\";\r\n\r\nexport interface IContact {\r\n    id: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    phone: string;\r\n    ext: string;\r\n    email: string;\r\n    title: string;\r\n    department: string;\r\n    active: boolean;\r\n    main: boolean;\r\n    officeHours: string;\r\n}\r\n\r\nexport const getContacts = () => {\r\n    return get(\"/contact\");\r\n};\r\n\r\nexport const getAllModelContact = (model: string, id: string) => {\r\n    return get(`/contact/${model}/${id}`);\r\n};\r\n\r\nexport const createAModelContact = (model: string, id: string, data: IContact) => {\r\n    return post(`/contact/${model}/${id}`, data);\r\n};\r\n\r\nexport const updateAModelContact = (id: string, data: IContact) => {\r\n    return patch(`/contact/${id}`, data);\r\n};\r\n\r\nexport const deleteAModelContact = (id: string) => {\r\n    return delete_(`/contact/${id}`);\r\n};\r\n","import React from \"react\";\r\nimport {\r\n    Tabs,\r\n    Tab,\r\n    TabProps,\r\n    withStyles,\r\n    createStyles,\r\n    Theme,\r\n    makeStyles,\r\n    ExtendButtonBase,\r\n    TabTypeMap,\r\n} from \"@material-ui/core\";\r\n\r\n// const useStyles = makeStyles({\r\n//     root: {\r\n//         textTransform: \"none\",\r\n//         minWidth: \"2em\",\r\n//         minHeight: \"45px\",\r\n//         \"&:hover\": {\r\n//             color: \"#aaa\",\r\n//             opacity: 1,\r\n//         },\r\n//         \"&$selected\": {\r\n//             backgroundColor: \"#1a73e8\",\r\n//             borderRadius: \"0.5em\",\r\n//             color: \"#fff\",\r\n//         },\r\n//         \"&:active\": {\r\n//             borderRadius: \"0.5em\",\r\n//             color: \"#aaa\",\r\n//         },\r\n//         \"&:focus\": {\r\n//             borderRadius: \"0.5em\",\r\n//             color: \"#fff\",\r\n//         },\r\n//     },\r\n// });\r\n\r\nexport const MyTabs = withStyles({\r\n    root: {\r\n        minHeight: \"45px\",\r\n        border: \"1px solid #848484\",\r\n        borderRadius: \"0.5em\",\r\n    },\r\n    indicator: {\r\n        backgroundColor: \"#ccc\",\r\n        height: 0,\r\n    },\r\n})(Tabs);\r\n// ExtendButtonBase<TabTypeMap<{}, \"div\">>\r\n// export const MyTab = (props: any) => {\r\n//     const classes = useStyles();\r\n\r\n//     return <Tab className={classes.root} disableRipple {...props} />;\r\n// };\r\n\r\nexport const MyTab = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            textTransform: \"none\",\r\n            minWidth: \"2em\",\r\n            minHeight: \"45px\",\r\n            \"&:hover\": {\r\n                color: \"#aaa\",\r\n                opacity: 1,\r\n            },\r\n            \"&$selected\": {\r\n                backgroundColor: \"#1a73e8\",\r\n                borderRadius: \"0.5em\",\r\n                color: \"#fff\",\r\n            },\r\n            \"&:active\": {\r\n                borderRadius: \"0.5em\",\r\n                color: \"#aaa\",\r\n            },\r\n            \"&:focus\": {\r\n                borderRadius: \"0.5em\",\r\n                color: \"#fff\",\r\n            },\r\n        },\r\n        selected: {},\r\n    })\r\n)((props: any) => <Tab disableRipple {...props} />);\r\n","import { get, post, delete_, patch } from \".\";\r\n\r\nexport interface ICustomer {\r\n    id: string;\r\n    approved: boolean;\r\n    name: string;\r\n    address: string;\r\n    state: string;\r\n    city: string;\r\n    zipcode: string;\r\n    phone: string;\r\n    email: string;\r\n    productLine: string;\r\n    supportStaff: string;\r\n    refferedBy: string;\r\n    linkedId: string;\r\n    facebook: string;\r\n    instagram: string;\r\n    website: string;\r\n    size: string;\r\n    fax: string;\r\n    parent: string;\r\n    status: string;\r\n    regularCommissionPercentage: number;\r\n    overageCommissionPercentage: number;\r\n    CustomerTypeId: string;\r\n}\r\n\r\nexport const getCustomers = () => {\r\n    return get(\"/customer\");\r\n};\r\n\r\nexport const addCustomer = (customer: ICustomer) => {\r\n    return post(\"/customer\", customer);\r\n};\r\n\r\nexport const deleteCustomer = (id: string) => {\r\n    return delete_(`/customer/${id}`);\r\n};\r\n\r\nexport const editCustomer = (id: string, data: ICustomer) => {\r\n    return patch(`/customer/${id}`, data);\r\n};\r\n","import { get, patch, post, delete_ } from \".\";\r\n\r\nimport { ICustomer } from \"./customer\";\r\nimport { IEmployee } from \"./employee\";\r\n\r\nimport { ILineItem } from \"./lineItem\";\r\nimport { ILineService } from \"./lineService\";\r\n\r\nexport interface IQuote {\r\n    id: string;\r\n    number: string;\r\n    relatedNumber: string;\r\n    SOId: string;\r\n    entryDate: number;\r\n    expireDate: number;\r\n    ProjectId: any;\r\n    location: string;\r\n    leadTime: string;\r\n    note: string;\r\n    status: string;\r\n    repOrAgency: ICustomer;\r\n    requesterName: string;\r\n    requesterMail: string;\r\n    requesterPhone: string;\r\n    client: ICustomer;\r\n    unitPricingLevel: string;\r\n    estimatedShipDate: number;\r\n    TicketId: number;\r\n    QuoteRequestId?: any;\r\n    freightTerms: string;\r\n    paymentTerms: string;\r\n    depositRequired: boolean;\r\n    deposit: number;\r\n    depositAmount: number;\r\n    commissionRate: string;\r\n    regularCommission: number;\r\n    overageCommission: number;\r\n    salesperson: IEmployee;\r\n\r\n    EmployeeId: IEmployee;\r\n    createdAt: number;\r\n    updatedAt: number;\r\n    totalAmount: number;\r\n    lineItemRecords: ILineItem[];\r\n    lineServiceRecords: ILineService[];\r\n    __v: number;\r\n}\r\n\r\nexport interface IQuoteComplete extends IQuote {\r\n    lines: ILineItem[];\r\n    lineServices: ILineService[];\r\n}\r\n\r\nexport const createQuoteLineService = (quoteId: string, data: ILineService) => {\r\n    return post(`/quote/${quoteId}/lineservice`, data);\r\n};\r\n\r\nexport const editQuoteLineService = (id: string, data: ILineService) => {\r\n    return patch(`/lineservice/${id}`, data);\r\n};\r\n\r\nexport const deleteQuoteLineService = (id: string) => {\r\n    return delete_(`/lineservice/${id}`);\r\n};\r\n\r\nexport const getQuoteLineServices = (quoteId: string) => {\r\n    return get(`/lineservice`, { params: { quoteId } });\r\n};\r\n\r\nexport const createLineItem = (qId: string, data: ILineItem) => {\r\n    return post(`/quote/${qId}/lineitem`, data);\r\n};\r\n\r\nexport const editLineItem = (id: string, data: ILineItem) => {\r\n    return patch(`/lineitem/${id}`, data);\r\n};\r\n\r\nexport const deleteLineItem = (id: string) => {\r\n    return delete_(`/lineitem/${id}`);\r\n};\r\n\r\nexport const getLineItems = (quoteId: string) => {\r\n    return get(`/lineitem`, { params: { QuoteId: quoteId } });\r\n};\r\n\r\nexport const getQuotes = () => {\r\n    return get(\"/quote\");\r\n};\r\n\r\nexport const getQuoteById = (id: string) => {\r\n    return get(`/quote/${id}`);\r\n};\r\n\r\nexport const createQuote = (data: IQuote) => {\r\n    return post(\"/quote\", data);\r\n};\r\nexport const createQuoteComplete = (data: any) => {\r\n    return post(\"/quote\", data);\r\n};\r\n\r\nexport const updateQuote = (id: string, data: IQuote) => {\r\n    return patch(`/quote/${id}`, data);\r\n};\r\n\r\nexport const deleteQuote = (id: string) => {\r\n    return delete_(`/quote/${id}`);\r\n};\r\n","import { get, post, patch, delete_ } from \".\";\r\n\r\nexport interface INote {\r\n    id?: string;\r\n    subject: string;\r\n    note: string;\r\n    url?: string;\r\n}\r\n\r\nexport const getAllModelNotes = (model: string, id: string) => {\r\n    return get(`/note/${model}/${id}`);\r\n};\r\n\r\nexport const createAModelNote = (model: string, id: string, data: INote) => {\r\n    return post(`/note/${model}/${id}`, data);\r\n};\r\n\r\nexport const updateAModelNote = (id: string, data: INote) => {\r\n    return patch(`/note/${id}`, data);\r\n};\r\n\r\nexport const deleteAModelNote = (id: string) => {\r\n    return delete_(`/note/${id}`);\r\n};\r\n","import List from \"@material-ui/core/List\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nexport default withStyles((theme) => ({\r\n    root: {\r\n        position: \"sticky\",\r\n        top: 70,\r\n\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: \"#ffff\",\r\n        boxShadow: theme.shadows[\"4\"],\r\n        borderRadius: 50,\r\n        padding: \"8px 4px\",\r\n\r\n        \"& .MuiListItem-gutters\": {\r\n            padding: \"4px 0\",\r\n        },\r\n    },\r\n}))(List);\r\n","import {get, post, patch, delete_ } from \".\";\r\n\r\nexport interface IProject {\r\n    id?: string;\r\n    name: string;\r\n}\r\n\r\nexport const getProjects = () => {\r\n    return get(\"/project\");\r\n};\r\n\r\nexport const createProject = (name: string) => {\r\n    return post(\"/project\", { name });\r\n};\r\n\r\nexport const updateProject = (pId: string, data: any) => {\r\n    return patch(`/project/${pId}`, data);\r\n};\r\n\r\nexport const deleteProject = (pId: string) => {\r\n    return delete_(`/project/${pId}`);\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v10zM18 4h-2.5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z\"\n}), 'DeleteRounded');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M18 13h-5v5c0 .55-.45 1-1 1s-1-.45-1-1v-5H6c-.55 0-1-.45-1-1s.45-1 1-1h5V6c0-.55.45-1 1-1s1 .45 1 1v5h5c.55 0 1 .45 1 1s-.45 1-1 1z\"\n}), 'AddRounded');\n\nexports.default = _default;","import React, { useState, useEffect } from \"react\";\r\nimport { Box, Accordion, AccordionSummary, AccordionDetails, MenuItem } from \"@material-ui/core\";\r\nimport { ExpandMoreRounded } from \"@material-ui/icons\";\r\n\r\nimport Snackbar from \"./Snack\";\r\nimport TextField from \"./TextField\";\r\nimport Button from \"./Button\";\r\nimport { BaseSelect } from \"./Inputs\";\r\n\r\nexport const GeneralForm = ({\r\n    type,\r\n    getRecord,\r\n    addRecord,\r\n    updateRecord,\r\n    deleteRecord,\r\n    onDone,\r\n}: {\r\n    type: string;\r\n    addRecord: (v: string) => Promise<any>;\r\n    getRecord: () => Promise<any>;\r\n    updateRecord: (id: string, v: string) => Promise<any>;\r\n    deleteRecord: (id: string) => Promise<any>;\r\n    onDone?: () => void;\r\n}) => {\r\n    const [data, setData] = useState([]);\r\n    const [dis, setDis] = useState(false);\r\n    const [showSnack, setShowSnack] = useState(false);\r\n    const [snackMsg, setSnackMsg] = useState(\"\");\r\n\r\n    const [addName, setAddName] = useState(\"\");\r\n    const [editName, setEditName] = useState(\"\");\r\n    const [selectedData, setSelectedData] = useState<string>();\r\n\r\n    const showMsg = (d: any) => {\r\n        setShowSnack(true);\r\n        if (d.error) {\r\n            setSnackMsg(d.error);\r\n        } else {\r\n            setSnackMsg(\"Request Successful...\");\r\n        }\r\n    };\r\n\r\n    const refreshData = async () => {\r\n        try {\r\n            const data = await getRecord();\r\n            setData(data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshData();\r\n    }, []);\r\n\r\n    const handleAdd = async () => {\r\n        setDis(true);\r\n        try {\r\n            if (addName) {\r\n                const resp = await addRecord(addName);\r\n                resp && setDis(false);\r\n                refreshData();\r\n                showMsg(resp);\r\n                onDone && onDone();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    const handleEdit = async () => {\r\n        setDis(true);\r\n        try {\r\n            if (selectedData && editName) {\r\n                const resp = await updateRecord(selectedData, editName);\r\n                resp && setDis(false);\r\n                refreshData();\r\n                showMsg(resp);\r\n                onDone && onDone();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    const handleDelete = async () => {\r\n        setDis(true);\r\n        try {\r\n            if (selectedData) {\r\n                const resp = await deleteRecord(selectedData);\r\n                resp && setDis(false);\r\n                refreshData();\r\n                showMsg(resp);\r\n                onDone && onDone();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Snackbar onClose={() => setShowSnack(false)} open={showSnack}>\r\n                {snackMsg}\r\n            </Snackbar>\r\n\r\n            <Box m={2} p={2}>\r\n                <Accordion>\r\n                    <AccordionSummary expandIcon={<ExpandMoreRounded />}>Add</AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <form\r\n                            onSubmit={(e: any) => {\r\n                                e.preventDefault();\r\n                                handleAdd();\r\n                            }}\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-end\">\r\n                                <TextField\r\n                                    fullWidth\r\n                                    value={addName}\r\n                                    onChange={(e) => setAddName(e.target.value)}\r\n                                    placeholder={`${type} name`}\r\n                                    style={{ marginRight: \"8px\", flex: 1 }}\r\n                                />\r\n                                <Button type=\"submit\" kind=\"add\" disabled={dis} style={{ marginBottom: \"8px\" }}>\r\n                                    Add\r\n                                </Button>\r\n                            </Box>\r\n                        </form>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion defaultExpanded>\r\n                    <AccordionSummary expandIcon={<ExpandMoreRounded />}>Edit</AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <form\r\n                            onSubmit={(e: any) => {\r\n                                e.preventDefault();\r\n                                handleEdit();\r\n                            }}\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            <Box width=\"100%\" display=\"flex\" alignItems=\"center\">\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"new name\"\r\n                                    value={editName}\r\n                                    onChange={(e) => setEditName(e.target.value)}\r\n                                    style={{ flex: 1, margin: \"0px 0px 5px 0px\" }}\r\n                                    placeholder={`New ${type} name`}\r\n                                />\r\n                            </Box>\r\n\r\n                            <Box width=\"100%\" display=\"flex\" alignItems=\"center\">\r\n                                <BaseSelect fullWidth value={selectedData} onChange={(e: any) => setSelectedData(e.target.value)}>\r\n                                    {data.map((cat: { id: string; name: string }) => (\r\n                                        <MenuItem key={cat.id} value={cat.id}>\r\n                                            {cat.name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </BaseSelect>\r\n\r\n                                <Button type=\"submit\" disabled={dis} kind=\"edit\" style={{ margin: \"0 0.5em\" }}>\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </form>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion>\r\n                    <AccordionSummary expandIcon={<ExpandMoreRounded />}>Delete</AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <form\r\n                            onSubmit={(e: any) => {\r\n                                e.preventDefault();\r\n                                handleDelete();\r\n                            }}\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            <Box width=\"100%\" display=\"flex\" alignItems=\"center\">\r\n                                <BaseSelect value={selectedData} onChange={(e: any) => setSelectedData(e.target.value)} fullWidth>\r\n                                    {data.map((cat: { id: string; name: string }) => (\r\n                                        <MenuItem key={cat.id} value={cat.id}>\r\n                                            {cat.name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </BaseSelect>\r\n                                <Button type=\"submit\" disabled={dis} kind=\"delete\" style={{ margin: \"0 0.5em\" }}>\r\n                                    Delete\r\n                                </Button>\r\n                            </Box>\r\n                        </form>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n","import { delete_, get, patch, post } from \".\";\r\n\r\nexport interface IActivity {\r\n    id?: string;\r\n    name: string;\r\n    subject: string;\r\n    location: string;\r\n    notes: string;\r\n    startTime: string;\r\n    endTime: string;\r\n    allDayActivity: boolean;\r\n    doNotShowOnCalendar: boolean;\r\n    recurring: boolean;\r\n    notifyNow: boolean;\r\n    notifyOnDay: boolean;\r\n\r\n    OpportunityId?: number | null;\r\n\r\n    ClientId: number | null;\r\n    ContactId: number | null;\r\n    ProjectId: number | null;\r\n    EmployeeId: number | null;\r\n    QuoteId: number | null;\r\n    ActivityCategoryId: number | null;\r\n    ActivityStatusId: number | null;\r\n    ActivityPriorityId: number | null;\r\n}\r\n\r\nexport const getActivities = () => {\r\n    return get(\"/activity\");\r\n};\r\n\r\nexport const getClientActivities = (clientId: string) => {\r\n    return get(`/activity/client/${clientId}`);\r\n};\r\n\r\nexport const getQuoteActivities = (quoteId: string) => {\r\n    return get(`/activity/quote/${quoteId}`);\r\n};\r\n\r\nexport const getProjectActivities = (projectId: string) => {\r\n    return get(`/activity/project/${projectId}`);\r\n};\r\n\r\nexport const createActivity = (data: IActivity) => {\r\n    return post(\"/activity\", data);\r\n};\r\n\r\nexport const updateActivity = (id: string, data: IActivity) => {\r\n    return patch(`/activity/${id}`, data);\r\n};\r\n\r\nexport const deleteActivity = (id: string) => {\r\n    return delete_(`/activity/${id}`);\r\n};\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(_react.default.Fragment, null, _react.default.createElement(\"path\", {\n  d: \"M11.15 3.4L7.43 9.48c-.41.66.07 1.52.85 1.52h7.43c.78 0 1.26-.86.85-1.52L12.85 3.4c-.39-.64-1.31-.64-1.7 0z\"\n}), _react.default.createElement(\"circle\", {\n  cx: \"17.5\",\n  cy: \"17.5\",\n  r: \"4.5\"\n}), _react.default.createElement(\"path\", {\n  d: \"M4 21.5h6c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1z\"\n})), 'CategoryRounded');\n\nexports.default = _default;"],"sourceRoot":""}