{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../node_modules/@material-ui/core/esm/Radio/Radio.js","../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js","../node_modules/@material-ui/icons/esm/NoteAddRounded.js","../node_modules/@material-ui/icons/esm/PlaylistAddCheckRounded.js","../node_modules/@material-ui/icons/esm/CategoryRounded.js","../node_modules/@material-ui/icons/esm/ShoppingCartRounded.js","features/Tickets/Table.tsx","api/ticketStatus.ts","api/ticketTag.ts","api/ticketCategory.ts","features/Tickets/Forms.tsx","features/Tickets/Details.tsx","features/Tickets/Modals.tsx","features/Tickets/AddTag.tsx","features/Tickets/AddStatus.tsx","features/Tickets/AddCategory.tsx","features/Tickets/index.tsx","app/Button.tsx","app/BaseDataGrid.tsx","app/Inputs/index.tsx","app/Paper.tsx","logic/date.ts","app/Toast.tsx","logic/utils.ts","api/items.ts","api/document.ts","components/PDFPreview/index.tsx","features/Modals/DocumentModals.tsx","logic/pdf.ts","app/Snack.tsx","logic/fileType.ts","features/Modals/NoteModals.tsx","../node_modules/@material-ui/icons/PhotoSizeSelectActualOutlined.js","api/fieldService.ts","api/contact.ts","api/customer.ts","api/units.ts","api/quote.ts","api/note.ts","app/SideUtilityList.tsx","components/Datagrid/hooks.tsx","api/project.ts","api/ticket.ts","api/vendor.ts","../node_modules/@material-ui/core/esm/Link/Link.js","api/so.ts","../node_modules/@material-ui/core/esm/TableContainer/TableContainer.js","../node_modules/@material-ui/core/esm/Table/Table.js","../node_modules/@material-ui/core/esm/TableHead/TableHead.js","../node_modules/@material-ui/core/esm/TableRow/TableRow.js","../node_modules/@material-ui/core/esm/TableBody/TableBody.js","../node_modules/@material-ui/icons/DeleteRounded.js","api/po.ts","api/address.ts","api/phone.ts","api/emailAddress.ts","PDFTemplates/SOCus.tsx","PDFTemplates/SORep.tsx","PDFTemplates/SOAcc.tsx","features/Sales/SO/Forms.tsx","PDFTemplates/Quote.tsx","features/Sales/Quote/Forms.tsx","../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js","../node_modules/@material-ui/core/esm/SnackbarContent/SnackbarContent.js","../node_modules/@material-ui/core/esm/Snackbar/Snackbar.js","PDFTemplates/PurchasePO.tsx","features/Purchase/PO/Forms.tsx","api/purchasePO.ts","api/purchasePoType.ts","../node_modules/@material-ui/core/esm/Step/Step.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckCircle.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Warning.js","../node_modules/@material-ui/core/esm/StepIcon/StepIcon.js","../node_modules/@material-ui/core/esm/StepLabel/StepLabel.js","../node_modules/@material-ui/core/esm/StepConnector/StepConnector.js","../node_modules/@material-ui/core/esm/Stepper/Stepper.js","features/Sales/Quote/Datagrid.tsx","features/Sales/Quote/EditForm.tsx","features/Sales/SO/EditForm.tsx","../node_modules/@material-ui/icons/esm/PostAddRounded.js","features/Sales/Quote/General.tsx","features/Sales/Quote/AddQuote.tsx","features/Sales/SO/Datagrid.tsx","features/Sales/SO/MainForm.tsx","features/Sales/SO/AddSoModal.tsx","../node_modules/@material-ui/icons/esm/FileCopyRounded.js","../node_modules/@material-ui/icons/esm/LocalOfferRounded.js"],"names":["createSvgIcon","React","d","withStyles","theme","root","position","display","transform","transition","transitions","create","easing","easeOut","duration","shortest","layer","left","easeIn","checked","name","props","classes","fontSize","className","clsx","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","ref","checkedProp","_props$color","color","nameProp","onChangeProp","onChange","_props$size","size","other","_objectWithoutProperties","radioGroup","RadioGroupContext","createChainedFunction","value","SwitchBase","_extends","type","icon","checkedIcon","concat","capitalize","disabled","palette","text","secondary","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","colorSecondary","FormGroup","_props$row","row","flexDirection","flexWrap","RadioGroup","actions","children","valueProp","rootRef","_useControlled","useControlled","controlled","default","defaultValue","_useControlled2","_slicedToArray","setValue","focus","input","current","querySelector","handleRef","useForkRef","useId","Provider","event","target","role","createElement","Fragment","cx","cy","r","Table","onRowSelected","tickets","useSWR","data","cols","field","valueFormatter","formatTimestampToDate","createdAt","width","headerName","valueGetter","repOrAgency","state","zipcode","AssignedTo","username","category","deadline","status","tag","BaseDataGrid","rows","getTicketStatus","get","addTicketStatus","post","getTicketTags","addTicketTags","getTicketCategory","addTicketCategory","TicketForm","values","errors","handleChange","handleBlur","handleDelete","setFieldValue","useState","LineServiceRecordId","selectedLineService","setSelectedLineService","SOId","setSOId","services","Box","mt","gridTemplateColumns","style","gap","DateTimePicker","date","toString","onBlur","error","Boolean","helperText","placeholder","label","request","itemTitleField","itemValueField","fullWidth","id","Tags","TextField","number","undefined","getSO","e","QuoteId","getQuotes","ItemId","getItems","getOptionList","result","UnitId","getAllUnits","Autocomplete","options","getOptionLabel","option","ServiceId","nv","renderInput","params","expireDate","assignedTo","getAllEmployees","keyField","createdBy","subject","gridColumnEnd","description","multiline","response","FormControlLabel","control","Checkbox","fsh","alignItems","Button","kind","marginRight","onClick","TechnicianForm","vendorTech","vendorEmail","getPO","POId","sendPO","DateSent","EntitiesForm","my","gridColumnGap","gridRowGap","getCustomers","address","city","requesterName","requesterMail","requesterPhone","opacity","client","contact","lastName","email","unitPricingLevel","gridGap","getAllModelContact","twentyFourContact","ContactForm","touched","contactName","contactNumber","contactMail","Details","initialValue","onDocumentSelected","onNoteSelected","notes","fetcher","documents","lineItem","LineItemRecordId","itemDocuments","activeTab","setActiveTab","moreActiveTab","setMoreActiveTab","snack","setSnack","msg","setMsg","severity","setSeverity","noteCols","useMemo","EmployeeId","flex","docCols","employee","fileType","path","handleSubmit","a","getModifiedValues","updateTicket","mutate","console","log","Snack","open","onClose","initialValues","validationSchema","schema","onSubmit","Tabs","Tab","variant","JobId","n","Modal","createTicket","Dialog","title","Yup","shape","required","CustomerTypeModal","confirm","setConfirm","selectedCT","setSelectedCT","ticketTags","resetForm","patch","Toast","delete_","Confirm","onConfirm","maxWidth","m","getFieldProps","setValues","List","map","ct","ListItem","ListItemText","ListItemSecondaryAction","IconButton","EditRounded","DeleteRounded","ticketStatus","ticketCategory","Tickets","ticketModal","setTicketModal","noteModal","setNoteModal","documentModal","setDocumentModal","soModal","setSoModal","quoteModal","setQuoteModal","tagModal","setTagModal","statusModal","setStatusModal","categoryModal","setCategoryModal","selectedJob","setSelectedJob","selectedNote","setSelectedNote","selectedDocument","setSelectedDocument","model","itemId","noteData","onDone","docData","initialData","AddQuote","textColor","flexGrow","AddRounded","NoteAddRounded","FileCopyRounded","LocalOfferRounded","PlaylistAddCheckRounded","CategoryRounded","ShoppingCartRounded","PostAddRounded","ml","MyButton","useStyles","makeStyles","btnStyle","background","Gradients","success","warning","icons","add","edit","delete","startIcon","useDataGridStyles","border","height","boxShadow","fill","density","components","Toolbar","GridToolbar","columns","ScrollDataGrid","MaterialFieldSelect","limit","getOptionValue","setOptions","findValue","setFindValue","useEffect","t","find","o","then","slice","catch","ObjectSelect","inputStyle","items","select","length","item","i","FieldSelect","setItems","ArraySelect","BaseSelect","BasePaper","borderRadius","padding","IconPaper","spacing","justifyContent","elevation","timestamp","format","content","toast","info","formatDate","dateFormat","Date","modifiedValues","Object","entries","forEach","entry","key","keys","countProperty","propGetter","filter","generateQuery","queryArray","paramValue","paramName","push","join","AddItemSchema","min","max","createItem","itemData","addImage","file","FormData","append","updateAnItem","deleteAnItem","addManualCount","count","updateItemQuantity","getAllModelDocuments","createAModelDocument","fileName","formData","updateAModelDocument","docid","deleteAModelDocument","PDFPreview","pdf","src","mutateDocuments","DocumentModal","fileUploader","useRef","deleteDocument","setSubmitting","fullScreen","isSubmitting","hidden","files","click","margin","Link","download","href","marginBottom","marginLeft","exportPdf","doc","jsPDF","unit","html","callback","save","res","output","x","y","html2canvas","scale","autoHideDuration","url","split","pop","AddModelNoteSchema","note","mutateNotes","NoteModal","updateAModelNote","createAModelNote","deleteAModelNote","textAlign","_interopRequireDefault","require","defineProperty","exports","_react","_default","getFieldServices","createFieldService","updateFieldService","addServiceToLineitem","lineId","serviceId","removeServiceFromLineitem","getContacts","createAModelContact","updateAModelContact","deleteAModelContact","addCustomer","customer","deleteCustomer","editCustomer","unitId","deleteImage","updateUnit","dueDate","getTime","getQuoteById","createQuote","createQuoteComplete","updateQuote","deleteQuote","getAllModelNotes","top","shadows","useDataGridData","page","setPage","loading","setLoading","dataGridClasses","paginationQueries","otherQueries","val","useStickyResult","getProjects","createProject","updateProject","pId","deleteProject","getTickets","createVendor","getVendors","updateVendor","deleteVendor","_props$component","component","onFocus","TypographyClasses","_props$underline","underline","_props$variant","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","Typography","button","underlineNone","textDecoration","underlineHover","underlineAlways","WebkitTapHighlightColor","outline","cursor","userSelect","verticalAlign","borderStyle","createSOComplete","estimatedShipDate","actualShipDate","editSO","deleteSO","TableContainer","Component","overflowX","defaultComponent","_props$padding","_props$stickyHeader","stickyHeader","table","TableContext","borderCollapse","borderSpacing","typography","body2","captionSide","tablelvl2","TableHead","Tablelvl2Context","TableRow","_props$hover","hover","_props$selected","selected","head","footer","selectedOpacity","TableBody","createPO","reciever","String","ContactId","ClientId","ProjectId","updatePO","deletePO","getAddresses","getPhones","getEmails","onePage","minHeight","exact","grid","gridTemplateRows","marginTop","right","borderLeft","SOCus","SORep","divider","logo","column","topTableContainer","topTable","topTableHead","th","td","GeneralForm","onChangeInit","selectedQuote","setSelectedQuote","freightTerms","paymentTerms","carrier","issuedBy","expodate","estShipDate","actShipDate","shippingAddress","shippingContact","shippingPhone","shippingEmail","shippingEntitiy","billingContact","billingPhone","billingEmail","billingAddress","billingEntitiy","requester","resp","invoice","warranty","location","leadTime","acknowledgeDate","csa","Paper","callADayBeforeDelivery","AddressesForm","billingAddressCompany","billingAddressAttn","billingAddressAddress","billingAddressCity","billingAddressState","billingAddressZipCode","billingAddressCountry","billingAddressPhone","billingAddressEmail","shippingAddressCompany","shippingAddressAttn","shippingAddressAddress","shippingAddressCity","shippingAddressState","shippingAddressZipCode","shippingAddressCountry","shippingAddressPhone","shippingAddressEmail","AccountingForm","requestApproval","commisionBaseAmt","regularCommision","overageCommision","totalCommision","soCost","partsCost","labor","ApprovalForm","releaseToProduction","expedite","releaseDate","ShippingForm","orgShipDate","BillingTab","FormControl","FormLabel","TermsTab","DocumentForm","createdSO","divToPrintAcc","divToPrintRep","divToPrintCus","setCanSave","isUploading","setIsUploading","handleSaveDocument","generatedAccPdf","toJSON","generatedRepPdf","generatedCusPdf","overflowY","LinearProgress","header","pfe","headContain","fontWeight","gray","Qty","lineItemName","borderBottom","span","QuotePDF","createdQuote","total","lineItemRecords","l","quantity","price","entryDate","index","no","paddingRight","regularCommission","createdQoute","divToPrint","generatedPdf","salesperson","EntitiesTab","CommissionTab","commissionLabel","overageCommission","defaultIconMapping","SuccessOutlinedIcon","ReportProblemOutlinedIcon","ErrorOutlineIcon","InfoOutlinedIcon","_ref","CloseIcon","Alert","_props$closeText","closeText","_props$iconMapping","iconMapping","_props$role","_props$severity","square","message","getColor","darken","lighten","getBackgroundColor","standardSuccess","standardInfo","standardWarning","standardError","outlinedSuccess","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeightMedium","filledInfo","filledWarning","filledError","paddingLeft","SnackbarContent","emphasis","emphasize","_defineProperty","getContrastText","breakpoints","up","minWidth","Snackbar","_props$anchorOrigin","anchorOrigin","vertical","horizontal","_props$autoHideDurati","ClickAwayListenerProps","ContentProps","_props$disableWindowB","disableWindowBlurListener","onEnter","onEntered","onEntering","onExit","onExited","onExiting","onMouseEnter","onMouseLeave","resumeHideDuration","_props$TransitionComp","TransitionComponent","Grow","_props$transitionDura","transitionDuration","enter","enteringScreen","exit","leavingScreen","TransitionProps","timerAutoHide","exited","setExited","handleClose","useEventCallback","apply","arguments","setAutoHideTimer","autoHideDurationParam","clearTimeout","setTimeout","handlePause","handleResume","window","addEventListener","removeEventListener","ClickAwayListener","onClickAway","appear","in","timeout","direction","top1","bottom1","bottom","top3","bottom3","right3","left3","center","zIndex","snackbar","anchorOriginTopCenter","anchorOriginBottomCenter","anchorOriginTopRight","anchorOriginBottomRight","anchorOriginTopLeft","anchorOriginBottomLeft","flip","PurchasePO","lines","sum","vendor","borderTop","firstName","borderRight","maxHeight","createdPO","setContact","setVendor","setRequester","canSave","setData","contacts","vendors","emps","fcontact","c","fvendor","v","VendorId","femp","FinalForm","onBack","setError","newLines","PurchasePOId","PurchaseSOId","updatedAt","createPurchasePOComplete","LinesForm","devices","createdItems","setCreatedItems","selectedItem","setSelectedItem","when","is","otherwise","prev","ind","handleNext","_line","s","mr","freeSolo","multiple","fru","tax","endIcon","TableCell","htmlColor","CreateForm","activeMoreTab","setActiveMoreTab","getPPOTypes","purchasePOTypeId","approvedBy","terms","addForm","UpdateForm","columnGap","approved","MoreInfoForm","approvedDate","requiredBy","billingAddressZipcode","shippingAddressZipcode","VendorForm","website","phone","getPurchasePOs","updatePurchasePO","deletePurchasePO","getPurchasePOLines","addPPOType","editPPOType","deletePPOType","Step","_props$active","active","alternativeLabel","_props$completed","completed","connectorProp","connector","_props$disabled","_props$expanded","expanded","last","orientation","newChildren","child","StepIcon","_props$error","Warning","CheckCircle","SvgIcon","textAnchor","contrastText","caption","fontFamily","StepLabel","_props$alternativeLab","optional","_props$orientation","StepIconComponentProp","StepIconComponent","StepIconProps","iconContainer","labelContainer","muiName","flexShrink","StepConnector","line","lineHorizontal","lineVertical","borderColor","grey","borderTopStyle","borderTopWidth","borderLeftStyle","borderLeftWidth","defaultConnector","Stepper","_props$activeStep","activeStep","_props$connector","_props$nonLinear","nonLinear","childrenArray","toArray","steps","step","QuoteDataGrid","pagination","paginationMode","onPageChange","p","pageSize","rowCount","EditForm","selectedSo","reqData","GeneralQuote","exp","mx","py","addFromReq","setStep","quote","setQuote","setCreatedQuote","closeOnClickOut","SODataGrid","originalShippingDate","cost","MainForm","AddSOModal","so","setSO","setCreatedSO"],"mappings":"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","file":"static/js/18.009713cb.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/unstable_useId';\nvar RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  var actions = props.actions,\n      children = props.children,\n      nameProp = props.name,\n      valueProp = props.value,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"actions\", \"children\", \"name\", \"value\", \"onChange\"]);\n\n  var rootRef = React.useRef(null);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: props.defaultValue,\n    name: 'RadioGroup'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  React.useImperativeHandle(actions, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n        if (!input) {\n          input = rootRef.current.querySelector('input:not(:disabled)');\n        }\n\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n  var handleRef = useForkRef(ref, rootRef);\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  var name = useId(nameProp);\n  return /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: {\n      name: name,\n      onChange: handleChange,\n      value: value\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, _extends({\n    role: \"radiogroup\",\n    ref: handleRef\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M14.59 2.59c-.38-.38-.89-.59-1.42-.59H6c-1.1 0-2 .9-2 2v16c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8.83c0-.53-.21-1.04-.59-1.41l-4.82-4.83zM15 16h-2v2c0 .55-.45 1-1 1s-1-.45-1-1v-2H9c-.55 0-1-.45-1-1s.45-1 1-1h2v-2c0-.55.45-1 1-1s1 .45 1 1v2h2c.55 0 1 .45 1 1s-.45 1-1 1zm-2-8V3.5L18.5 9H14c-.55 0-1-.45-1-1z\"\n}), 'NoteAddRounded');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M13 10H3c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1zm0-4H3c-.55 0-1 .45-1 1s.45 1 1 1h10c.55 0 1-.45 1-1s-.45-1-1-1zM3 16h6c.55 0 1-.45 1-1s-.45-1-1-1H3c-.55 0-1 .45-1 1s.45 1 1 1zm19.21-3.79l.09.09c.39.39.39 1.02 0 1.41l-5.58 5.59c-.39.39-1.02.39-1.41 0l-3.09-3.09a.9959.9959 0 010-1.41l.09-.09c.39-.39 1.02-.39 1.41 0l2.3 2.3 4.78-4.79c.38-.4 1.02-.4 1.41-.01z\"\n}), 'PlaylistAddCheckRounded');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M11.15 3.4L7.43 9.48c-.41.66.07 1.52.85 1.52h7.43c.78 0 1.26-.86.85-1.52L12.85 3.4c-.39-.64-1.31-.64-1.7 0z\"\n}), React.createElement(\"circle\", {\n  cx: \"17.5\",\n  cy: \"17.5\",\n  r: \"4.5\"\n}), React.createElement(\"path\", {\n  d: \"M4 21.5h6c.55 0 1-.45 1-1v-6c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1v6c0 .55.45 1 1 1z\"\n})), 'CategoryRounded');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 3c0 .55.45 1 1 1h1l3.6 7.59-1.35 2.44C4.52 15.37 5.48 17 7 17h11c.55 0 1-.45 1-1s-.45-1-1-1H7l1.1-2h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49c.37-.66-.11-1.48-.87-1.48H5.21l-.67-1.43c-.16-.35-.52-.57-.9-.57H2c-.55 0-1 .45-1 1zm16 15c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z\"\n}), 'ShoppingCartRounded');","import React from \"react\";\r\nimport { GridColDef } from \"@material-ui/data-grid\";\r\nimport useSWR from \"swr\";\r\n\r\nimport BaseDataGrid from \"../../app/BaseDataGrid\";\r\n\r\n// import { fetcher } from \"../../api\";\r\nimport { ITicket } from \"../../api/ticket\";\r\nimport { formatTimestampToDate } from \"../../logic/date\";\r\n\r\nexport default function Table({ onRowSelected }: { onRowSelected: (d: ITicket) => void }) {\r\n    const { data: tickets } = useSWR<ITicket[]>(\"/ticket\");\r\n\r\n    const cols: GridColDef[] = [\r\n        {\r\n            field: \"Date\",\r\n            valueFormatter: (r) => formatTimestampToDate(r.row?.createdAt),\r\n            width: 110,\r\n        },\r\n        { field: \"number\", headerName: \"Ticket ID\", width: 110 },\r\n        { field: \"subject\", headerName: \"Subject\", width: 110 },\r\n        { field: \"Company\", headerName: \"Company\", width: 110, valueGetter: (data) => data.row.repOrAgency?.name },\r\n        { field: \"contactName\", headerName: \"Contact Name\", width: 130 },\r\n        { field: \"contactNumber\", headerName: \"Contact Number\", width: 130 },\r\n        { field: \"contactEmail\", headerName: \"Contact Email\", width: 130 },\r\n        { field: \"state\", headerName: \"State\", width: 110, valueGetter: (data) => data.row.repOrAgency?.state },\r\n        { field: \"Zip Code\", headerName: \"Zip Code\", width: 110, valueGetter: (data) => data.row.repOrAgency?.zipcode },\r\n        {\r\n            field: \"assignedTo\",\r\n            headerName: \"Assigned to\",\r\n            width: 120,\r\n            valueGetter: (data) => data.row.AssignedTo?.username,\r\n        },\r\n        {\r\n            field: \"createdBy\",\r\n            headerName: \"Created By\",\r\n            width: 120,\r\n            valueGetter: (data) => data.row.AssignedTo?.username,\r\n        },\r\n        { field: \"Category\", headerName: \"Category\", width: 110, valueGetter: (data) => data.row.category?.name },\r\n        {\r\n            field: \"deadline\",\r\n            headerName: \"Target Date\",\r\n            width: 120,\r\n            valueFormatter: (r) => formatTimestampToDate(r.row?.deadline),\r\n        },\r\n        { field: \"status\", headerName: \"Status\", width: 110, valueGetter: (data) => data.row.status?.name },\r\n        { field: \"tag\", headerName: \"tag\", width: 110, valueGetter: (data) => data.row.tag?.name },\r\n    ];\r\n\r\n    // if (!tickets) {\r\n    //     return <LinearProgress />;\r\n    // }\r\n\r\n    return <BaseDataGrid cols={cols} rows={tickets || []} onRowSelected={onRowSelected} />;\r\n}\r\n","import { delete_, get, patch, post } from \".\";\r\nexport interface ITicketStatus {\r\n    id?: string;\r\n    inputValue?: string;\r\n    name: string;\r\n}\r\n\r\nexport const getTicketStatus = () => {\r\n    return get(\"/ticketStatus\");\r\n};\r\n\r\nexport const addTicketStatus = (name: string) => {\r\n    return post(\"/ticketStatus\", { name });\r\n};\r\n\r\nexport const editTicketStatus = (id: string, name: string) => {\r\n    return patch(`/ticketStatus/${id}`, { name });\r\n};\r\n\r\nexport const deleteTicketStatus = (id: string) => {\r\n    return delete_(`/ticketStatus/${id}`);\r\n};\r\n","import { delete_, get, patch, post } from \".\";\r\nexport interface ITicketTag {\r\n    id?: string;\r\n    inputValue?: string;\r\n    name: string;\r\n}\r\n\r\nexport const getTicketTags = () => {\r\n    return get(\"/ticketTags\");\r\n};\r\n\r\nexport const addTicketTags = (name: string) => {\r\n    return post(\"/ticketTags\", { name });\r\n};\r\n\r\nexport const editTicketTags = (id: string, name: string) => {\r\n    return patch(`/ticketTags/${id}`, { name });\r\n};\r\n\r\nexport const deleteTicketTags = (id: string) => {\r\n    return delete_(`/ticketTags/${id}`);\r\n};\r\n","import { delete_, get, patch, post } from \".\";\r\nexport interface ITicketCategory {\r\n    id?: string;\r\n    inputValue?: string;\r\n    name: string;\r\n}\r\n\r\nexport const getTicketCategory = () => {\r\n    return get(\"/ticketCategory\");\r\n};\r\n\r\nexport const addTicketCategory = (name: string) => {\r\n    return post(\"/ticketCategory\", { name });\r\n};\r\n\r\nexport const editTicketCategory = (id: string, name: string) => {\r\n    return patch(`/ticketCategory/${id}`, { name });\r\n};\r\n\r\nexport const deleteTicketCategory = (id: string) => {\r\n    return delete_(`/ticketCategory/${id}`);\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Box, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { Form } from \"formik\";\r\nimport useSWR from \"swr\";\r\n\r\nimport Button from \"../../app/Button\";\r\nimport { ArraySelect, FieldSelect } from \"../../app/Inputs\";\r\nimport { getAllModelContact, getContacts } from \"../../api/contact\";\r\nimport { getSO } from \"../../api/so\";\r\nimport { ILineService } from \"../../api/lineService\";\r\nimport { getCustomers } from \"../../api/customer\";\r\nimport { getPO } from \"../../api/po\";\r\nimport { getTicketStatus } from \"../../api/ticketStatus\";\r\nimport { getTicketTags } from \"../../api/ticketTag\";\r\nimport { getTicketCategory } from \"../../api/ticketCategory\";\r\nimport { getQuotes } from \"../../api/quote\";\r\nimport TextField from \"../../app/TextField\";\r\nimport { getAllEmployees } from \"../../api/employee\";\r\nimport { getAllUnits } from \"../../api/units\";\r\nimport { getItems } from \"../../api/items\";\r\n\r\nexport default function TicketForm({\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleDelete,\r\n    setFieldValue,\r\n}: {\r\n    values: any;\r\n    errors: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n    handleDelete?: () => void;\r\n    setFieldValue: (a: any, b: any) => void;\r\n}) {\r\n    // const selectedLineService = values ? values.LineServiceRecordId : null;\r\n    const [selectedLineService, setSelectedLineService] = useState<ILineService>(values.LineServiceRecordId);\r\n    const [SOId, setSOId] = useState<string>(values.LineServiceRecordId?.SOId);\r\n    const { data: services } = useSWR(SOId ? `/lineservice?SOId=${SOId}` : null);\r\n\r\n    return (\r\n        <Form>\r\n            <Box mt={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr 1fr\" style={{ gap: 10 }}>\r\n                <DateTimePicker\r\n                    name=\"date\"\r\n                    value={values.date || null}\r\n                    onChange={(d) => setFieldValue(\"date\", d?.toString())}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.date)}\r\n                    helperText={errors.date}\r\n                    size=\"small\"\r\n                    placeholder=\"Date\"\r\n                    label=\"Date\"\r\n                />\r\n                <DateTimePicker\r\n                    name=\"deadline\"\r\n                    value={values.deadline || null}\r\n                    onChange={(d) => setFieldValue(\"deadline\", d?.toString())}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.deadline)}\r\n                    helperText={errors.deadline}\r\n                    size=\"small\"\r\n                    placeholder=\"Deadline\"\r\n                    label=\"Target date\"\r\n                />\r\n                <FieldSelect\r\n                    request={getTicketStatus}\r\n                    itemTitleField=\"name\"\r\n                    itemValueField=\"id\"\r\n                    name=\"status\"\r\n                    label=\"Status\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    value={typeof values.status === \"string\" ? values.status : values.status?.id}\r\n                    error={Boolean(errors.status)}\r\n                />\r\n                <FieldSelect\r\n                    itemValueField=\"id\"\r\n                    itemTitleField=\"name\"\r\n                    request={getTicketTags}\r\n                    name=\"Tags\"\r\n                    value={values.Tags ? (typeof values.Tags === \"string\" ? values.Tags : values?.Tags[0]?.id) : \"\"}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    error={Boolean(errors.Tags)}\r\n                    label=\"Tag\"\r\n                />\r\n                <FieldSelect\r\n                    request={getTicketCategory}\r\n                    itemTitleField=\"name\"\r\n                    itemValueField=\"id\"\r\n                    name=\" category\"\r\n                    label=\"Category\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    value={typeof values.category === \"string\" ? values.category : values.category?.id}\r\n                    error={Boolean(errors.category)}\r\n                />\r\n                {/* \r\n                <FieldSelect\r\n                    name=\"ContactId\"\r\n                    label=\"Contact\"\r\n                    value={values.ContactId}\r\n                    request={getContacts}\r\n                    itemTitleField=\"lastName\"\r\n                    itemValueField=\"id\"\r\n                    onChange={handleChange}\r\n                />\r\n                <DateTimePicker\r\n                    name=\"callTime\"\r\n                    value={values.callTime || null}\r\n                    onChange={(d) => setFieldValue(\"callTime\", d && new Date(d?.toISOString()).getTime())}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.callTime)}\r\n                    helperText={errors.callTime}\r\n                    size=\"small\"\r\n                    placeholder=\"Call time\"\r\n                    label=\"Call time\"\r\n                /> */}\r\n\r\n                <TextField\r\n                    name=\"number\"\r\n                    value={values.number}\r\n                    label=\"Ticket Number\"\r\n                    placeholder=\"Ticket Number\"\r\n                    disabled\r\n                />\r\n                <FieldSelect\r\n                    label=\"SO Number\"\r\n                    value={SOId ? SOId : undefined}\r\n                    request={getSO}\r\n                    itemTitleField=\"number\"\r\n                    itemValueField=\"id\"\r\n                    onChange={(e) => {\r\n                        setSOId(e.target.value);\r\n                    }}\r\n                />\r\n                <FieldSelect\r\n                    value={typeof values.QuoteId === \"string\" ? values.QuoteId : values.QuoteId?.id}\r\n                    name=\"QuoteId\"\r\n                    label=\"Quote ID\"\r\n                    request={getQuotes}\r\n                    itemTitleField=\"number\"\r\n                    itemValueField=\"id\"\r\n                    onChange={(e) => {\r\n                        handleChange(e);\r\n                    }}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <FieldSelect\r\n                    label=\"Device Number\"\r\n                    name=\"ItemId\"\r\n                    value={values.ItemId}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    request={getItems}\r\n                    getOptionList={(data) => data.result}\r\n                    itemTitleField=\"name\"\r\n                    itemValueField=\"id\"\r\n                />\r\n                <FieldSelect\r\n                    value={typeof values.UnitId === \"string\" ? values.UnitId : values.UnitId?.id}\r\n                    name=\"UnitId\"\r\n                    label=\"Unit Number\"\r\n                    request={getAllUnits}\r\n                    itemTitleField=\"number\"\r\n                    itemValueField=\"id\"\r\n                    onChange={(e) => {\r\n                        handleChange(e);\r\n                    }}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <Autocomplete\r\n                    disabled={!SOId}\r\n                    value={selectedLineService}\r\n                    options={services ? services : []}\r\n                    getOptionLabel={(option: any) => option?.ServiceId?.name}\r\n                    onChange={(e, nv) => {\r\n                        nv && setSelectedLineService(nv);\r\n                        nv && nv.id && setFieldValue(\"LineServiceRecordId\", nv.id);\r\n                    }}\r\n                    renderInput={(params) => (\r\n                        <TextField\r\n                            {...params}\r\n                            label=\"Warranty\"\r\n                            placeholder=\"Warranty\"\r\n                            size=\"small\"\r\n                            error={Boolean(errors.LineServiceRecordId)}\r\n                            helperText={errors.LineServiceRecordId}\r\n                        />\r\n                    )}\r\n                />\r\n                <DateTimePicker\r\n                    name=\"expireDate\"\r\n                    value={values.expireDate || null}\r\n                    onChange={(d) => setFieldValue(\"expireDate\", d?.toString())}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.expireDate)}\r\n                    helperText={errors.expireDate}\r\n                    size=\"small\"\r\n                    placeholder=\"Exp. Date\"\r\n                    label=\"Exp. Date\"\r\n                />\r\n                <FieldSelect\r\n                    value={typeof values.assignedTo === \"string\" ? values.assignedTo : values.assignedTo?.id}\r\n                    request={getAllEmployees}\r\n                    itemTitleField=\"username\"\r\n                    itemValueField=\"id\"\r\n                    keyField=\"id\"\r\n                    name=\"assignedTo\"\r\n                    label=\"Assigned To\"\r\n                    onChange={handleChange}\r\n                    error={Boolean(errors.assignedTo)}\r\n                />\r\n                <FieldSelect\r\n                    value={typeof values.createdBy === \"string\" ? values.createdBy : values.createdBy?.id}\r\n                    request={getAllEmployees}\r\n                    itemTitleField=\"username\"\r\n                    itemValueField=\"id\"\r\n                    keyField=\"id\"\r\n                    name=\"createdBy\"\r\n                    label=\"Created By\"\r\n                    onChange={handleChange}\r\n                    error={Boolean(errors.createdBy)}\r\n                />\r\n                <TextField\r\n                    name=\"subject\"\r\n                    value={values.subject}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    error={Boolean(errors.subject)}\r\n                    label=\"Subject\"\r\n                />\r\n                <TextField\r\n                    style={{ gridColumnEnd: \"span 3\" }}\r\n                    name=\"description\"\r\n                    value={values.description}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.description)}\r\n                    helperText={errors.description}\r\n                    size=\"small\"\r\n                    placeholder=\"Description\"\r\n                    label=\"Description\"\r\n                    fullWidth\r\n                    multiline\r\n                    rows={4}\r\n                />\r\n                <TextField\r\n                    style={{ gridColumnEnd: \"span 3\" }}\r\n                    name=\" response\"\r\n                    value={values.response}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.response)}\r\n                    helperText={errors.response}\r\n                    size=\"small\"\r\n                    placeholder=\"Response\"\r\n                    label=\"Response\"\r\n                    fullWidth\r\n                    multiline\r\n                    rows={4}\r\n                />\r\n                {/* <ArraySelect\r\n                    style={{ gridColumnEnd: \"span 2\" }}\r\n                    items={[\"1\", \"2\", \"3\", \"4\", \"5\"]}\r\n                    label=\"Priority\"\r\n                    name=\"priority\"\r\n                    value={values.priority}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                /> */}\r\n            </Box>\r\n            <Box mt={1}>\r\n                <FormControlLabel\r\n                    name=\"fsh\"\r\n                    label=\"Help\"\r\n                    control={<Checkbox checked={values.fsh} onChange={handleChange} />}\r\n                />\r\n            </Box>\r\n            <Box display=\"flex\" alignItems=\"center\" mt={1}>\r\n                {!values.id ? (\r\n                    <>\r\n                        <Button type=\"submit\" kind=\"add\" style={{ marginRight: \"0.5em\" }}>\r\n                            Book a job\r\n                        </Button>\r\n                        {/* <Button>Show calendar</Button> */}\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <Button type=\"submit\" kind=\"edit\" style={{ marginRight: \"0.5em\" }}>\r\n                            Save\r\n                        </Button>\r\n                        <Button kind=\"delete\" onClick={handleDelete ? handleDelete : () => {}}>\r\n                            Delete\r\n                        </Button>\r\n                    </>\r\n                )}\r\n            </Box>\r\n        </Form>\r\n    );\r\n}\r\nexport function TechnicianForm({\r\n    values,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleDelete,\r\n    setFieldValue,\r\n}: {\r\n    values: any;\r\n    errors: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n    handleDelete?: () => void;\r\n    setFieldValue: (a: any, b: any) => void;\r\n}) {\r\n    return (\r\n        <Form>\r\n            <Box mt={1} display=\"grid\" gridTemplateColumns=\"1fr\" style={{ gap: 10 }}>\r\n                <TextField\r\n                    name=\"vendorTech\"\r\n                    value={values.vendorTech}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.vendorTech)}\r\n                    helperText={errors.vendorTech}\r\n                    size=\"small\"\r\n                    placeholder=\"Vendor Tech\"\r\n                />\r\n                <TextField\r\n                    name=\"vendorEmail\"\r\n                    value={values.vendorEmail}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.vendorEmail)}\r\n                    helperText={errors.vendorEmail}\r\n                    size=\"small\"\r\n                    placeholder=\"Vendor Email\"\r\n                />\r\n                <FieldSelect\r\n                    itemValueField=\"id\"\r\n                    itemTitleField=\"number\"\r\n                    request={getPO}\r\n                    name=\"POId\"\r\n                    value={typeof values.POId === \"string\" ? values.POId : values.POId?.id}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    label=\"Customer PO\"\r\n                />\r\n                <TextField\r\n                    name=\"sendPO\"\r\n                    value={values.sendPO}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.sendPO)}\r\n                    helperText={errors.sendPO}\r\n                    size=\"small\"\r\n                    placeholder=\"Send PO\"\r\n                />\r\n                <TextField\r\n                    name=\"DateSent\"\r\n                    value={values.DateSent}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.DateSent)}\r\n                    helperText={errors.DateSent}\r\n                    size=\"small\"\r\n                    placeholder=\"Date sent\"\r\n                />\r\n            </Box>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport const EntitiesForm = ({\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    setFieldValue,\r\n}: {\r\n    values: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n    setFieldValue: any;\r\n}) => {\r\n    return (\r\n        <>\r\n            <Box my={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr 1fr 1fr\" gridColumnGap={10}>\r\n                <Box my={1} display=\"grid\" gridTemplateColumns=\" 1fr \" gridRowGap={10}>\r\n                    <FieldSelect\r\n                        value={typeof values.repOrAgency === \"string\" ? values.repOrAgency : values.repOrAgency?.id}\r\n                        request={getCustomers}\r\n                        itemTitleField=\"name\"\r\n                        itemValueField=\"id\"\r\n                        name=\"repOrAgency\"\r\n                        label=\"rep / Agency\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField value={values.repOrAgency?.address} label=\"Address\" disabled />\r\n                    <TextField\r\n                        value={values.repOrAgency?.city}\r\n                        name=\"city\"\r\n                        label=\"City\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        disabled\r\n                    />\r\n                    <TextField\r\n                        value={values.repOrAgency?.state}\r\n                        name=\"state\"\r\n                        label=\"State\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        disabled\r\n                    />\r\n                    <TextField\r\n                        value={values.repOrAgency?.zipcode}\r\n                        name=\"zipCode\"\r\n                        label=\"Zip Code\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        disabled\r\n                    />\r\n                </Box>\r\n                <Box my={1} display=\"grid\" gridTemplateColumns=\" 1fr \" gridRowGap={10}>\r\n                    <TextField\r\n                        value={values.requesterName}\r\n                        name=\"requesterName\"\r\n                        label=\"requesterName\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.requesterMail}\r\n                        name=\"requesterMail\"\r\n                        label=\"requesterMail\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.requesterPhone}\r\n                        name=\"requesterPhone\"\r\n                        label=\"requesterPhone\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField style={{ opacity: 0 }} />\r\n                    <TextField style={{ opacity: 0 }} />\r\n                </Box>\r\n                <Box my={1} display=\"grid\" gridTemplateColumns=\" 1fr \" gridRowGap={10}>\r\n                    {/* <TextField\r\n                    value={values.client}\r\n                    name=\"client\"\r\n                    label=\"Client\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                /> */}\r\n                    <FieldSelect\r\n                        value={typeof values.client === \"string\" ? values.client : values.client?.id}\r\n                        request={getCustomers}\r\n                        itemTitleField=\"name\"\r\n                        itemValueField=\"id\"\r\n                        name=\"client\"\r\n                        label=\"Client\"\r\n                        onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                        value={values.contact?.lastName}\r\n                        label=\"Contact Name\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        disabled\r\n                    />\r\n                    <TextField\r\n                        value={values.contact?.email}\r\n                        label=\"Email\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        disabled\r\n                    />\r\n                    <TextField\r\n                        value={values.contact?.lastName}\r\n                        label=\"Phone\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        disabled\r\n                    />\r\n                    <TextField\r\n                        value={values.unitPricingLevel}\r\n                        label=\"Unit Pricing Level\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        disabled\r\n                    />\r\n                </Box>\r\n                <Box my={1} display=\"grid\" gridTemplateColumns=\"1fr\" gridGap={10}>\r\n                    <FieldSelect\r\n                        label=\"24 Hour Contact\"\r\n                        name=\"twentyFourContact\"\r\n                        request={\r\n                            typeof values.client === \"string\"\r\n                                ? () => getAllModelContact(\"customer\", values.client)\r\n                                : () => getAllModelContact(\"customer\", values.client?.id)\r\n                        }\r\n                        itemTitleField=\"lastName\"\r\n                        itemValueField=\"id\"\r\n                        value={\r\n                            typeof values.twentyFourContact === \"string\"\r\n                                ? values.twentyFourContact\r\n                                : values.twentyFourContact?.id\r\n                        }\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        disabled={!values.client}\r\n                    />\r\n                    <FieldSelect\r\n                        label=\"Phone\"\r\n                        name=\"twentyFourContact\"\r\n                        request={\r\n                            typeof values.client === \"string\"\r\n                                ? () => getAllModelContact(\"customer\", values.client)\r\n                                : () => getAllModelContact(\"customer\", values.client?.id)\r\n                        }\r\n                        itemTitleField=\"phone\"\r\n                        itemValueField=\"id\"\r\n                        value={\r\n                            typeof values.twentyFourContact === \"string\"\r\n                                ? values.twentyFourContact\r\n                                : values.twentyFourContact?.id\r\n                        }\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        disabled\r\n                    />\r\n                    <FieldSelect\r\n                        label=\"Email\"\r\n                        name=\"twentyFourContact\"\r\n                        request={\r\n                            typeof values.client === \"string\"\r\n                                ? () => getAllModelContact(\"customer\", values.client)\r\n                                : () => getAllModelContact(\"customer\", values.client?.id)\r\n                        }\r\n                        itemTitleField=\"email\"\r\n                        itemValueField=\"id\"\r\n                        value={\r\n                            typeof values.twentyFourContact === \"string\"\r\n                                ? values.twentyFourContact\r\n                                : values.twentyFourContact?.id\r\n                        }\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        disabled\r\n                    />\r\n\r\n                    <TextField style={{ opacity: 0 }} />\r\n                    <TextField style={{ opacity: 0 }} />\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\nexport const ContactForm = ({\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n}: {\r\n    values: any;\r\n    errors?: any;\r\n    touched?: any;\r\n    handleBlur: any;\r\n    handleChange: any;\r\n}) => {\r\n    return (\r\n        <Box my={2} display=\"grid\" gridColumnGap={10} gridRowGap={10} gridTemplateColumns=\"1fr\">\r\n            <TextField\r\n                value={values.contactName}\r\n                name=\"contactName\"\r\n                label=\"Contact Name\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n            <TextField\r\n                value={values.contactNumber}\r\n                name=\"contactNumber\"\r\n                label=\"Contact Number\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n            <TextField\r\n                value={values.contactMail}\r\n                name=\"contactMail\"\r\n                label=\"Contact Mail\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n","import React, { useMemo, useState } from \"react\";\r\nimport { Box, Tab, Tabs } from \"@material-ui/core\";\r\nimport { GridColumns } from \"@material-ui/data-grid\";\r\nimport useSWR, { mutate } from \"swr\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport BaseDataGrid from \"../../app/BaseDataGrid\";\r\nimport { BasePaper } from \"../../app/Paper\";\r\nimport Snack from \"../../app/Snack\";\r\nimport JobForm, { ContactForm, EntitiesForm, TechnicianForm } from \"./Forms\";\r\nimport SODatagrid from \"../Sales/SO/Datagrid\";\r\n\r\nimport { ITicket, schema, updateTicket } from \"../../api/ticket\";\r\nimport { fetcher } from \"../../api\";\r\nimport QuoteDatagrid from \"../Sales/Quote/Datagrid\";\r\nimport { getModifiedValues } from \"../../logic/utils\";\r\nimport { formatTimestampToDate } from \"../../logic/date\";\r\nimport { fileType } from \"../../logic/fileType\";\r\n\r\nexport default function Details({\r\n    initialValue,\r\n    onDocumentSelected,\r\n    onNoteSelected,\r\n}: {\r\n    initialValue: ITicket;\r\n    onNoteSelected: (a: any) => void;\r\n    onDocumentSelected: (a: any) => void;\r\n}) {\r\n    const { data: notes } = useSWR(`/note/job/${initialValue.id}`, fetcher);\r\n    const { data: documents } = useSWR(`/document/job/${initialValue.id}`, fetcher);\r\n\r\n    const { data: lineItem } = useSWR(`/lineitem/${initialValue.LineServiceRecordId.LineItemRecordId}`);\r\n    // const { data: itemNotes } = useSWR(lineItem ? `/note/item/${lineItem.ItemId}` : null);\r\n    const { data: itemDocuments } = useSWR(lineItem ? `/document/item/${lineItem.ItemId}` : null);\r\n\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [moreActiveTab, setMoreActiveTab] = useState(0);\r\n    const [snack, setSnack] = useState(false);\r\n    const [msg, setMsg] = useState(\"\");\r\n    const [severity, setSeverity] = useState<\"success\" | \"info\" | \"warning\" | \"error\">(\"info\");\r\n\r\n    const noteCols = useMemo<GridColumns>(\r\n        () => [\r\n            {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                valueFormatter: (params) => formatTimestampToDate(params.row?.createdAt),\r\n                width: 120,\r\n            },\r\n            {\r\n                field: \"creator\",\r\n                headerName: \"Creator\",\r\n                width: 180,\r\n                valueFormatter: (params) => params.row?.EmployeeId?.username,\r\n            },\r\n            { field: \"subject\", headerName: \"Subject\", width: 300 },\r\n            { field: \"note\", headerName: \"Note\", flex: 1 },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const docCols = useMemo<GridColumns>(\r\n        () => [\r\n            {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                valueFormatter: (params) => formatTimestampToDate(params.row?.createdAt),\r\n                width: 120,\r\n            },\r\n            {\r\n                field: \"EmployeeId\",\r\n                headerName: \"Creator\",\r\n                valueFormatter: (params) => params.row?.employee?.username,\r\n                width: 120,\r\n            },\r\n            { field: \"name\", headerName: \"Name\", flex: 1 },\r\n            { field: \"id\", headerName: \"ID\", width: 200 },\r\n            { field: \"description\", headerName: \"Description\", flex: 1 },\r\n            {\r\n                field: \"type\",\r\n                headerName: \"File Type\",\r\n                valueFormatter: (params) => fileType(params.row?.path),\r\n                width: 120,\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    const handleSubmit = async (d: any) => {\r\n        try {\r\n            // console.log(d);\r\n            const data = getModifiedValues(d, initialValue);\r\n            const resp = await updateTicket(initialValue.id, data);\r\n            if (resp) {\r\n                setMsg(\"Job updated!\");\r\n                setSeverity(\"success\");\r\n                setSnack(true);\r\n\r\n                mutate(\"/jobs\");\r\n            }\r\n        } catch (error) {\r\n            setMsg(\"an error occurred !\");\r\n            setSeverity(\"error\");\r\n            setSnack(true);\r\n\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Snack open={snack} onClose={() => setSnack(false)} severity={severity}>\r\n                {msg}\r\n            </Snack>\r\n\r\n            <Box display=\"grid\" gridTemplateColumns=\"1fr\" gridColumnGap={10}>\r\n                <Box my={1}>\r\n                    <Formik initialValues={initialValue} validationSchema={schema} onSubmit={handleSubmit}>\r\n                        {({ values, errors, handleChange, handleBlur, setFieldValue }) => (\r\n                            <Box display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridColumnGap={24}>\r\n                                <BasePaper>\r\n                                    <JobForm\r\n                                        errors={errors}\r\n                                        values={values}\r\n                                        handleBlur={handleBlur}\r\n                                        handleChange={handleChange}\r\n                                        setFieldValue={setFieldValue}\r\n                                    />\r\n                                </BasePaper>\r\n                                <BasePaper>\r\n                                    <Tabs onChange={(e, nv) => setMoreActiveTab(nv)} value={moreActiveTab}>\r\n                                        <Tab label=\"Contact\" />\r\n                                        <Tab label=\"Entities\" />\r\n                                        <Tab label=\"Technician\" />\r\n                                    </Tabs>\r\n                                    {moreActiveTab === 0 && (\r\n                                        <ContactForm\r\n                                            values={values}\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                        />\r\n                                    )}\r\n                                    {moreActiveTab === 1 && (\r\n                                        <EntitiesForm\r\n                                            values={values}\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                            setFieldValue={setFieldValue}\r\n                                        />\r\n                                    )}\r\n                                    {moreActiveTab === 2 && (\r\n                                        <TechnicianForm\r\n                                            errors={errors}\r\n                                            values={values}\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                            setFieldValue={setFieldValue}\r\n                                        />\r\n                                    )}\r\n                                </BasePaper>\r\n                            </Box>\r\n                        )}\r\n                    </Formik>\r\n                </Box>\r\n                <BasePaper>\r\n                    <Tabs variant=\"scrollable\" value={activeTab} onChange={(e, nv) => setActiveTab(nv)}>\r\n                        <Tab label=\"Filed Service History\" />\r\n                        <Tab label=\"Device Document\" />\r\n                        <Tab label=\"Device Quote History\" />\r\n                        <Tab label=\"Device SO History\" />\r\n                        <Tab label=\"Device Forms\" />\r\n                        <Tab label=\"Ticket Documents\" />\r\n                        <Tab label=\"Device RMA History\" />\r\n                        <Tab label=\"Notes\" />\r\n                        <Tab label=\"Auditing\" />\r\n                    </Tabs>\r\n                    {activeTab === 1 && (\r\n                        <BaseDataGrid\r\n                            cols={docCols}\r\n                            rows={itemDocuments ? itemDocuments : []}\r\n                            onRowSelected={() => {}}\r\n                        />\r\n                    )}\r\n                    {activeTab === 2 && <QuoteDatagrid params={{ JobId: initialValue.id }} onRowSelected={() => {}} />}\r\n                    {activeTab === 3 && <SODatagrid params={{ JobId: initialValue.id }} onRowSelected={() => {}} />}\r\n                    {/* {activeTab === 2 && (\r\n                        <BaseDataGrid cols={noteCols} rows={itemNotes ? itemNotes : []} onRowSelected={() => {}} />\r\n                    )} */}\r\n                    {activeTab === 4 && <BaseDataGrid cols={docCols} rows={[]} onRowSelected={() => {}} />}\r\n\r\n                    {activeTab === 5 && (\r\n                        <BaseDataGrid\r\n                            cols={docCols}\r\n                            rows={documents ? documents : []}\r\n                            onRowSelected={(d) => {\r\n                                onDocumentSelected(d);\r\n                            }}\r\n                        />\r\n                    )}\r\n                    {activeTab === 6 && <BaseDataGrid cols={[]} rows={[]} onRowSelected={() => {}} />}\r\n                    {activeTab === 7 && (\r\n                        <BaseDataGrid\r\n                            cols={noteCols}\r\n                            rows={notes ? notes : []}\r\n                            onRowSelected={(n) => {\r\n                                onNoteSelected(n);\r\n                            }}\r\n                        />\r\n                    )}\r\n                </BasePaper>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n","import { Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { mutate } from \"swr\";\r\nimport { createTicket, ITicket, schema } from \"../../api/ticket\";\r\n\r\nimport Dialog from \"../../app/Dialog\";\r\nimport TicketForm from \"./Forms\";\r\n\r\nexport default function Modal({ open, onClose }: { open: boolean; onClose: () => void }) {\r\n    const handleSubmit = async (d: any) => {\r\n        // console.log(d);\r\n        try {\r\n            const resp = await createTicket(d);\r\n            if (resp) {\r\n                mutate(\"/job\");\r\n                onClose();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} title=\"Job details\">\r\n            <Formik initialValues={{} as ITicket} validationSchema={schema} onSubmit={handleSubmit}>\r\n                {({ values, errors, handleChange, handleBlur, setFieldValue }) => (\r\n                    <TicketForm\r\n                        errors={errors}\r\n                        values={values}\r\n                        handleBlur={handleBlur}\r\n                        handleChange={handleChange}\r\n                        setFieldValue={setFieldValue}\r\n                    />\r\n                )}\r\n            </Formik>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Box, IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport { DeleteRounded, EditRounded } from \"@material-ui/icons\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport useSWR from \"swr\";\r\n\r\nimport Dialog from \"../../app/Dialog\";\r\nimport TextField from \"../../app/TextField\";\r\nimport Button from \"../../app/Button\";\r\nimport Toast from \"../../app/Toast\";\r\n\r\nimport { ITicketTag, addTicketTags, deleteTicketTags, editTicketTags } from \"../../api/ticketTag\";\r\nimport Confirm from \"../Modals/Confirm\";\r\n\r\nconst schema = Yup.object().shape({\r\n    name: Yup.string().required(),\r\n});\r\n\r\nexport default function CustomerTypeModal({ open, onClose }: { open: boolean; onClose: () => void }) {\r\n    const [confirm, setConfirm] = useState(false);\r\n    const [selectedCT, setSelectedCT] = useState<string>();\r\n    const { data: ticketTags, mutate } = useSWR(\"/ticketTags\");\r\n\r\n    const handleSubmit = async (d: ITicketTag, { resetForm }: any) => {\r\n        try {\r\n            if (d.id) {\r\n                await editTicketTags(d.id, d.name);\r\n                Toast(\"Record updated\", \"success\");\r\n                resetForm({ values: { name: \"\" } as ITicketTag });\r\n            } else {\r\n                await addTicketTags(d.name);\r\n                Toast(\"Record added\", \"success\");\r\n                resetForm({ values: { name: \"\" } as ITicketTag });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            mutate();\r\n        }\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            if (selectedCT) {\r\n                await deleteTicketTags(selectedCT);\r\n                Toast(\"Record deleted\", \"success\");\r\n                setConfirm(false);\r\n                mutate();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Confirm open={confirm} onClose={() => setConfirm(false)} onConfirm={handleDelete} />\r\n            <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth title=\"Add Ticket Tags\">\r\n                <Box m={1}>\r\n                    <Formik\r\n                        initialValues={{} as { name: string; id?: string }}\r\n                        validationSchema={schema}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        {({ getFieldProps, errors, touched, setValues, values, resetForm }) => (\r\n                            <Form>\r\n                                <Box display=\"grid\" gridTemplateColumns=\"1fr\" gridGap={10}>\r\n                                    <Box display=\"grid\" gridTemplateColumns=\"3fr 1fr 1fr\" gridGap={10}>\r\n                                        <TextField\r\n                                            {...getFieldProps(\"name\")}\r\n                                            placeholder=\"Name\"\r\n                                            error={Boolean(errors.name && touched.name)}\r\n                                            helperText={errors.name}\r\n                                        />\r\n                                        <Button type=\"submit\" kind=\"add\">\r\n                                            Save\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            onClick={() => resetForm({ values: { name: \"\" } as ITicketTag })}\r\n                                        >\r\n                                            clear\r\n                                        </Button>\r\n                                    </Box>\r\n                                    <List>\r\n                                        {ticketTags &&\r\n                                            ticketTags.map((ct: any) => (\r\n                                                <ListItem key={ct.id}>\r\n                                                    <ListItemText>{ct.name}</ListItemText>\r\n                                                    <ListItemSecondaryAction>\r\n                                                        <IconButton onClick={() => setValues(ct)}>\r\n                                                            <EditRounded />\r\n                                                        </IconButton>\r\n                                                        <IconButton\r\n                                                            onClick={() => {\r\n                                                                setSelectedCT(ct.id);\r\n                                                                setConfirm(true);\r\n                                                            }}\r\n                                                        >\r\n                                                            <DeleteRounded color=\"error\" />\r\n                                                        </IconButton>\r\n                                                    </ListItemSecondaryAction>\r\n                                                </ListItem>\r\n                                            ))}\r\n                                    </List>\r\n                                </Box>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </Box>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Box, IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport { DeleteRounded, EditRounded } from \"@material-ui/icons\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport useSWR from \"swr\";\r\n\r\nimport Dialog from \"../../app/Dialog\";\r\nimport TextField from \"../../app/TextField\";\r\nimport Button from \"../../app/Button\";\r\nimport Toast from \"../../app/Toast\";\r\n\r\nimport { ITicketStatus, addTicketStatus, deleteTicketStatus, editTicketStatus } from \"../../api/ticketStatus\";\r\nimport Confirm from \"../Modals/Confirm\";\r\n\r\nconst schema = Yup.object().shape({\r\n    name: Yup.string().required(),\r\n});\r\n\r\nexport default function CustomerTypeModal({ open, onClose }: { open: boolean; onClose: () => void }) {\r\n    const [confirm, setConfirm] = useState(false);\r\n    const [selectedCT, setSelectedCT] = useState<string>();\r\n    const { data: ticketStatus, mutate } = useSWR(\"/ticketStatus\");\r\n\r\n    const handleSubmit = async (d: ITicketStatus, { resetForm }: any) => {\r\n        try {\r\n            if (d.id) {\r\n                await editTicketStatus(d.id, d.name);\r\n                Toast(\"Record updated\", \"success\");\r\n                resetForm({ values: { name: \"\" } as ITicketStatus });\r\n            } else {\r\n                await addTicketStatus(d.name);\r\n                Toast(\"Record added\", \"success\");\r\n                resetForm({ values: { name: \"\" } as ITicketStatus });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            mutate();\r\n        }\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            if (selectedCT) {\r\n                await deleteTicketStatus(selectedCT);\r\n                Toast(\"Record deleted\", \"success\");\r\n                setConfirm(false);\r\n                mutate();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Confirm open={confirm} onClose={() => setConfirm(false)} onConfirm={handleDelete} />\r\n            <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth title=\"Add Ticket Status\">\r\n                <Box m={1}>\r\n                    <Formik\r\n                        initialValues={{} as { name: string; id?: string }}\r\n                        validationSchema={schema}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        {({ getFieldProps, errors, touched, setValues, values, resetForm }) => (\r\n                            <Form>\r\n                                <Box display=\"grid\" gridTemplateColumns=\"1fr\" gridGap={10}>\r\n                                    <Box display=\"grid\" gridTemplateColumns=\"3fr 1fr 1fr\" gridGap={10}>\r\n                                        <TextField\r\n                                            {...getFieldProps(\"name\")}\r\n                                            placeholder=\"Name\"\r\n                                            error={Boolean(errors.name && touched.name)}\r\n                                            helperText={errors.name}\r\n                                        />\r\n                                        <Button type=\"submit\" kind=\"add\">\r\n                                            Save\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            onClick={() => resetForm({ values: { name: \"\" } as ITicketStatus })}\r\n                                        >\r\n                                            clear\r\n                                        </Button>\r\n                                    </Box>\r\n                                    <List>\r\n                                        {ticketStatus &&\r\n                                            ticketStatus.map((ct: any) => (\r\n                                                <ListItem key={ct.id}>\r\n                                                    <ListItemText>{ct.name}</ListItemText>\r\n                                                    <ListItemSecondaryAction>\r\n                                                        <IconButton onClick={() => setValues(ct)}>\r\n                                                            <EditRounded />\r\n                                                        </IconButton>\r\n                                                        <IconButton\r\n                                                            onClick={() => {\r\n                                                                setSelectedCT(ct.id);\r\n                                                                setConfirm(true);\r\n                                                            }}\r\n                                                        >\r\n                                                            <DeleteRounded color=\"error\" />\r\n                                                        </IconButton>\r\n                                                    </ListItemSecondaryAction>\r\n                                                </ListItem>\r\n                                            ))}\r\n                                    </List>\r\n                                </Box>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </Box>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Box, IconButton, List, ListItem, ListItemSecondaryAction, ListItemText } from \"@material-ui/core\";\r\nimport { DeleteRounded, EditRounded } from \"@material-ui/icons\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport useSWR from \"swr\";\r\n\r\nimport Dialog from \"../../app/Dialog\";\r\nimport TextField from \"../../app/TextField\";\r\nimport Button from \"../../app/Button\";\r\nimport Toast from \"../../app/Toast\";\r\n\r\nimport { ITicketCategory, addTicketCategory, deleteTicketCategory, editTicketCategory } from \"../../api/ticketCategory\";\r\nimport Confirm from \"../Modals/Confirm\";\r\n\r\nconst schema = Yup.object().shape({\r\n    name: Yup.string().required(),\r\n});\r\n\r\nexport default function CustomerTypeModal({ open, onClose }: { open: boolean; onClose: () => void }) {\r\n    const [confirm, setConfirm] = useState(false);\r\n    const [selectedCT, setSelectedCT] = useState<string>();\r\n    const { data: ticketCategory, mutate } = useSWR(\"/ticketCategory\");\r\n\r\n    const handleSubmit = async (d: ITicketCategory, { resetForm }: any) => {\r\n        try {\r\n            if (d.id) {\r\n                await editTicketCategory(d.id, d.name);\r\n                Toast(\"Record updated\", \"success\");\r\n                resetForm({ values: { name: \"\" } as ITicketCategory });\r\n            } else {\r\n                await addTicketCategory(d.name);\r\n                Toast(\"Record added\", \"success\");\r\n                resetForm({ values: { name: \"\" } as ITicketCategory });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            mutate();\r\n        }\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            if (selectedCT) {\r\n                await deleteTicketCategory(selectedCT);\r\n                Toast(\"Record deleted\", \"success\");\r\n                setConfirm(false);\r\n                mutate();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Confirm open={confirm} onClose={() => setConfirm(false)} onConfirm={handleDelete} />\r\n            <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth title=\"Add Ticket Category\">\r\n                <Box m={1}>\r\n                    <Formik\r\n                        initialValues={{} as { name: string; id?: string }}\r\n                        validationSchema={schema}\r\n                        onSubmit={handleSubmit}\r\n                    >\r\n                        {({ getFieldProps, errors, touched, setValues, values, resetForm }) => (\r\n                            <Form>\r\n                                <Box display=\"grid\" gridTemplateColumns=\"1fr\" gridGap={10}>\r\n                                    <Box display=\"grid\" gridTemplateColumns=\"3fr 1fr 1fr\" gridGap={10}>\r\n                                        <TextField\r\n                                            {...getFieldProps(\"name\")}\r\n                                            placeholder=\"Name\"\r\n                                            error={Boolean(errors.name && touched.name)}\r\n                                            helperText={errors.name}\r\n                                        />\r\n                                        <Button type=\"submit\" kind=\"add\">\r\n                                            Save\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            onClick={() => resetForm({ values: { name: \"\" } as ITicketCategory })}\r\n                                        >\r\n                                            clear\r\n                                        </Button>\r\n                                    </Box>\r\n                                    <List>\r\n                                        {ticketCategory &&\r\n                                            ticketCategory.map((ct: any) => (\r\n                                                <ListItem key={ct.id}>\r\n                                                    <ListItemText>{ct.name}</ListItemText>\r\n                                                    <ListItemSecondaryAction>\r\n                                                        <IconButton onClick={() => setValues(ct)}>\r\n                                                            <EditRounded />\r\n                                                        </IconButton>\r\n                                                        <IconButton\r\n                                                            onClick={() => {\r\n                                                                setSelectedCT(ct.id);\r\n                                                                setConfirm(true);\r\n                                                            }}\r\n                                                        >\r\n                                                            <DeleteRounded color=\"error\" />\r\n                                                        </IconButton>\r\n                                                    </ListItemSecondaryAction>\r\n                                                </ListItem>\r\n                                            ))}\r\n                                    </List>\r\n                                </Box>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </Box>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Box, Tabs, Tab, ListItem, IconButton } from \"@material-ui/core\";\r\nimport {\r\n    AddRounded,\r\n    NoteAddRounded,\r\n    FileCopyRounded,\r\n    ShoppingCartRounded,\r\n    PostAddRounded,\r\n    CategoryRounded,\r\n    LocalOfferRounded,\r\n    PlaylistAddCheckRounded,\r\n} from \"@material-ui/icons\";\r\nimport { mutate } from \"swr\";\r\n\r\nimport Table from \"./Table\";\r\nimport Details from \"./Details\";\r\n\r\nimport List from \"../../app/SideUtilityList\";\r\nimport TicketModal from \"../../features/Tickets/Modals\";\r\n\r\nimport { ITicket } from \"../../api/ticket\";\r\nimport NoteModal from \"../Modals/NoteModals\";\r\nimport DocumentModal from \"../Modals/DocumentModals\";\r\nimport { INote } from \"../../api/note\";\r\nimport { IDocument } from \"../../api/document\";\r\nimport AddSOModal from \"../Sales/SO/AddSoModal\";\r\nimport AddQuote from \"../Sales/Quote/AddQuote\";\r\nimport AddTagModal from \"./AddTag\";\r\nimport AddStatusModal from \"./AddStatus\";\r\nimport AddCategoryModal from \"./AddCategory\";\r\n\r\nexport default function Tickets() {\r\n    const [ticketModal, setTicketModal] = useState(false);\r\n    const [noteModal, setNoteModal] = useState(false);\r\n    const [documentModal, setDocumentModal] = useState(false);\r\n    const [soModal, setSoModal] = useState(false);\r\n    const [quoteModal, setQuoteModal] = useState(false);\r\n    const [tagModal, setTagModal] = useState(false);\r\n    const [statusModal, setStatusModal] = useState(false);\r\n    const [categoryModal, setCategoryModal] = useState(false);\r\n\r\n    const [selectedJob, setSelectedJob] = useState<ITicket>();\r\n    const [selectedNote, setSelectedNote] = useState<INote>();\r\n    const [selectedDocument, setSelectedDocument] = useState<IDocument>();\r\n    const [activeTab, setActiveTab] = useState(0);\r\n\r\n    return (\r\n        <>\r\n            {selectedJob && (\r\n                <NoteModal\r\n                    open={noteModal}\r\n                    onClose={() => setNoteModal(false)}\r\n                    model=\"ticket\"\r\n                    itemId={selectedJob.id}\r\n                    noteData={selectedNote}\r\n                    onDone={() => mutate(`/note/ticket/${selectedJob.id}`)}\r\n                />\r\n            )}\r\n            {selectedJob && (\r\n                <DocumentModal\r\n                    open={documentModal}\r\n                    onClose={() => setDocumentModal(false)}\r\n                    model=\"ticket\"\r\n                    itemId={selectedJob.id}\r\n                    docData={selectedDocument}\r\n                    onDone={() => mutate(`/document/ticket/${selectedJob.id}`)}\r\n                />\r\n            )}\r\n            {selectedJob && (\r\n                <AddSOModal\r\n                    open={soModal}\r\n                    onClose={() => setSoModal(false)}\r\n                    initialData={{ JobId: selectedJob.id } as any}\r\n                    onDone={() => {}}\r\n                />\r\n            )}\r\n            {selectedJob && (\r\n                <AddQuote\r\n                    open={quoteModal}\r\n                    onClose={() => setQuoteModal(false)}\r\n                    initialData={{ JobId: selectedJob.id } as any}\r\n                    onDone={() => {}}\r\n                />\r\n            )}\r\n            <TicketModal open={ticketModal} onClose={() => setTicketModal(false)} />\r\n            <AddTagModal open={tagModal} onClose={() => setTagModal(false)} />\r\n            <AddStatusModal open={statusModal} onClose={() => setStatusModal(false)} />\r\n            <AddCategoryModal open={categoryModal} onClose={() => setCategoryModal(false)} />\r\n            <Box display=\"flex\">\r\n                <Tabs textColor=\"primary\" value={activeTab} onChange={(e, nv) => setActiveTab(nv)}>\r\n                    <Tab label=\"List\" />\r\n                    <Tab label=\"Details\" disabled={!selectedJob} />\r\n                </Tabs>\r\n                <div style={{ flexGrow: 1 }} />\r\n            </Box>\r\n\r\n            <Box display=\"flex\">\r\n                <Box>\r\n                    <List>\r\n                        <ListItem>\r\n                            <IconButton onClick={() => setTicketModal(true)}>\r\n                                <AddRounded />\r\n                            </IconButton>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <IconButton\r\n                                title=\"Add note\"\r\n                                onClick={() => {\r\n                                    setSelectedNote(undefined);\r\n                                    setNoteModal(true);\r\n                                }}\r\n                            >\r\n                                <NoteAddRounded />\r\n                            </IconButton>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <IconButton\r\n                                title=\"Add document\"\r\n                                onClick={() => {\r\n                                    setSelectedDocument(undefined);\r\n                                    setDocumentModal(true);\r\n                                }}\r\n                            >\r\n                                <FileCopyRounded />\r\n                            </IconButton>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <IconButton\r\n                                title=\"Add Tag\"\r\n                                onClick={() => {\r\n                                    setTagModal(true);\r\n                                }}\r\n                            >\r\n                                <LocalOfferRounded />\r\n                            </IconButton>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <IconButton\r\n                                title=\"Add Status\"\r\n                                onClick={() => {\r\n                                    setStatusModal(true);\r\n                                }}\r\n                            >\r\n                                <PlaylistAddCheckRounded />\r\n                            </IconButton>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <IconButton\r\n                                title=\"Add Category\"\r\n                                onClick={() => {\r\n                                    setCategoryModal(true);\r\n                                }}\r\n                            >\r\n                                <CategoryRounded />\r\n                            </IconButton>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <IconButton disabled={activeTab !== 1} title=\"Add new SO\" onClick={() => setSoModal(true)}>\r\n                                <ShoppingCartRounded />\r\n                            </IconButton>\r\n                        </ListItem>\r\n                        <ListItem>\r\n                            <IconButton\r\n                                disabled={activeTab !== 1}\r\n                                title=\"Add new Quote\"\r\n                                onClick={() => setQuoteModal(true)}\r\n                            >\r\n                                <PostAddRounded />\r\n                            </IconButton>\r\n                        </ListItem>\r\n                    </List>\r\n                </Box>\r\n                <Box flex={1} flexGrow={1} ml={2}>\r\n                    {activeTab === 0 && (\r\n                        <Box flex={11} ml={2}>\r\n                            <Table\r\n                                onRowSelected={(r) => {\r\n                                    setSelectedJob(r);\r\n                                    setActiveTab(1);\r\n                                    // setJobModal(true);\r\n                                }}\r\n                            />\r\n                        </Box>\r\n                    )}\r\n                    {activeTab === 1 && selectedJob && (\r\n                        <Details\r\n                            initialValue={selectedJob}\r\n                            onNoteSelected={(n) => {\r\n                                setSelectedNote(n);\r\n                                setNoteModal(true);\r\n                            }}\r\n                            onDocumentSelected={(d) => {\r\n                                setSelectedDocument(d);\r\n                                setDocumentModal(true);\r\n                            }}\r\n                        />\r\n                    )}\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Button, ButtonProps, makeStyles } from \"@material-ui/core\";\r\nimport { AddRounded, EditRounded, DeleteRounded } from \"@material-ui/icons\";\r\n\r\nimport { Gradients } from \"../theme\";\r\n\r\ninterface IButton extends ButtonProps {\r\n    kind?: \"add\" | \"edit\" | \"delete\";\r\n}\r\nexport default function MyButton({ kind, ...props }: IButton) {\r\n    const useStyles = makeStyles({\r\n        btnStyle: {\r\n            background: kind ? (kind === \"add\" ? Gradients.success : kind === \"edit\" ? Gradients.warning : Gradients.error) : \"default\",\r\n        },\r\n    });\r\n    let icons = {\r\n        add: <AddRounded />,\r\n        edit: <EditRounded />,\r\n        delete: <DeleteRounded />,\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={classes.btnStyle}\r\n            startIcon={kind ? icons[kind] : props.startIcon}\r\n            variant={kind ? \"contained\" : props.variant}\r\n            color={kind ? \"primary\" : props.color}\r\n            {...props}\r\n        >\r\n            {props.children}\r\n        </Button>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { DataGrid, GridToolbar } from \"@material-ui/data-grid\";\r\n\r\nexport const useDataGridStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: \"#f9f9f9\",\r\n        border: \"none\",\r\n\r\n        \"& .MuiDataGrid-columnsContainer\": {\r\n            backgroundColor: \"#202731\",\r\n            color: \"#fff\",\r\n            // borderRadius: \" 10px 10px 0 0\",\r\n        },\r\n        \"& .MuiDataGrid-iconSeparator\": {\r\n            display: \"none\",\r\n            width: 0,\r\n            height: 0,\r\n            opacity: 0,\r\n        },\r\n        \"& .Mui-selected\": {\r\n            boxShadow: \" rgba(149, 157, 165, 0.2) 0px 8px 24px\",\r\n            backgroundColor: \"#fff !important\",\r\n        },\r\n        \"& .MuiDataGrid-sortIcon\": {\r\n            fill: \"white\",\r\n        },\r\n    },\r\n});\r\n\r\ninterface IBaseDataGrid {\r\n    onRowSelected?: (row: any) => void;\r\n    rows: any[];\r\n    cols: any[];\r\n    height?: number;\r\n}\r\n\r\nexport default function BaseDataGrid({ onRowSelected, rows, cols, height }: IBaseDataGrid) {\r\n    const classes = useDataGridStyles();\r\n\r\n    // const updatedCols = cols.map((x) => {\r\n    //     let obj = Object.keys(x);\r\n    //     let check = false;\r\n    //     for (let o in obj) {\r\n    //         if (o == \"flex\") {\r\n    //             check = true;\r\n    //         }\r\n    //     }\r\n    //     if (!check) {\r\n    //         x = { ...x, flex: 1 };\r\n    //     }\r\n    //     return x;\r\n    // });\r\n\r\n    return (\r\n        // <Box display=\"flex\" boxShadow=\"rgba(0, 0, 0, 0.08) 0px 4px 12px\" border=\"none\" height=\"100%\">\r\n        <div\r\n            style={{\r\n                flexGrow: 1,\r\n                height: height || 450,\r\n            }}\r\n        >\r\n            <DataGrid\r\n                density=\"compact\"\r\n                components={{ Toolbar: GridToolbar }}\r\n                className={classes.root}\r\n                onRowSelected={(r) => {\r\n                    onRowSelected && onRowSelected(r.data);\r\n                }}\r\n                columns={cols}\r\n                rows={rows}\r\n            />\r\n        </div>\r\n        // </Box>\r\n    );\r\n}\r\n\r\nexport const ScrollDataGrid = ({ onRowSelected, rows, cols, height }: IBaseDataGrid) => {\r\n    const classes = useDataGridStyles();\r\n\r\n    return (\r\n        // <div\r\n        //     style={{\r\n        //         height: height || 450,\r\n        //     }}\r\n        // >\r\n        <DataGrid\r\n            density=\"compact\"\r\n            components={{ Toolbar: GridToolbar }}\r\n            className={classes.root}\r\n            onRowSelected={(r) => {\r\n                onRowSelected && onRowSelected(r.data);\r\n            }}\r\n            columns={cols}\r\n            rows={rows}\r\n        />\r\n        // </div>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MenuItem, TextField, StandardTextFieldProps } from \"@material-ui/core\";\r\n// import { BootstrapInput } from \"../TextField\";\r\n\r\n// import styles from \"./inputs.module.css\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { CSSProperties } from \"@material-ui/styles\";\r\n\r\ninterface IMFS {\r\n    request: () => Promise<any>;\r\n    limit?: number;\r\n    label?: string;\r\n    getOptionLabel: (option: any) => string;\r\n    getOptionValue: (option: any) => string;\r\n    onChange?: (e: React.ChangeEvent<{}>, newValue: any) => void;\r\n    onBlur?: React.FocusEventHandler<HTMLDivElement>;\r\n    error?: boolean;\r\n    placeholder?: string;\r\n    style?: CSSProperties;\r\n    value?: any;\r\n}\r\nexport const MaterialFieldSelect = ({\r\n    request,\r\n    limit,\r\n    getOptionLabel,\r\n    getOptionValue,\r\n    onChange,\r\n    value,\r\n    ...props\r\n}: IMFS) => {\r\n    const [options, setOptions] = useState([]);\r\n    const [findValue, setFindValue] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        const t = options.find((o) => getOptionValue(o) === value);\r\n        setFindValue(t);\r\n    }, [value, options, getOptionValue]);\r\n\r\n    useEffect(() => {\r\n        request()\r\n            .then((data) => {\r\n                if (limit && limit > 0) {\r\n                    setOptions(data.slice(0, limit));\r\n                } else {\r\n                    setOptions(data);\r\n                }\r\n            })\r\n            .catch((e) => console.log(e));\r\n    }, [limit, request]);\r\n\r\n    return (\r\n        <Autocomplete\r\n            style={props.style as any}\r\n            getOptionLabel={getOptionLabel}\r\n            options={options}\r\n            onChange={onChange}\r\n            onBlur={props.onBlur}\r\n            value={findValue}\r\n            renderInput={(params) => (\r\n                <TextField\r\n                    {...params}\r\n                    label={props?.label}\r\n                    error={props.error}\r\n                    placeholder={props.placeholder}\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                />\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\ninterface IOS extends StandardTextFieldProps {\r\n    items: any[];\r\n    itemValueField: string;\r\n    itemTitleField: string;\r\n    keyField?: string;\r\n    inputStyle?: any;\r\n}\r\nexport const ObjectSelect = ({ inputStyle, items, itemTitleField, itemValueField, keyField, ...props }: IOS) => {\r\n    return (\r\n        <TextField {...props} variant=\"outlined\" size=\"small\" select>\r\n            <MenuItem value={undefined}>None</MenuItem>\r\n            {items &&\r\n                items.length >= 0 &&\r\n                items.map((item: any, i) => (\r\n                    <MenuItem key={keyField ? item[keyField] : i} value={item[itemValueField]}>\r\n                        {item[itemTitleField]}\r\n                    </MenuItem>\r\n                ))}\r\n        </TextField>\r\n    );\r\n};\r\n\r\ninterface IFieldSelect extends StandardTextFieldProps {\r\n    request: () => Promise<any>;\r\n    getOptionList?: (data: any) => any;\r\n    itemValueField: string;\r\n    itemTitleField: string;\r\n    limit?: number;\r\n    keyField?: string;\r\n}\r\nexport const FieldSelect = ({\r\n    keyField,\r\n    request,\r\n    itemValueField,\r\n    itemTitleField,\r\n    limit,\r\n    getOptionList,\r\n    ...props\r\n}: IFieldSelect) => {\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        request()\r\n            .then((data) => {\r\n                if (limit && limit > 0) {\r\n                    let options = getOptionList ? getOptionList(data) : data.slice(0, limit);\r\n                    setItems(options);\r\n                } else {\r\n                    let options = getOptionList ? getOptionList(data) : data;\r\n                    setItems(options);\r\n                }\r\n            })\r\n            .catch((e) => console.log(e));\r\n    }, [getOptionList, limit, request]);\r\n\r\n    return <ObjectSelect {...props} itemTitleField={itemTitleField} itemValueField={itemValueField} items={items} />;\r\n};\r\n\r\ninterface IArraySelect extends StandardTextFieldProps {\r\n    items?: any[];\r\n}\r\nexport const ArraySelect = ({ items, ...props }: IArraySelect) => {\r\n    return (\r\n        <ObjectSelect\r\n            itemTitleField=\"item\"\r\n            itemValueField=\"item\"\r\n            items={items ? items.map((item) => ({ item: item })) : []}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport const BaseSelect = (props: StandardTextFieldProps) => {\r\n    return (\r\n        <TextField {...props} variant=\"outlined\" size=\"small\" select>\r\n            {props.children}\r\n        </TextField>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Paper, withStyles, PaperProps } from \"@material-ui/core\";\r\n\r\nexport const BasePaper = withStyles((theme) => ({\r\n    root: {\r\n        borderRadius: 20,\r\n        padding: \"1em\",\r\n        boxShadow: \"rgba(0, 0, 0, 0.08) 0px 4px 12px\",\r\n    },\r\n}))((props: PaperProps) => <Paper {...props} />);\r\n\r\nexport const IconPaper = withStyles((theme) => ({\r\n    root: {\r\n        borderRadius: 10,\r\n        padding: theme.spacing(4),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        color: \"#fff\",\r\n    },\r\n}))((props: PaperProps) => <Paper {...props} elevation={5} />);\r\n","import { format } from \"date-fns\";\r\n\r\nexport const formatTimestampToDate = (timestamp: number) => {\r\n    return timestamp ? format(timestamp, \"MM/dd/yyyy\") : \"\";\r\n};\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport default function Toast(content: string, type?: \"success\" | \"warning\" | \"error\" | \"info\") {\r\n    switch (type) {\r\n        case \"success\":\r\n            toast.success(content);\r\n            break;\r\n        case \"warning\":\r\n            toast.warning(content);\r\n            break;\r\n        case \"error\":\r\n            toast.error(content);\r\n            break;\r\n        case \"info\":\r\n            toast.info(content);\r\n            break;\r\n        default:\r\n            toast(content);\r\n            break;\r\n    }\r\n}\r\n","import { format } from \"date-fns\";\r\n\r\nexport const formatDate = (date: string, dateFormat: string) => {\r\n    return format(new Date(date), dateFormat);\r\n};\r\n\r\nexport const getModifiedValues = (values: any, initialValues: any) => {\r\n    let modifiedValues: any = {};\r\n\r\n    if (values) {\r\n        Object.entries(values).forEach((entry) => {\r\n            let key = entry[0];\r\n            let value = entry[1];\r\n\r\n            if (value !== initialValues[key]) {\r\n                modifiedValues[key as any] = value;\r\n            }\r\n        });\r\n    }\r\n\r\n    return Object.keys(modifiedValues).length === 0 ? null : modifiedValues;\r\n};\r\n\r\nexport const countProperty = (data: any[], value: string, propGetter: (item: any) => any) => {\r\n    return data.filter((item) => propGetter(item) === value).length;\r\n};\r\n\r\nexport type ParameterType = {\r\n    [key: string]: string | number | boolean | null | undefined;\r\n};\r\n\r\nexport const generateQuery = (params: ParameterType) => {\r\n    const queryArray = [];\r\n    let paramValue: any = \"\";\r\n\r\n    for (const paramName in params) {\r\n        paramValue = params[paramName];\r\n\r\n        if (paramValue !== null && paramValue !== undefined && paramValue !== \"\") {\r\n            queryArray.push(`${paramName}=${paramValue}`);\r\n        }\r\n    }\r\n    \r\n    return queryArray.join(\"&\");\r\n};\r\n","import * as Yup from \"yup\";\r\n\r\nimport { get, delete_, patch, post } from \".\";\r\n\r\nexport const AddItemSchema = Yup.object().shape({\r\n    name: Yup.string().min(4, \"Too short!\").max(60, \"Too long\").required(\"Required !!\"),\r\n});\r\n\r\nexport interface IItem {\r\n    id: string;\r\n\r\n    approvedForSales: boolean;\r\n    obsolete: boolean;\r\n    rndOnly: boolean;\r\n    engineeringApproved: boolean;\r\n    salesApproved: boolean;\r\n    nonInventoryItem: boolean;\r\n    dontTrackQOH: boolean;\r\n    dontOrderPO: boolean;\r\n    archived: boolean;\r\n    taxable: boolean;\r\n    invalidCost: boolean;\r\n    option: boolean;\r\n    lead: number;\r\n    qbtype: string;\r\n    qbid: string;\r\n    sku: string;\r\n    active: boolean;\r\n    upc: string;\r\n    manufacturer: string;\r\n    jobDays: number;\r\n    color: string;\r\n    description: string;\r\n    size: string;\r\n    specialNote: string;\r\n    version: string;\r\n    revision: any[];\r\n    keywords: string;\r\n    url: string;\r\n    cost: number;\r\n    totalValue: number;\r\n    retailPrice: number;\r\n    BOM: boolean;\r\n    bomCost: number;\r\n    totalQoh: number;\r\n    allocatedQoh: number;\r\n    availableQoh: number;\r\n    owQoh: number;\r\n    triggerQoh: number;\r\n    recentPurchasePrice: number;\r\n    uom: string;\r\n    reorderQty: number;\r\n    minOrder: number;\r\n    perShipment: number;\r\n    location: string;\r\n    shlef: string;\r\n    aisle: string;\r\n    bin: string;\r\n    prefVendorNote: string;\r\n    additionalShippingFee: number;\r\n    shippingNote: string;\r\n    weightOz: number;\r\n    weightLb: number;\r\n    shippingOz: number;\r\n    shippingLb: number;\r\n    shippingInstruction: string;\r\n    shippableOnBom: boolean;\r\n    notShippable: boolean;\r\n    engineeringApproval: boolean;\r\n    no: string;\r\n    name: string;\r\n    device: boolean;\r\n    usedInLastQuarter: number;\r\n    photo?: string;\r\n    filters: {\r\n        [key: string]: string | number;\r\n    };\r\n    fields: {\r\n        [key: string]: string | number;\r\n    };\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nexport const AddItemInitialValues = {};\r\n\r\nexport const createItem = (itemData: any) => {\r\n    return post(\"/item\", itemData);\r\n};\r\nexport const addImage = (itemId: string, file: any) => {\r\n    const data = new FormData();\r\n    data.append(\"photo\", file);\r\n\r\n    return patch(`/item/${itemId}`, data);\r\n};\r\n\r\nexport const updateAnItem = (itemId: string, itemData: any) => {\r\n    return patch(`/item/${itemId}`, itemData);\r\n};\r\n\r\nexport const deleteAnItem = (itemId: string) => {\r\n    return delete_(`/item/${itemId}`);\r\n};\r\n\r\nexport const getItems = () => {\r\n    return get(\"/item\");\r\n};\r\n\r\nexport const getItemsByQuery = (params: any) => {\r\n    return get(\"/item\", { params });\r\n};\r\n\r\nexport const getItemQuotes = (itemId: string) => {\r\n    return get(`/item/${itemId}/quote`);\r\n};\r\n\r\nexport const getItemSOs = (itemId: string) => {\r\n    return get(`/item/${itemId}/so`);\r\n};\r\n\r\nexport const addManualCount = (ItemId: string, count: number, date: string) => {\r\n    return post(\"/manualCount\", { ItemId, count, date });\r\n};\r\n\r\nexport interface IQuantity {\r\n    qtyOnHand: string;\r\n    qtyAvailable: string;\r\n    qtyOnOrder: string;\r\n    qtyAllocated: string;\r\n    qtyRemain: string;\r\n}\r\n\r\nexport const updateItemQuantity = (ItemId: string, data: IQuantity) => {\r\n    return patch(`/item/${ItemId}/qty`, data);\r\n};\r\n","import { delete_, get, patch, post } from \".\";\r\n\r\nexport interface IDocument {\r\n    id?: string;\r\n    path?: string;\r\n    file: File | string;\r\n    description: string;\r\n}\r\n\r\nexport const getAllModelDocuments = (model: string, id: string) => {\r\n    return get(`/document/${model}/${id}`);\r\n};\r\n\r\nexport const createAModelDocument = (model: string, id: string, file: any, description: string, fileName?: string) => {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"document\", file);\r\n    formData.append(\"description\", description);\r\n    fileName && formData.append(\"fileName\", fileName);\r\n\r\n    return post(`/document/${model}/${id}`, formData);\r\n};\r\n\r\nexport const updateAModelDocument = (docid: string, file: any, description: string) => {\r\n    const formData = new FormData();\r\n    formData.append(\"document\", file);\r\n    formData.append(\"description\", description);\r\n\r\n    return patch(`/document/${docid}`, formData);\r\n};\r\n\r\nexport const deleteAModelDocument = (docid: string) => {\r\n    return delete_(`/document/${docid}`);\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function PDFPreview({ pdf, height }: { pdf: string; height?: string }) {\r\n    return (\r\n        <object width=\"100%\" height={height ? height : 400} data={pdf} type=\"application/pdf\">\r\n            <embed src={pdf} type=\"application/pdf\" />\r\n            Can\"t load pdf :(, If you have IDM extention please desable it or download the file\r\n        </object>\r\n    );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport { Box, TextField, Link } from \"@material-ui/core\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport Dialog from \"../../app/Dialog\";\r\nimport Button from \"../../app/Button\";\r\n\r\nimport { createAModelDocument, updateAModelDocument, deleteAModelDocument, IDocument } from \"../../api/document\";\r\nimport PhotoSizeSelectActualOutlinedIcon from \"@material-ui/icons/PhotoSizeSelectActualOutlined\";\r\nimport PDFPreview from \"../../components/PDFPreview\";\r\nimport { mutate } from \"swr\";\r\n\r\ninterface IDocumentModal {\r\n    open: boolean;\r\n    model: string;\r\n    itemId: string;\r\n    docData?: any;\r\n    onDone?: () => void;\r\n    onClose: () => void;\r\n}\r\n\r\nconst mutateDocuments = (type: string, id: string) => {\r\n    return mutate(`/document/${type}/${id}`);\r\n};\r\n\r\nexport default function DocumentModal({ open, onClose, model, itemId, onDone, docData }: IDocumentModal) {\r\n    const fileUploader = useRef<HTMLInputElement | null>();\r\n\r\n    const deleteDocument = async () => {\r\n        try {\r\n            if (docData && docData.id) {\r\n                await deleteAModelDocument(docData.id);\r\n                onDone && onDone();\r\n                mutateDocuments(model, itemId);\r\n                onClose();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (values: any, { setSubmitting }: any) => {\r\n        try {\r\n            if (docData && docData.id) {\r\n                await updateAModelDocument(docData.id, values.file, values.description);\r\n\r\n                onDone && onDone();\r\n                mutateDocuments(model, itemId);\r\n                onClose();\r\n            } else {\r\n                await createAModelDocument(model, itemId as any, values.file, values.description);\r\n\r\n                onDone && onDone();\r\n                mutateDocuments(model, itemId);\r\n                onClose();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} fullScreen title={`${docData ? \"Edit\" : \"Add\"} Document to ${model}`}>\r\n            <Box height=\"82vh\" m={3} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridColumnGap={10}>\r\n                <Box>\r\n                    {docData?.path && <PDFPreview height=\"100%\" pdf={\"http://digitalphocus.ir/\" + docData?.path} />}\r\n                </Box>\r\n                <Formik initialValues={docData ? docData : ({} as IDocument)} onSubmit={handleSubmit}>\r\n                    {({ values, handleBlur, handleChange, setFieldValue, isSubmitting }) => (\r\n                        <Form>\r\n                            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n                                <input\r\n                                    type=\"file\"\r\n                                    ref={(e) => (fileUploader.current = e)}\r\n                                    hidden\r\n                                    onChange={(e) =>\r\n                                        e.target.files !== null && setFieldValue(\"file\", e.target.files[0])\r\n                                    }\r\n                                />\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    style={{\r\n                                        backgroundColor: \"#fff\",\r\n                                        color: \" rgb(43,140,255) \",\r\n                                        border: \"1px solid rgb(43,140,255) \",\r\n                                        width: \"100%\",\r\n                                    }}\r\n                                    variant=\"contained\"\r\n                                    onClick={() => fileUploader.current?.click()}\r\n                                >\r\n                                    <PhotoSizeSelectActualOutlinedIcon style={{ marginRight: \"7px\" }} />\r\n                                    Upload file\r\n                                </Button>\r\n\r\n                                <div style={{ margin: \"1em 0\" }}>\r\n                                    {values.file ? (\r\n                                        // String((values.file as any).name)\r\n                                        <p>ads</p>\r\n                                    ) : docData ? (\r\n                                        <Link download href={docData.path}>\r\n                                            Download previous file\r\n                                        </Link>\r\n                                    ) : (\r\n                                        \"\"\r\n                                    )}\r\n                                </div>\r\n\r\n                                <TextField\r\n                                    style={{ marginBottom: \"20px\" }}\r\n                                    fullWidth\r\n                                    value={values.description}\r\n                                    name=\"description\"\r\n                                    label=\"Description\"\r\n                                    variant=\"outlined\"\r\n                                    multiline\r\n                                    rows={4}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                />\r\n                                <Box style={{ display: \"flex\", width: \"100%\" }}>\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        kind={docData ? \"edit\" : \"add\"}\r\n                                        disabled={isSubmitting}\r\n                                        style={{ flex: 1 }}\r\n                                    >\r\n                                        Save\r\n                                    </Button>\r\n                                    {docData && (\r\n                                        <Button\r\n                                            style={{ marginLeft: \"1em\" }}\r\n                                            onClick={deleteDocument}\r\n                                            kind=\"delete\"\r\n                                            disabled={isSubmitting}\r\n                                        >\r\n                                            Delete\r\n                                        </Button>\r\n                                    )}\r\n                                </Box>\r\n                            </Box>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n}\r\n","import { jsPDF } from \"jspdf\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\n// const pxToMm = (px: any) => {\r\n//     return Math.floor(px / (document.getElementById(\"myMm\") as any).offsetHeight);\r\n// };\r\n\r\n// const mmToPx = (mm: any) => {\r\n//     return (document.getElementById(\"myMm\") as any).offsetHeight * mm;\r\n// };\r\n// const range = (start: any, end: any) => {\r\n//     return Array(end - start)\r\n//         .join(\"0\")\r\n//         .split(\"0\")\r\n//         .map(function (val, id) {\r\n//             return id + start;\r\n//         });\r\n// };\r\n\r\nexport const exportPdf = async (input: HTMLElement) => {\r\n    const doc = new jsPDF({ unit: \"px\" });\r\n    let res;\r\n    await doc.html(input, {\r\n        callback: (doc) => {\r\n            doc.save();\r\n            res = doc.output(\"blob\");\r\n        },\r\n        x: 15,\r\n        y: 15,\r\n        html2canvas: { scale: 0.5 },\r\n    });\r\n\r\n    return res;\r\n};\r\n\r\nexport const oldExportPdf = async (input: HTMLElement) => {\r\n    let ResBlob: { blobPDF: any; blobUrl: string } = { blobPDF: {}, blobUrl: \"\" };\r\n    try {\r\n        const canvas = await html2canvas(input, { scale: 1.02 });\r\n        console.log(canvas);\r\n        let pdf = new jsPDF(\"p\", \"pt\", \"letter\");\r\n        //! This is all just html2canvas stuff\r\n        let sX = 0;\r\n        let sY = 0; // start 980 pixels down for every new page\r\n        let sWidth = 900;\r\n        let sHeight = 980;\r\n        let dX = 0;\r\n        let dY = 0;\r\n        let dWidth = 900;\r\n        let dHeight = 980;\r\n        let scaleX = 600 / canvas.width;\r\n        let scaleY = 1034 / canvas.height;\r\n        let cWidth = canvas.width;\r\n        let cHeight = canvas.height;\r\n        //we need to scale the canvas but we dont have the element :|\r\n        // const ctx1 = canvas.getContext('2d');\r\n        // ctx1?.scale(scaleX, scaleY);\r\n        // canvas.width = canvas.width * scaleX;\r\n        // canvas.height = canvas.height * scaleY;\r\n        let srcImg = canvas;\r\n        var pheight = pdf.internal.pageSize.getHeight();\r\n        // for (let i = 0; i <= (input.clientHeight) / 980; i++) {\r\n        for (let i = 0; i <= cHeight / pheight; i++) {\r\n            // sY = 980 * (i!=1 ? i*0.85 : 1)  ;\r\n            switch (i) {\r\n                case 0: {\r\n                    sY = 980 * 0;\r\n                    break;\r\n                }\r\n                case 1: {\r\n                    sY = 980 * (i * 0.97);\r\n                    break;\r\n                }\r\n                default: {\r\n                    sY = sY + 980 * 0.98;\r\n                }\r\n            }\r\n            // start 980 pixels down for every new page\r\n\r\n            const onePageCanvas = document.createElement(\"canvas\");\r\n            onePageCanvas.setAttribute(\"width\", String(sWidth));\r\n            onePageCanvas.setAttribute(\"height\", String(sHeight));\r\n            const ctx = onePageCanvas.getContext(\"2d\");\r\n            // details on this usage of this function:\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Using_images#Slicing\r\n            ctx?.drawImage(srcImg, sX, sY, cWidth, sHeight, dX, dY, dWidth, dHeight);\r\n            ctx?.scale(scaleX, scaleY);\r\n\r\n            const canvasDataURL = onePageCanvas.toDataURL(\"image/png\", 1.0);\r\n\r\n            const width = onePageCanvas.width;\r\n            const height = onePageCanvas.height;\r\n            //! If we're on anything other than the first page,\r\n            // add another page\r\n            if (i > 0) {\r\n                pdf.addPage([612, pheight]);\r\n            }\r\n            //! now we declare that we're working on that page\r\n            pdf.setPage(i + 1);\r\n            //! now we add content to that page!\r\n            // pdf.addImage(canvasDataURL, \"PNG\", 20, 40, width * 0.62, height * 0.62);\r\n            // pdf.addImage(canvasDataURL, \"PNG\", 40, 30, (input.clientWidth * 1.12), (input.clientHeight * 0.62));\r\n            pdf.addImage(canvasDataURL, \"PNG\", 40, 30, width * 0.62, height * 0.8);\r\n            console.log(onePageCanvas);\r\n            console.log(height * 0.62);\r\n            console.log(height);\r\n            console.log(width * 0.62);\r\n            console.log(width);\r\n            console.log(canvas);\r\n            console.log(input.clientHeight);\r\n            console.log(input.clientWidth);\r\n            console.log(canvas.height);\r\n            console.log(canvas.width);\r\n        }\r\n        //! after the for loop is finished running, we save the pdf.\r\n        pdf.save(\"Test.pdf\");\r\n        const blobPDF = pdf.output(\"blob\");\r\n        const blobUrl = URL.createObjectURL(blobPDF);\r\n\r\n        ResBlob = { blobPDF, blobUrl };\r\n        return ResBlob;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n","import React, { ReactNode } from \"react\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nexport default function Snack({\r\n    open,\r\n    onClose,\r\n    severity,\r\n    children,\r\n}: {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    severity?: \"success\" | \"info\" | \"warning\" | \"error\";\r\n    children: ReactNode;\r\n}) {\r\n    return (\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={onClose}>\r\n            <Alert onClose={onClose} severity={severity}>\r\n                {children}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n","export const fileType = (url: string) => {\r\n    const splited = url.split(\".\").pop();\r\n    return splited;\r\n};\r\n","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Dialog from \"../../app/Dialog\";\r\nimport Button from \"../../app/Button\";\r\nimport TextField from \"../../app/TextField\";\r\n\r\nimport { createAModelNote, updateAModelNote, deleteAModelNote, INote } from \"../../api/note\";\r\nimport { mutate } from \"swr\";\r\n\r\nconst AddModelNoteSchema = Yup.object().shape({\r\n    subject: Yup.string().min(1, \"Too short!\").required(),\r\n    note: Yup.string().required(),\r\n});\r\n\r\ninterface INoteModal {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    model: string;\r\n    itemId: string;\r\n    noteData?: INote;\r\n    onDone?: () => void;\r\n}\r\n\r\nconst mutateNotes = (type: string, id: string) => {\r\n    return mutate(`/note/${type}/${id}`);\r\n};\r\n\r\nexport default function NoteModal({ open, onClose, model, itemId, noteData, onDone }: INoteModal) {\r\n    const handleSubmit = async (values: any, { setSubmitting }: any) => {\r\n        try {\r\n            if (noteData && noteData?.id) {\r\n                await updateAModelNote(noteData?.id, values);\r\n\r\n                onDone && onDone();\r\n                mutateNotes(model, itemId);\r\n                onClose();\r\n            } else {\r\n                await createAModelNote(model, itemId as any, values);\r\n\r\n                onDone && onDone();\r\n                mutateNotes(model, itemId);\r\n                onClose();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setSubmitting(false);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            if (noteData && noteData.id) {\r\n                await deleteAModelNote(noteData.id);\r\n\r\n                onDone && onDone();\r\n                mutateNotes(model, itemId);\r\n                onClose();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} title={`${noteData?.id ? \"Edit\" : \"Add\"} a note to ${model}`}>\r\n            <Box m={3}>\r\n                <Formik\r\n                    initialValues={noteData ? noteData : ({} as INote)}\r\n                    validationSchema={AddModelNoteSchema}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    {({ values, errors, touched, handleBlur, handleChange, isSubmitting }) => (\r\n                        <Form>\r\n                            <Box display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridColumnGap={10} gridRowGap={10}>\r\n                                <TextField\r\n                                    name=\"subject\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    error={Boolean(errors.subject && touched.subject)}\r\n                                    helperText={errors.subject && touched.subject}\r\n                                    value={values.subject}\r\n                                    label=\"subject\"\r\n                                />\r\n                                <TextField\r\n                                    name=\"url\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    value={values.url}\r\n                                    error={Boolean(errors.url && touched.url)}\r\n                                    helperText={errors.url && touched.url}\r\n                                    label=\"url\"\r\n                                />\r\n                                <TextField\r\n                                    style={{ gridColumnEnd: \"span 2\" }}\r\n                                    name=\"note\"\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    value={values.note}\r\n                                    error={Boolean(errors.note && touched.note)}\r\n                                    helperText={errors.note && touched.note}\r\n                                    label=\"note\"\r\n                                    multiline\r\n                                    rows={4}\r\n                                />\r\n                            </Box>\r\n                            <Box my={2} textAlign=\"center\" display=\"flex\" alignItems=\"center\">\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    style={{ flex: 1 }}\r\n                                    disabled={isSubmitting}\r\n                                    kind={noteData ? \"edit\" : \"add\"}\r\n                                >\r\n                                    Save\r\n                                </Button>\r\n                                {noteData && (\r\n                                    <Button kind=\"delete\" style={{ margin: \"0 1em\" }} onClick={handleDelete}>\r\n                                        Delete\r\n                                    </Button>\r\n                                )}\r\n                            </Box>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n}\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M21 3H3C2 3 1 4 1 5v14c0 1.1.9 2 2 2h18c1 0 2-1 2-2V5c0-1-1-2-2-2zm0 15.92c-.02.03-.06.06-.08.08H3V5.08L3.08 5h17.83c.03.02.06.06.08.08v13.84zm-10-3.41L8.5 12.5 5 17h14l-4.5-6z\"\n}), 'PhotoSizeSelectActualOutlined');\n\nexports.default = _default;","import { get, post, patch, delete_ } from \".\";\r\n\r\nexport interface IFieldService {\r\n    id?: string;\r\n    name: string;\r\n    ItemId: string;\r\n    period: number;\r\n    price: number;\r\n    ServiceFamilyId: string;\r\n    description?: string;\r\n}\r\n\r\nexport const getFieldServices = (ItemId?: string) => {\r\n    return get(\"/service\", { params: { ItemId } });\r\n};\r\n\r\nexport const getAFieldService = (id: string) => {\r\n    return get(`/service/${id}`);\r\n};\r\n\r\nexport const createFieldService = (data: IFieldService) => {\r\n    return post(\"/service\", data);\r\n};\r\n\r\nexport const updateFieldService = (id: string, data: IFieldService) => {\r\n    return patch(`/service/${id}`, data);\r\n};\r\n\r\nexport const deleteFieldService = (id: string) => {\r\n    return delete_(`/service/${id}`);\r\n};\r\n\r\nexport const addServiceToLineitem = (lineId: string, serviceId: string, count?: number) => {\r\n    return post(`/lineitem/${lineId}/lineservice/${serviceId}`, { count });\r\n};\r\n\r\nexport const removeServiceFromLineitem = (lineId: string, serviceId: string) => {\r\n    return delete_(`/lineitem/${lineId}/lineservice/${serviceId}`);\r\n};\r\n","import { get, post, patch, delete_ } from \".\";\r\n\r\nexport interface IContact {\r\n    id: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    phone: string;\r\n    ext: string;\r\n    email: string;\r\n    title: string;\r\n    department: string;\r\n    active: boolean;\r\n    main: boolean;\r\n    officeHours: string;\r\n}\r\n\r\nexport const getContacts = () => {\r\n    return get(\"/contact\");\r\n};\r\n\r\nexport const getAllModelContact = (model: string, id: string) => {\r\n    return get(`/contact/${model}/${id}`);\r\n};\r\n\r\nexport const createAModelContact = (model: string, id: string, data: IContact) => {\r\n    return post(`/contact/${model}/${id}`, data);\r\n};\r\n\r\nexport const updateAModelContact = (id: string, data: IContact) => {\r\n    return patch(`/contact/${id}`, data);\r\n};\r\n\r\nexport const deleteAModelContact = (id: string) => {\r\n    return delete_(`/contact/${id}`);\r\n};\r\n","import { get, post, delete_, patch } from \".\";\r\n\r\nexport interface ICustomer {\r\n    id: string;\r\n    approved: boolean;\r\n    name: string;\r\n    address: string;\r\n    state: string;\r\n    city: string;\r\n    zipcode: string;\r\n    phone: string;\r\n    email: string;\r\n    productLine: string;\r\n    supportStaff: string;\r\n    refferedBy: string;\r\n    linkedId: string;\r\n    facebook: string;\r\n    instagram: string;\r\n    website: string;\r\n    size: string;\r\n    fax: string;\r\n    parent: string;\r\n    status: string;\r\n    regularCommissionPercentage: number;\r\n    overageCommissionPercentage: number;\r\n    CustomerTypeId: string;\r\n}\r\n\r\nexport const getCustomers = () => {\r\n    return get(\"/customer\");\r\n};\r\n\r\nexport const addCustomer = (customer: ICustomer) => {\r\n    return post(\"/customer\", customer);\r\n};\r\n\r\nexport const deleteCustomer = (id: string) => {\r\n    return delete_(`/customer/${id}`);\r\n};\r\n\r\nexport const editCustomer = (id: string, data: ICustomer) => {\r\n    return patch(`/customer/${id}`, data);\r\n};\r\n","import { patch, get, post, delete_ } from \".\";\r\n\r\nimport { IItem } from \"./items\";\r\nimport { ISO } from \"./so\";\r\n\r\nexport interface IUnit {\r\n    id: string;\r\n    assignee: string[];\r\n    status: string;\r\n    seen: boolean;\r\n    number: string | number;\r\n    LineItemRecordId: string;\r\n    ItemId: IItem;\r\n    dueDate: number;\r\n    item: IItem;\r\n    so: ISO;\r\n    laborTime: string;\r\n    laborCost: number;\r\n    totalCost: number;\r\n    bomCost: number;\r\n    productionStatus: string;\r\n    options: any[];\r\n}\r\n\r\nexport interface IUnitHistory {\r\n    itemno: string;\r\n    item: IItem;\r\n    unit: IUnit;\r\n    id: string;\r\n    estimatedShipDate: string;\r\n    actualShipDate: string;\r\n    serialNumber: string;\r\n    status: string;\r\n    warrantyStatus: string;\r\n    warrantyEndDate: string;\r\n    sonumber: string;\r\n    soid: string;\r\n    so: ISO;\r\n    SODate: number;\r\n}\r\n\r\nexport const addImage = (unitId: string, file: any) => {\r\n    const data = new FormData();\r\n    data.append(\"photo\", file);\r\n    return post(`/unit/${unitId}/photo`, data);\r\n};\r\nexport const deleteImage = (unitId: string, data: any) => {\r\n    return delete_(`/unit/${unitId}/photo`, null, data);\r\n};\r\n\r\nexport const updateUnit = (id: string, data: any) => {\r\n    if (data.dueDate) {\r\n        let date = new Date(data.dueDate);\r\n        data.dueDate = date.getTime();\r\n    }\r\n    return patch(`/unit/${id}`, data);\r\n};\r\n\r\nexport const getAllUnits = () => {\r\n    return get(\"/unit\");\r\n};\r\n","import { get, patch, post, delete_ } from \".\";\r\n\r\nimport { ICustomer } from \"./customer\";\r\nimport { IEmployee } from \"./employee\";\r\n\r\nimport { ILineItem } from \"./lineItem\";\r\nimport { ILineService } from \"./lineService\";\r\n\r\nexport interface IQuote {\r\n    id: string;\r\n    number: string;\r\n    relatedNumber: string;\r\n    SOId: string;\r\n    entryDate: number;\r\n    expireDate: number;\r\n    ProjectId: any;\r\n    location: string;\r\n    leadTime: string;\r\n    note: string;\r\n    status: string;\r\n    repOrAgency: ICustomer;\r\n    requesterName: string;\r\n    requesterMail: string;\r\n    requesterPhone: string;\r\n    client: ICustomer;\r\n    unitPricingLevel: string;\r\n    estimatedShipDate: number;\r\n    TicketId: number;\r\n    QuoteRequestId?: any;\r\n    freightTerms: string;\r\n    paymentTerms: string;\r\n    depositRequired: boolean;\r\n    deposit: number;\r\n    depositAmount: number;\r\n    commissionRate: string;\r\n    regularCommission: number;\r\n    overageCommission: number;\r\n    salesperson: IEmployee;\r\n\r\n    EmployeeId: IEmployee;\r\n    createdAt: number;\r\n    updatedAt: number;\r\n    totalAmount: number;\r\n    lineItemRecords: ILineItem[];\r\n    lineServiceRecords: ILineService[];\r\n    __v: number;\r\n}\r\n\r\nexport interface IQuoteComplete extends IQuote {\r\n    lines: ILineItem[];\r\n    lineServices: ILineService[];\r\n}\r\n\r\nexport const createQuoteLineService = (quoteId: string, data: ILineService) => {\r\n    return post(`/quote/${quoteId}/lineservice`, data);\r\n};\r\n\r\nexport const editQuoteLineService = (id: string, data: ILineService) => {\r\n    return patch(`/lineservice/${id}`, data);\r\n};\r\n\r\nexport const deleteQuoteLineService = (id: string) => {\r\n    return delete_(`/lineservice/${id}`);\r\n};\r\n\r\nexport const getQuoteLineServices = (quoteId: string) => {\r\n    return get(`/lineservice`, { params: { quoteId } });\r\n};\r\n\r\nexport const createLineItem = (qId: string, data: ILineItem) => {\r\n    return post(`/quote/${qId}/lineitem`, data);\r\n};\r\n\r\nexport const editLineItem = (id: string, data: ILineItem) => {\r\n    return patch(`/lineitem/${id}`, data);\r\n};\r\n\r\nexport const deleteLineItem = (id: string) => {\r\n    return delete_(`/lineitem/${id}`);\r\n};\r\n\r\nexport const getLineItems = (quoteId: string) => {\r\n    return get(`/lineitem`, { params: { QuoteId: quoteId } });\r\n};\r\n\r\nexport const getQuotes = () => {\r\n    return get(\"/quote\");\r\n};\r\n\r\nexport const getQuoteById = (id: string) => {\r\n    return get(`/quote/${id}`);\r\n};\r\n\r\nexport const createQuote = (data: IQuote) => {\r\n    return post(\"/quote\", data);\r\n};\r\nexport const createQuoteComplete = (data: any) => {\r\n    return post(\"/quote\", data);\r\n};\r\n\r\nexport const updateQuote = (id: string, data: IQuote) => {\r\n    return patch(`/quote/${id}`, data);\r\n};\r\n\r\nexport const deleteQuote = (id: string) => {\r\n    return delete_(`/quote/${id}`);\r\n};\r\n","import { get, post, patch, delete_ } from \".\";\r\n\r\nexport interface INote {\r\n    id?: string;\r\n    subject: string;\r\n    note: string;\r\n    url?: string;\r\n}\r\n\r\nexport const getAllModelNotes = (model: string, id: string) => {\r\n    return get(`/note/${model}/${id}`);\r\n};\r\n\r\nexport const createAModelNote = (model: string, id: string, data: INote) => {\r\n    return post(`/note/${model}/${id}`, data);\r\n};\r\n\r\nexport const updateAModelNote = (id: string, data: INote) => {\r\n    return patch(`/note/${id}`, data);\r\n};\r\n\r\nexport const deleteAModelNote = (id: string) => {\r\n    return delete_(`/note/${id}`);\r\n};\r\n","import List from \"@material-ui/core/List\";\r\nimport { withStyles } from \"@material-ui/core\";\r\n\r\nexport default withStyles((theme) => ({\r\n    root: {\r\n        position: \"sticky\",\r\n        top: 70,\r\n\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: \"#ffff\",\r\n        boxShadow: theme.shadows[\"4\"],\r\n        borderRadius: 50,\r\n        padding: \"8px 4px\",\r\n\r\n        \"& .MuiListItem-gutters\": {\r\n            padding: \"4px 0\",\r\n        },\r\n    },\r\n}))(List);\r\n","import { useRef, useState } from \"react\";\r\nimport useSWR from \"swr\";\r\n\r\nimport { get } from \"../../api\";\r\nimport { useDataGridStyles } from \"../../app/BaseDataGrid\";\r\nimport { generateQuery, ParameterType } from \"../../logic/utils\";\r\n\r\nfunction useStickyResult(value: any) {\r\n    const val = useRef();\r\n    if (value !== undefined) val.current = value;\r\n    return val.current;\r\n}\r\n\r\nexport const useDataGridData = ({\r\n    params,\r\n    url,\r\n    limit,\r\n}: {\r\n    params?: ParameterType;\r\n    url: string;\r\n    limit?: number | string;\r\n}) => {\r\n    const [page, setPage] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const dataGridClasses = useDataGridStyles();\r\n\r\n    const paginationQueries = `page=${page + 1}&pageSize=${limit ? limit : 25}`;\r\n    const otherQueries = params ? generateQuery(params) + \"&\" : \"\";\r\n    const { data, mutate } = useSWR(`${url}?${otherQueries}${paginationQueries}`, async (url) => {\r\n        try {\r\n            setLoading(true);\r\n            return await get(url);\r\n        } catch (error) {\r\n            console.error(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    });\r\n    const rows: any = useStickyResult(data);\r\n\r\n    return { page, setPage, rows, mutate, loading, setLoading, dataGridClasses };\r\n};\r\n","import {get, post, patch, delete_ } from \".\";\r\n\r\nexport interface IProject {\r\n    id?: string;\r\n    name: string;\r\n}\r\n\r\nexport const getProjects = () => {\r\n    return get(\"/project\");\r\n};\r\n\r\nexport const createProject = (name: string) => {\r\n    return post(\"/project\", { name });\r\n};\r\n\r\nexport const updateProject = (pId: string, data: any) => {\r\n    return patch(`/project/${pId}`, data);\r\n};\r\n\r\nexport const deleteProject = (pId: string) => {\r\n    return delete_(`/project/${pId}`);\r\n};\r\n","import * as Yup from \"yup\";\r\nimport { delete_, get, patch, post } from \".\";\r\nimport { IItem } from \"./items\";\r\n\r\nexport interface ITicket {\r\n    id: string;\r\n    productionStatus: string;\r\n    name: string;\r\n    ContactId: string;\r\n    LineServiceRecordId: any;\r\n    tags: string;\r\n    callTime: number;\r\n    description: string;\r\n    status: string;\r\n    deadline: number;\r\n    subject: string;\r\n    priority: string;\r\n    note: string;\r\n    fsh: boolean;\r\n    ItemId: IItem;\r\n\r\n    createdAt: number;\r\n    updatedAt: number;\r\n    __v: number;\r\n}\r\n\r\nexport const schema = Yup.object().shape({\r\n    LineServiceRecordId: Yup.string().required(),\r\n});\r\n\r\nexport const getTickets = () => {\r\n    return get(\"/ticket\");\r\n};\r\n\r\nexport const createTicket = (data: ITicket) => {\r\n    return post(\"/ticket\", data);\r\n};\r\n\r\nexport const updateTicket = (id: string, data: ITicket) => {\r\n    return patch(`/ticket/${id}`, data);\r\n};\r\n\r\nexport const deleteTicket = (id: string) => {\r\n    return delete_(`/ticket/${id}`);\r\n};\r\n","import { get, post, patch, delete_ } from \".\";\r\n\r\nexport type IVendor = {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n};\r\n\r\nexport const createVendor = (data: IVendor) => {\r\n    return post(\"/vendor\", data);\r\n};\r\n\r\nexport const getVendors = () => {\r\n    return get(\"/vendor\");\r\n};\r\n\r\nexport const updateVendor = (id: string, data: IVendor) => {\r\n    return patch(`/vendor/${id}`, data);\r\n};\r\n\r\nexport const deleteVendor = (id: string) => {\r\n    return delete_(`/vendor/${id}`);\r\n};\r\n\r\nexport const getVendorItems = (vendorId: string) => {\r\n    return get(`/vendor/${vendorId}/items`);\r\n};\r\n\r\nexport const getItemVendors = (itemId: string) => {\r\n    return get(`/item/${itemId}/vendors`);\r\n};\r\n\r\nexport const getVendorVendings = (vendorId: string) => {\r\n    return get(`/vending`, { params: { vendorId } });\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import { get, patch, post, delete_ } from \".\";\r\n\r\nimport { ICustomer } from \"./customer\";\r\nimport { ILineItem } from \"./lineItem\";\r\nimport { ILineService } from \"./lineService\";\r\nexport interface ISO {\r\n    id: string;\r\n    number: string;\r\n\r\n    repOrAgency: string;\r\n    location: string;\r\n    freightTerms: string;\r\n    paymentTerms: string;\r\n    carrier: string;\r\n    QuoteId: string;\r\n    issuedBy?: string;\r\n    status: string;\r\n    createdAt: number;\r\n\r\n    estimatedShipDate: string;\r\n    actualShipDate: string;\r\n    DivisionId: string;\r\n    noTaxClient: boolean;\r\n    department: string;\r\n\r\n    expodate: boolean;\r\n    shippingAddress?: string;\r\n    shippingContact?: string;\r\n    shippingPhone?: string;\r\n    shippingEmail?: string;\r\n    shippingEntitiy: string;\r\n\r\n    billingContact?: string;\r\n    billingPhone?: string;\r\n    billingEmail?: string;\r\n    billingAddress?: string;\r\n    billingEntitiy: string;\r\n\r\n    agency?: string;\r\n    requester?: string;\r\n    ClientId?: ICustomer;\r\n    ProjectId?: string;\r\n\r\n    totalAmount?: number;\r\n}\r\nexport interface ISOComplete extends ISO {\r\n    lines: ILineItem[];\r\n    lineServices: ILineService[];\r\n}\r\n\r\nexport const getSO = () => {\r\n    return get(`/so`);\r\n};\r\n\r\nexport const createSO = (data: ISO) => {\r\n    return post(\"/so\", {\r\n        ...data,\r\n        estimatedShipDate: data.estimatedShipDate === \"\" ? null : new Date(data.estimatedShipDate).getTime(),\r\n        actualShipDate: data.actualShipDate === \"\" ? null : new Date(data.actualShipDate).getTime(),\r\n    });\r\n};\r\nexport const createSOComplete = (data: ISOComplete) => {\r\n    return post(\"/so\", {\r\n        ...data,\r\n        estimatedShipDate: data.estimatedShipDate === \"\" ? null : new Date(data.estimatedShipDate).getTime(),\r\n        actualShipDate: data.actualShipDate === \"\" ? null : new Date(data.actualShipDate).getTime(),\r\n    });\r\n};\r\n\r\nexport const editSO = (id: string, data: ISO) => {\r\n    return patch(`/so/${id}`, {\r\n        ...data,\r\n        estimatedShipDate: data.estimatedShipDate === \"\" ? null : new Date(data.estimatedShipDate).getTime(),\r\n        actualShipDate: data.actualShipDate === \"\" ? null : new Date(data.actualShipDate).getTime(),\r\n    });\r\n};\r\n\r\nexport const deleteSO = (id: string) => {\r\n    return delete_(`/so/${id}`);\r\n};\r\n\r\nexport const createLineItem = (soId: string, data: ILineItem) => {\r\n    return post(`/so/${soId}/lineitem`, data);\r\n};\r\n\r\nexport const editLineItem = (id: string, data: ILineItem) => {\r\n    return patch(`/lineitem/${id}`, data);\r\n};\r\n\r\nexport const deleteLineItem = (id: string) => {\r\n    return delete_(`/lineitem/${id}`);\r\n};\r\n\r\nexport const getLineItems = (SOId: string) => {\r\n    return get(`/lineitem`, { params: { SOId } });\r\n};\r\n\r\nexport const createSOLineService = (soId: string, data: ILineService) => {\r\n    return post(`/so/${soId}/lineservice`, data);\r\n};\r\n\r\nexport const editSOLineService = (id: string, data: ILineService) => {\r\n    return patch(`/lineservice/${id}`, data);\r\n};\r\n\r\nexport const deleteSOLineService = (id: string) => {\r\n    return delete_(`/lineservice/${id}`);\r\n};\r\n\r\nexport const getSOLineServices = (SOId: string) => {\r\n    return get(`/lineservice`, { params: { SOId } });\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  }\n};\nvar TableContainer = /*#__PURE__*/React.forwardRef(function TableContainer(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableContainer.propTypes = {\n  /**\n   * The table itself, normally `<Table />`\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableContainer'\n})(TableContainer);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport TableContext from './TableContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'table',\n      width: '100%',\n      borderCollapse: 'collapse',\n      borderSpacing: 0,\n      '& caption': _extends({}, theme.typography.body2, {\n        padding: theme.spacing(2),\n        color: theme.palette.text.secondary,\n        textAlign: 'left',\n        captionSide: 'bottom'\n      })\n    },\n\n    /* Styles applied to the root element if `stickyHeader={true}`. */\n    stickyHeader: {\n      borderCollapse: 'separate'\n    }\n  };\n};\nvar defaultComponent = 'table';\nvar Table = /*#__PURE__*/React.forwardRef(function Table(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$padding = props.padding,\n      padding = _props$padding === void 0 ? 'default' : _props$padding,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$stickyHeader = props.stickyHeader,\n      stickyHeader = _props$stickyHeader === void 0 ? false : _props$stickyHeader,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"padding\", \"size\", \"stickyHeader\"]);\n\n  var table = React.useMemo(function () {\n    return {\n      padding: padding,\n      size: size,\n      stickyHeader: stickyHeader\n    };\n  }, [padding, size, stickyHeader]);\n  return /*#__PURE__*/React.createElement(TableContext.Provider, {\n    value: table\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    role: Component === defaultComponent ? null : 'table',\n    ref: ref,\n    className: clsx(classes.root, className, stickyHeader && classes.stickyHeader)\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Table.propTypes = {\n  /**\n   * The content of the table, normally `TableHead` and `TableBody`.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Allows TableCells to inherit padding of the Table.\n   */\n  padding: PropTypes.oneOf(['default', 'checkbox', 'none']),\n\n  /**\n   * Allows TableCells to inherit size of the Table.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * Set the header sticky.\n   *\n   * ⚠️ It doesn't work with IE 11.\n   */\n  stickyHeader: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTable'\n})(Table);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-header-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'head'\n};\nvar defaultComponent = 'thead';\nvar TableHead = /*#__PURE__*/React.forwardRef(function TableHead(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableHead.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableHead'\n})(TableHead);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nimport { fade } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: 'inherit',\n      display: 'table-row',\n      verticalAlign: 'middle',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      '&$hover:hover': {\n        backgroundColor: theme.palette.action.hover\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.selectedOpacity)\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Pseudo-class applied to the root element if `hover={true}`. */\n    hover: {},\n\n    /* Styles applied to the root element if table variant=\"head\". */\n    head: {},\n\n    /* Styles applied to the root element if table variant=\"footer\". */\n    footer: {}\n  };\n};\nvar defaultComponent = 'tr';\n/**\n * Will automatically set dynamic row height\n * based on the material table element parent (head, body, etc).\n */\n\nvar TableRow = /*#__PURE__*/React.forwardRef(function TableRow(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      _props$hover = props.hover,\n      hover = _props$hover === void 0 ? false : _props$hover,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"hover\", \"selected\"]);\n\n  var tablelvl2 = React.useContext(Tablelvl2Context);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, className, tablelvl2 && {\n      'head': classes.head,\n      'footer': classes.footer\n    }[tablelvl2.variant], hover && classes.hover, selected && classes.selected),\n    role: Component === defaultComponent ? null : 'row'\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableRow.propTypes = {\n  /**\n   * Should be valid <tr> children such as `TableCell`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the table row will shade on hover.\n   */\n  hover: PropTypes.bool,\n\n  /**\n   * If `true`, the table row will have the selected shading.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableRow'\n})(TableRow);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Tablelvl2Context from '../Table/Tablelvl2Context';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'table-row-group'\n  }\n};\nvar tablelvl2 = {\n  variant: 'body'\n};\nvar defaultComponent = 'tbody';\nvar TableBody = /*#__PURE__*/React.forwardRef(function TableBody(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? defaultComponent : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Tablelvl2Context.Provider, {\n    value: tablelvl2\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: Component === defaultComponent ? null : 'rowgroup'\n  }, other)));\n});\nprocess.env.NODE_ENV !== \"production\" ? TableBody.propTypes = {\n  /**\n   * The content of the component, normally `TableRow`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTableBody'\n})(TableBody);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v10zM18 4h-2.5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z\"\n}), 'DeleteRounded');\n\nexports.default = _default;","import { delete_, get, patch, post } from \".\";\r\n\r\nexport interface IPO {\r\n    id?: string;\r\n    path?: string;\r\n    number?: string;\r\n    file?: any;\r\n    senderNumber?: string;\r\n    reciever?: string;\r\n    ContactId?: string;\r\n    ClientId?: string;\r\n    EmployeeId?: string;\r\n    ProjectId?: string;\r\n}\r\n\r\nexport const createPO = (data: IPO) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", data.file);\r\n    data.number && formData.append(\"number\", data.number);\r\n    data.reciever && formData.append(\"reciever\", String(data.reciever));\r\n    data.ContactId && formData.append(\"ContactId\", String(data.ContactId));\r\n    data.ClientId && formData.append(\"ClientId\", String(data.ClientId));\r\n    data.EmployeeId && formData.append(\"EmployeeId\", String(data.EmployeeId));\r\n    data.ProjectId && formData.append(\"ProjectId\", String(data.ProjectId));\r\n\r\n    return post(`/po`, formData);\r\n};\r\n\r\nexport const updatePO = (id: string, data: IPO) => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", data.file);\r\n    data.number && formData.append(\"number\", data.number);\r\n    data.reciever && formData.append(\"reciever\", String(data.reciever));\r\n    data.ContactId && formData.append(\"ContactId\", String(data.ContactId));\r\n    data.ClientId && formData.append(\"ClientId\", String(data.ClientId));\r\n    data.EmployeeId && formData.append(\"EmployeeId\", String(data.EmployeeId));\r\n    data.ProjectId && formData.append(\"ProjectId\", String(data.ProjectId));\r\n\r\n    return patch(`/po/${id}`, formData);\r\n};\r\n\r\nexport const getPO = () => {\r\n    return get(\"/po\");\r\n};\r\n\r\nexport const deletePO = (id: string) => {\r\n    return delete_(`/po/${id}`);\r\n};\r\n","import { delete_, get, patch, post } from \".\";\r\n\r\nexport interface IAddress {\r\n    id?: string;\r\n    address: string;\r\n    address2: string;\r\n    city: string;\r\n    state: string;\r\n    zip: string;\r\n    country: string;\r\n    main: boolean;\r\n    AddressTypeId: number;\r\n}\r\n\r\nexport const getAddresses = () => {\r\n    return get(\"/address\");\r\n};\r\n\r\nexport const getAllModelAddress = (model: string, id: string) => {\r\n    return get(`/address/${model}/${id}`);\r\n};\r\n\r\nexport const createAModelAddress = (model: string, id: string, data: IAddress) => {\r\n    return post(`/address/${model}/${id}`, data);\r\n};\r\n\r\nexport const updateAModelAddress = (id: string, data: IAddress) => {\r\n    return patch(`/address/${id}`, data);\r\n};\r\n\r\nexport const deleteAModelAddress = (id: string) => {\r\n    return delete_(`/address/${id}`);\r\n};\r\n","import {get, post, patch, delete_ } from \".\";\r\n\r\nexport interface IPhone {\r\n    id?: string;\r\n    phone: string;\r\n    ext: string;\r\n    main: boolean;\r\n    PhoneTypeId: string;\r\n}\r\n\r\nexport const getPhones = () => {\r\n    return get(\"/phone\");\r\n};\r\n\r\nexport const getAllModelPhone = (model: string, id: string) => {\r\n    return get(`/phone/${model}/${id}`);\r\n};\r\n\r\nexport const createAModelPhone = (model: string, id: string, data: IPhone) => {\r\n    return post(`/phone/${model}/${id}`, data);\r\n};\r\n\r\nexport const updateAModelPhone = (id: string, data: IPhone) => {\r\n    return patch(`/phone/${id}`, data);\r\n};\r\n\r\nexport const deleteAModelPhone = (id: string) => {\r\n    return delete_(`/phone/${id}`);\r\n};\r\n","import { delete_, get, patch, post } from \".\";\r\n\r\nexport interface IEmailAddress {\r\n    id?: string;\r\n    email: string;\r\n    main?: boolean;\r\n    EmailTypeId: string;\r\n}\r\n\r\nexport const getEmails = () => {\r\n    return get(\"/emailAddress\");\r\n};\r\n\r\nexport const getAllModelEmailAddrs = (model: string, id: string) => {\r\n    return get(`/emailAddress/${model}/${id}`);\r\n};\r\n\r\nexport const createAModelEmailAddr = (model: string, id: string, data: IEmailAddress) => {\r\n    return post(`/emailAddress/${model}/${id}`, data);\r\n};\r\n\r\nexport const updateAModelEmailAddr = (id: string, data: IEmailAddress) => {\r\n    return patch(`/emailAddress/${id}`, data);\r\n};\r\n\r\nexport const deleteAModelEmailAddr = (id: string) => {\r\n    return delete_(`/emailAddress/${id}`);\r\n};\r\n","import React from 'react';\r\nimport '../styles/pdfs.css'\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    onePage: {\r\n        width: \"100%\",\r\n        minHeight: \"1250px\",\r\n        marginBottom: \"40px\",\r\n    },\r\n    exact: {\r\n        width: \"100%\",\r\n        height: \"1200px\",\r\n        marginBottom: \"40px\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n    },\r\n    grid: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr\",\r\n        gridTemplateRows: \"1fr 1fr 1fr 1fr\",\r\n        width: \"100%\",\r\n        height: \"320px\",\r\n        marginTop: \"140%\",\r\n    },\r\n    right: {\r\n        flex: 1,\r\n        backgroundColor: \"#4f81bc\",\r\n        height: \"100%\",\r\n        border: \"1px solid black\",\r\n        borderLeft: \"none\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"30px\",\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\n\r\n\r\nexport default function SOCus({ data }: { data: any }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <div className={classes.exact}>\r\n                <div\r\n                    style={{\r\n                        width: \"160px\",\r\n                        backgroundColor: \"#8c8c8c\",\r\n                        height: \"100%\",\r\n                        border: \"1px solid black\",\r\n                    }}\r\n                >\r\n                    <div className={classes.grid}>\r\n                        <div style={{ backgroundColor: \"#37608c\", border: \"2px solid white\" }}></div>\r\n                        <div style={{ backgroundColor: \"\" }}></div>\r\n                        <div style={{ backgroundColor: \"#18375f\", border: \"2px solid white\" }}></div>\r\n                        <div style={{ backgroundColor: \"#37608c\", border: \"2px solid white\" }}></div>\r\n                        <div style={{ backgroundColor: \"#102540\", border: \"2px solid white\" }}></div>\r\n                        <div style={{ backgroundColor: \"#18375f\", border: \"2px solid white\" }}></div>\r\n                        <div style={{ backgroundColor: \"\" }}></div>\r\n                        <div style={{ backgroundColor: \"#102540\", border: \"2px solid white\" }}></div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.right}>\r\n                    <div style={{ marginLeft: \"auto\" }}>LOGO</div>\r\n                    <div>\r\n                        <h1>Customer Order\r\n                            Acknowledgement</h1>\r\n                    </div>\r\n                    <div>\r\n                        <h3>050621-3PE</h3>\r\n                    </div>\r\n                    <div>\r\n                        DSPM is committed to provide the highest quality products possible through our highly skilled\r\n                        and dedicated employees. Utilizing state-of-the-art manufacturing processes and patented\r\n                        products to pursue an aggressive, on-going research and development program. Insuring DSPM’s\r\n                        future as a leader in Power Conversion products. DSPM provides the highest standards of service\r\n                        available through our highly trained representatives and customer service personnel. DSPM\r\n                        employees are expected to serve the customer with the highest level of technical knowledge in\r\n                        the industry.\r\n                    </div>\r\n                    <div style={{ marginLeft: \"auto\" }}> footer</div>\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        left: \"120px\",\r\n                        top: \"0px\",\r\n                        width: \"80px\",\r\n                        height: \"80px\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        backgroundColor: \"#8c8c8c\",\r\n                        border: \"1px solid black\",\r\n                        color: \"white\",\r\n                    }}\r\n                >\r\n                    {\" \"}\r\n                    2021{\" \"}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p className=\"frst-txt1\"><b>Sales Order#:</b> 060921-1</p>\r\n                <p className=\"frst-txt2\"><b>Customer PO#: S6650371-PHASE 5</b></p>\r\n                <p className=\"frst-txt3\"><b>PO Received Date:</b></p>\r\n                <p className=\"frst-txt4\"><b>Processed By:</b></p>\r\n                <p className=\"frst-txt5\"><b>Estimated Ship Date:</b>Week of 7/9/2021</p>\r\n                <p className=\"frst-txt6\"><b>Project Name: Alia Inverter</b></p>\r\n                <p className=\"frst-txt7\"><b>Project Location:</b> San Diego</p>\r\n                <p className=\"frst-txt8\"><b>Bill To:</b> OneSource Distributors, LLC<br />\r\n                    5045 Convey St<br />\r\n                    San Diego, CA 92111<br />\r\n                    United States</p>\r\n                <p className=\"frst-txt9\"><b>Ship To:</b> CONVOY STREET<br />\r\n                    San Diego, CA 92111<br />\r\n                    Attn: BR36 ONESOURCE<br />\r\n                    DISTRIBUTORS</p>\r\n\r\n                <p className=\"frst-txt10\"><b>Phone:</b> (858) 564-0233</p>\r\n                <p className=\"frst-txt11\"><b>Ship Via:</b> Best Way</p>\r\n                <p className=\"frst-txt12\"><b>Freight Terms </b>  Prepaid and Add</p>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"box-blue\">\r\n                <h1 className=\"h1-1\">DEFENDER MINI 2KW 120 volts input 120 volts output, 1-phase, 60 HZ</h1>\r\n                <p className=\"p1-1\">Group [1] Model DMINIA-2KW-120-120-90</p>\r\n                <p className=\"p1-2\">Serial No. 068896</p>\r\n            </div>\r\n\r\n            <div className=\"boxes\">\r\n                <h2>DEFENDER MINI 2KW 120 volts input 120 volts output, 1-phase, 60 HZ</h2>\r\n                <p>Qty            Unit Price            Unit Total</p>\r\n                <ul>\r\n                    <li>ONLINE Emergency Lighting Inverter</li>\r\n                    <li>90 minutes Battery Back up</li>\r\n                    <li>Input/Output Terminal Blocks</li>\r\n                    <li>Input/Output Transient Noise Filters</li>\r\n                    <li>Input Main Circuit Breaker</li>\r\n                    <li>Output Main Circuit Breaker</li>\r\n                    <li>Internal Bypass Switch</li>\r\n                    <li>LCD Monitoring / Control / Diagnostic / Communication Subsystem with RS232</li>\r\n                    <li>Phone Assisted Startup, 8am to 5pm Monday to Friday, normal business hours PST</li>\r\n                    <li>Enclosure - (1) each Inverter Cabinet: 24 W X 26 H X 16 D</li>\r\n                    <li>Battery jumper cables included.</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"boxes\">\r\n                <h2>Service Program Options for DMINIA-2KW-120-120-90</h2>\r\n                <p>Qty            Unit Price            Unit Total</p>\r\n                <ul>\r\n                    <li>SW58-EWMINI1050-2KW 8-5 Mon-Fri, per year $ 661</li><br />\r\n                    <li>SW725 7 days a week 24 hrs Except Holidays, per year $ 1125</li>\r\n                    <li>SW365 7 days a week 24hrs Including Holidays, per year $ 1240</li>\r\n                    <li>SF58-EWMINI1050-2KW 8-5 Mon-Fri One (1) Preventive Maintenance per year (1) $ 1130</li>\r\n                    <li>SF724-EWMINI1050-2KW 7 days a week, 24hrs, Except Holidays, 1 Preventive maintenance per\r\n                        year $ 1683</li>\r\n                    <li>SF365-EWMINI1050-2KW 7 days a week, 24hrs, Including Holidays, 1 Preventive Maintenance per\r\n                        year $ 1895</li>\r\n                    <li>SW58-EWMINI1050-2KW 8-5 Mon-Fri, per year $ 661</li>\r\n                    <li>SF58-EWMINI1050-2KW 8-5 Mon-Fri One (1) Preventive Maintenance per year (1) $ 1130</li>\r\n                    <li>SF724-EWMINI1050-2KW 7 days a week, 24hrs, Except Holidays, 1 Preventive maintenance per\r\n                        year $ 1683</li>\r\n                    <li>SF365-EWMINI1050-2KW 7 days a week, 24hrs, Including Holidays, 1 Preventive Maintenance per\r\n                        year $ 1895</li>\r\n\r\n                </ul>\r\n            </div>\r\n\r\n\r\n            <div className=\"box-blue1\">\r\n                <h1 className=\"h1-1\">This freight quote does not include special items such as lift gates, limited access charges,</h1>\r\n                <p className=\"p1-1\">Group [2] Model FREIGHT</p>\r\n                <p className=\"p1-2\">Serial No. 068898</p>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"boxes-txt\">\r\n                <h2>Service Program Options for DMINIA-2KW-120-120-90</h2>\r\n                <p>Qty            Unit Price            Unit Total</p>\r\n                <p>\r\n\r\n                    This freight quote does not include special items such as lift gates, limited access charges, and/or any<br />\r\n\r\n                    other special handling charges.<br />\r\n\r\n                    If extra charges occur, we will contact you to determine how to handle any additional shipping costs if<br />\r\n\r\n                    not already disclosed at time of order.<br />\r\n\r\n\r\n                </p>\r\n            </div>\r\n\r\n\r\n            <div className=\"erea\">\r\n                <h3 className=\"h3-3\">Special Instructions</h3>\r\n                <h1> Shipping Instructions:</h1>\r\n                <p>\r\n\r\n                    PLEASE MARK ALL PACKAGES WITH JOB NAME AND TYPE<br />\r\n\r\n                    DELIVERY DOCK AROUND BACK OF BUILDING<br />\r\n\r\n                    Special Instructions</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"boxes\" style={{ marginTop: '140px' }} />\r\n            <h2>NOTES:</h2>\r\n            <p>Qty            Unit Price            Unit Total</p>\r\n\r\n            1. * This is the standard lead time; please consult the factory for others.<br />\r\n\r\n            a. Expediting fees are due and nonrefundable upon release of purchase order to manufacture.<br />\r\n\r\n            b. DSPM will put forth the best effort possible to comply with required dates but not guaranteed.<br />\r\n\r\n            2. ** Unit and batteries ship separately, may not arrive same day.<br />\r\n\r\n            3. For future reference, please provide ship to zip code for most accurate freight cost.<br />\r\n\r\n            4. Line to neutral loads only; unless otherwise stated on purchase order from 3Kva to 21Kva.<br />\r\n\r\n            5. Number of battery cabinets may vary; dependent on type of batteries available.<br />\r\n\r\n            6. Battery manufacturer subject to change based on availability of batteries.<br />\r\n\r\n            7. Customer is responsible for installing batteries into cabinet(s).<br />\r\n\r\n            8. DSPM is bidding our standard product in lieu of specifications; please review carefully.<br />\r\n\r\n            9. Freight is PREPAID AND ADD unless otherwise noted.<br />\r\n\r\n\r\n\r\n\r\n            <div className=\"boxes-txt\" style={{ fontSize: '15px' }}>\r\n                <h2>Terms and Conditions</h2>\r\n                <p>\r\n\r\n\r\n                    <br />\r\n                    <br />\r\n                    Acceptance\r\n                    The terms of sale contained herein apply to all sales transactions including Quotations and Purchase Orders entered into by\r\n                    Seller directly with the Buyer for standard product. Custom product sales may be subject to additional terms and conditions.\r\n                    This acceptance is conditional upon Buyer's assent to the terms and conditions set out herein in lieu of those in Buyer's\r\n                    purchase orders. Modifications or additions to these terms of sale will be recognized only if accepted in writing by an officer\r\n                    of the Seller. Seller's failure to object to provisions contained in any communication from Buyer shall not be deemed a\r\n                    waiver of the provisions contained herein.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Prices\r\n                    Quotations automatically expire 30 days from the date issued and are subject to withdrawal or extension by notice within\r\n                    that period. Seller's published prices are subject to change without notice. New pricing will not be applied to existing orders\r\n                    accepted by Seller. Prices quoted are for products only and do not include any other charges unless specifically covered in\r\n                    writing by Seller. Any discrepancies relating to price must be called to Seller's attention for resolution within 30 days of the\r\n                    billing date.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Taxes\r\n                    Unless otherwise agreed upon in writing or required by law, all prices will be quoted and billed exclusive of federal, state\r\n                    and local excise sales and similar taxes. Such taxes, when applicable shall appear as additional terms on the invoice. If\r\n                    exemption from such taxes is claimed, buyer must provide, or have on file with Seller, a certificate of exemption at the time\r\n                    the Purchase Order is submitted to Seller.\r\n\r\n                    <br />\r\n                    <br />\r\n                    Orders Acceptance\r\n                    Buyer's Purchase Orders must be in writing and approved by an authorized representative of the Buyer. Seller shall\r\n                    determine order acceptance at its discretion, and may impose restrictions for quantity requirements in regard to total order\r\n                    value and product packaging minimums. Seller can also restrict time frames for scheduled deliveries and change order\r\n                    activity. Terms of acceptance will be mutually understood by both parties, and authorized in writing by Seller at the Buyer's\r\n                    request.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Terms of Payment\r\n                    The Seller reserves the right to require payment in advance or C.O.D. and otherwise modify credit terms. Unless otherwise\r\n                    agreed, partial shipments can be made and payment shall become due in accordance with the designated terms upon\r\n                    submission of invoices. Each shipment shall be invoiced separately and Buyer shall pay for each shipment as invoiced. If\r\n                    shipments are delayed by Buyer without Seller's prior written consent, payments shall become due on the date when Seller\r\n                    is prepared to make shipment. Products held for the Buyer by the Seller shall be at the risk and expense of the Buyer. Seller\r\n                    reserves the right to add a monthly service charge as allowed by law.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Title and Delivery\r\n                    Unless otherwise instructed in writing, Seller shall ship by the methods it deems most advantageous. Transportation shall\r\n                    be collect, or if prepaid, will be subsequently billed to the Buyer. Title shall pass to the Buyer, and Seller's liability as to\r\n                    delivery shall cease on delivery of products to carrier at Seller's facility, regardless of any provisions for payment of freight\r\n                    or insurance or the form of shipping documents. Risk of loss or damage in transit shall rest with the Buyer. All claims for\r\n                    loss or damage will be filed with the carrier. Claims against Seller for shortages occurring before delivery to carrier shall be\r\n                    waived unless made within thirty (30) days after delivery of shipment to the Buyer.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Contingencies\r\n                    All shipping dates and quantities are approximate. Seller shall use reasonable efforts to fill all orders according to the\r\n                    agreed upon schedule and quantity. Seller shall not be responsible for any failure to perform resulting from unforeseen\r\n                    circumstances or causes beyond Seller's reasonable control. Such causes include, but are not limited to; strikes, floods,\r\n                    fires, labor disputes, accidents, inability to maintain materials or supplies, excessive demand for products over the available\r\n                    supply, custom duties or surcharges, and interruption for any reason in the manufacture of Seller's products by Seller's\r\n                    suppliers, any act of God, or the action of any government. In the event of any delay caused by such a contingency, the date\r\n                    of delivery shall, at the request of the Seller be deferred for period equal to the period of delay.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Patents\r\n                    Buyer shall indemnify, defend and hold Seller harmless against all expenses, damages, costs, or losses resulting from any\r\n                    suit or proceeding brought for infringement of copyright, patent, trademarks, or other intellectual property rights or for\r\n                    unfair competition arising from compliance with Buyer's design specifications or instructions. With respect to products\r\n                    manufactured solely to Seller's design and specifications, Seller shall defend any suit or proceeding brought against Buyer\r\n                    so far as based on a claim that any such products of any parts there of furnished hereunder constitute an infringement of\r\n                    any United States patent or United States mask work rights, if notified promptly of such claim in writing and given\r\n                    authority, information and assistance in the defense of same, and Seller shall pay all damages and costs awarded therein\r\n                    against Buyer. Seller assumes no liability, consequential or otherwise for, and Buyer agrees to hold Seller harmless against\r\n                    infringement of patent claims covering completed equipment or any assembly, circuit, combination, method or process in\r\n                    which any products may be used. In no event shall Seller's total liability to Buyer under or as a result of compliance with\r\n                    provisions of this paragraph exceed the aggregate sum paid to Seller by Buyer for the purchase of allegedly infringing\r\n                    products or parts. The foregoing states the entire warranty by Seller and the exclusive remedy of the Buyer with respect to\r\n                    any alleged copyright, patent or other intellectual property right infringement by such products or parts. No costs or\r\n                    expenses under this paragraph shall in any event be incurred for the account of the Seller without its prior written consent.\r\n                    Sale of product or any part thereof does not convey to Buyer any license, express or by implication, estoppels or otherwise,\r\n                    under any patent claim with respect to which Seller can grant licenses covering complicated equipment, or any assembly,\r\n                    circuit, combination, method or process in which any such products are used as components (not withstanding) the fact\r\n                    that such products may have been designed for use in or may only be useful in any such patented equipment, assembly\r\n                    circuit, combination, method or process, and that such products may have been purchased and sold for such use). Seller\r\n                    expressly reserves all rights under such patent or patent claim.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Warranty and Sole Remedy\r\n                    For the applicable warranty period specified below, Seller warrants that the products to be delivered hereunder will be free\r\n                    from defects in materials and workmanship under normal use and service. The obligations of the Seller under this warranty\r\n                    are limited to replacing, repairing or giving credit for, at its option, any of said products which shall, within the warranty\r\n                    period be returned as provided herein to the Seller, transportation charges prepaid and which are, after examination,\r\n                    disclosed to the satisfaction of the Seller to be thus defective. Buyer acknowledges and agrees that the provisions of this\r\n                    warranty constitute the sole and exclusive remedy available to it with regard to said defective products. No agent,\r\n                    employee, or representative of Seller has any authority to bind Seller to any affirmation, representation or warranty relating\r\n                    to the products other than as specifically provided herein. The warranty provided herein is subject to the following\r\n                    conditions:\r\n                    <br />\r\n                    <br />\r\n\r\n                    A. If products become defective during the warranty period, Buyer shall notify Seller promptly in writing of any such claims\r\n                    and provide information pertinent to delivery dates of the product and/or date code information.\r\n                    <br />\r\n                    <br />\r\n\r\n                    B. If Seller advises Buyer to return the product for repair or replacement, Buyer will follow Sellers Material Return\r\n                    Authorization procedures. Any order returned after 90 days from the time the order arrived on site, will not get credit for\r\n                    the batteries.\r\n                    <br />\r\n                    <br />\r\n\r\n                    C. If product alleged by Buyer to be defective or returned to Seller for repair as provided in this section is either (I) not\r\n                    under warranty, or (ii) determined not to be defective, or (iii) defective due to any cause not covered under the warranty\r\n                    <br />\r\n                    <br />\r\n\r\n                    provided herein, Buyer agrees to reimburse Seller for all reasonable expenses incurred in traveling and/or shipping,\r\n                    handling, and inspection of such product.\r\n\r\n                    <br />\r\n                    <br />\r\n                    D. Products will be accepted by Seller for warranty claim verification only when returned by Buyer in a condition which\r\n                    allows for suitable testing by Seller.\r\n                    <br />\r\n                    <br />\r\n\r\n                    E. Seller shall reimburse Buyer for shipping charges to the extent of the percent of the total return that are found by Seller\r\n                    to be defective as specified herein. Reimbursement will be in the form of a credit adjustment to Buyer's account unless\r\n                    otherwise agreed upon.\r\n\r\n                    <br />\r\n                    <br />\r\n                    F. In no event shall Seller be liable for any defective products if examination discloses that the defective condition of such\r\n                    products was caused by misuse, abuse or improper installation, application, maintenance or repair assembly by other than\r\n                    Seller, alteration, accident or negligence in use, storage, transportation or handling outside of specified environmental\r\n                    conditions.\r\n\r\n                    <br />\r\n                    <br />\r\n                    G. Seller assumes no risk or liability for the suitability or unsuitability or results of its products, used in combination with\r\n                    any electrical or electronic components, circuits, systems, assemblies, or any other material substances, or environments.\r\n                    <br />\r\n                    <br />\r\n\r\n                    H. Any returned products electrically or mechanically destroyed by Buyer or third parties will not be covered under this\r\n                    warranty, and will not be returned to Buyer, but will be scrapped by Seller.\r\n\r\n                    <br />\r\n                    <br />\r\n                    I. This warranty shall exist for a period of twelve (12) months after the date of shipment from the Seller and is considered\r\n                    null and void if components or subassemblies other than those supplied or approved by Seller are used in the assembly of\r\n                    Seller’s products, or if Sellers product is modified in any way without written authorization of Seller.\r\n                    <br />\r\n                    <br />\r\n\r\n                    J. Developmental products of Seller are warranted to be free from defects in materials and workmanship and to meet the\r\n                    applicable specifications only at the time of receipt of Buyer and for no longer period of time. All accepted deliveries are\r\n                    deemed to be free from defects as of the time of delivery.\r\n                    <br />\r\n                    <br />\r\n\r\n                    K. Product sold but not manufactured by the Seller will be warranted as to defects in material and workmanship consistent\r\n                    with the warranty policy of the original manufacturer of the product. The Seller's only obligation shall be to assign Buyer, to\r\n                    the extent possible, whatever warranty the Seller receives from said manufacturer. In no event shall the Seller be liable for\r\n                    loss, damage or expense directly or indirectly arising from the use of the units or from any other cause, except as expressly\r\n                    stated in this warranty. THERE ARE NO WARRANTIES, WHICH EXTEND BEYOND THE DESCRIPTION ON THE FACE HEREOF.\r\n                    THE SELLER DISCLAIMS ANY IMPLIED WARRANTY OF MERCHANTABILITY OF THE GOODS OR OF THE FITNESS OF THE\r\n                    GOODS FOR ANY INTENDED PURPOSE. The Seller is not liable for, and the Buyer waives any right of action it has or may\r\n                    have against the Seller for any consequential or special damages arising out of any breach of warranty and for any damages\r\n                    the Buyer may claim for damage to any property or injury or death to any person arising out of its purchase or the use,\r\n                    operation, or maintenance of the product. The Seller will not be liable for any labor subcontracted or performed by the\r\n                    Buyer for preparation of item under warranty for return to the Seller’s factory or for preparation work for field repair or\r\n                    replacement. Invoicing of the Seller for labor either performed or subcontracted by the Buyer will not be considered as a\r\n                    liability by the Seller. The Seller's obligations under this warranty are conditioned upon timely receipt of all payments in\r\n                    strict accordance with payment terms, time being of the essence in this regard. During the time while the Seller has not\r\n                    received any amount overdue, the Seller shall have no obligation under this warranty. The expiration date of the warranty\r\n                    shall not be extended upon payment of the overdue amount.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Product Discontinuance\r\n                    Seller will give as much notification as possible in the event of discontinuing product, however, Seller reserves the right to\r\n                    discontinue production of any product at any time without notice except for that quantity of product for which Seller has\r\n                    received and acknowledged a Purchase Order from Buyer and has scheduled such product for shipment within six (6)\r\n                    months of the date of such acknowledgement.\r\n\r\n                    <br />\r\n                    <br />\r\n                    Cancellation of Buyer\r\n                    Orders for standard product may be cancelled on sixty (60) days prior to the scheduled ship date by written notice to Seller.\r\n                    Orders for products which are not listed in Seller’s current catalogue (including but not limited to, semi-custom application\r\n                    specific products, or other semi-custom product(s) which have special markings, or which have received special testing or\r\n                    which are specially programmed for Buyer) may not be cancelled or returned except under the provisions of a prior written\r\n                    agreement between Seller and Buyer which sets forth the cancellation charges to be paid by Buyer in the vent of such\r\n                    cancellation. If such an agreement is not in place, the charges shall be 100%. Any money paid in advance is refundable at\r\n                    DSPM discretion.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Property Rights\r\n                    The design, development or manufacture by Seller of a product for Buyer shall not be deemed to produce a work made for\r\n                    hire and shall not give to Buyer any copyright interest in the product or any interest in all or any portion of the mask works\r\n                    relating to the product. All such rights remain with the property of the Seller including models, drawings, composites,\r\n                    patterns, dies molds, masks and any other tools made for or obtained for furnishing the products hereunder.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Special, Incidental, Consequential, or Indirect Damages\r\n                    INDEPENDENTLY OF ANY OTHER LIMITATION HEREOF AND REGARDLESS OF WHETHER THE PURPOSE OF SUCH LIMITATION\r\n                    IS SERVED, IT IS AGREED THAT IN NO EVENT SHALL SELLER BE LIABLE FOR SPECIAL, INCIDENTAL, CONSEQUENTIAL OR\r\n                    INDIRECT DAMAGES.\r\n\r\n                    <br />\r\n                    <br />\r\n                    Limitation of Actions\r\n                    No action against Seller for breach hereof shall be commenced more than one (1) year after the accrual of the cause of\r\n                    action.\r\n\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport '../styles/pdfs.css'\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    onePage: {\r\n        width: \"100%\",\r\n        minHeight: \"1250px\",\r\n        marginBottom: \"40px\",\r\n    },\r\n    exact: {\r\n        width: \"100%\",\r\n        height: \"1200px\",\r\n        marginBottom: \"40px\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n    },\r\n    grid: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr\",\r\n        gridTemplateRows: \"1fr 1fr 1fr 1fr\",\r\n        width: \"100%\",\r\n        height: \"320px\",\r\n        marginTop: \"140%\",\r\n    },\r\n    right: {\r\n        flex: 1,\r\n        backgroundColor: \"#4f81bc\",\r\n        height: \"100%\",\r\n        border: \"1px solid black\",\r\n        borderLeft: \"none\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"30px\",\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default function SORep({ data }: { data: any }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.exact}>\r\n                <div\r\n                    style={{\r\n                        width: \"160px\",\r\n                        backgroundColor: \"#8c8c8c\",\r\n                        height: \"100%\",\r\n                        border: \"1px solid black\",\r\n                    }}\r\n                >\r\n                    <div className={classes.grid}>\r\n                        <div style={{ backgroundColor: \"#37608c\", border: \"2px solid white\" }}></div>\r\n                        <div style={{ backgroundColor: \"\" }}></div>\r\n                        <div style={{ backgroundColor: \"#18375f\", border: \"2px solid white\" }}></div>\r\n                        <div style={{ backgroundColor: \"#37608c\", border: \"2px solid white\" }}></div>\r\n                        <div style={{ backgroundColor: \"#102540\", border: \"2px solid white\" }}></div>\r\n                        <div style={{ backgroundColor: \"#18375f\", border: \"2px solid white\" }}></div>\r\n                        <div style={{ backgroundColor: \"\" }}></div>\r\n                        <div style={{ backgroundColor: \"#102540\", border: \"2px solid white\" }}></div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.right}>\r\n                    <div style={{ marginLeft: \"auto\" }}>LOGO</div>\r\n                    <div>\r\n                        <h1>Representative Order\r\n                            Acknowledgement</h1>\r\n                    </div>\r\n                    <div>\r\n                        <h3>050621-3PE</h3>\r\n                    </div>\r\n                    <div>\r\n                        DSPM is committed to provide the highest quality products possible through our highly skilled\r\n                        and dedicated employees. Utilizing state-of-the-art manufacturing processes and patented\r\n                        products to pursue an aggressive, on-going research and development program. Insuring DSPM’s\r\n                        future as a leader in Power Conversion products. DSPM provides the highest standards of service\r\n                        available through our highly trained representatives and customer service personnel. DSPM\r\n                        employees are expected to serve the customer with the highest level of technical knowledge in\r\n                        the industry.\r\n                    </div>\r\n                    <div style={{ marginLeft: \"auto\" }}> footer</div>\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        left: \"120px\",\r\n                        top: \"0px\",\r\n                        width: \"80px\",\r\n                        height: \"80px\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        backgroundColor: \"#8c8c8c\",\r\n                        border: \"1px solid black\",\r\n                        color: \"white\",\r\n                    }}\r\n                >\r\n                    {\" \"}\r\n                    2021{\" \"}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <p className=\"frst-txt1\"><b>Sales Order#:</b> 060921-1</p>\r\n                <p className=\"frst-txt2\"><b>Customer PO#: S6650371-PHASE 5</b></p>\r\n                <p className=\"frst-txt3\"><b>PO Received Date:</b></p>\r\n                <p className=\"frst-txt4\"><b>Processed By:</b></p>\r\n                <p className=\"frst-txt5\"><b>Estimated Ship Date:</b>Week of 7/9/2021</p>\r\n                <p className=\"frst-txt6\"><b>Project Name: Alia Inverter</b></p>\r\n                <p className=\"frst-txt7\"><b>Project Location:</b> San Diego</p>\r\n                <p className=\"frst-txt8\"><b>Bill To:</b> OneSource Distributors, LLC<br />\r\n                    5045 Convey St<br />\r\n                    San Diego, CA 92111<br />\r\n                    United States</p>\r\n                <p className=\"frst-txt9\"><b>Ship To:</b> CONVOY STREET<br />\r\n                    San Diego, CA 92111<br />\r\n                    Attn: BR36 ONESOURCE<br />\r\n                    DISTRIBUTORS</p>\r\n\r\n                <p className=\"frst-txt10\"><b>Phone:</b> (858) 564-0233</p>\r\n                <p className=\"frst-txt11\"><b>Ship Via:</b> Best Way</p>\r\n                <p className=\"frst-txt12\"><b>Freight Terms </b>  Prepaid and Add</p>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"box-blue\">\r\n                <h1 className=\"h1-1\">DEFENDER MINI 2KW 120 volts input 120 volts output, 1-phase, 60 HZ</h1>\r\n                <p className=\"p1-1\">Group [1] Model DMINIA-2KW-120-120-90</p>\r\n                <p className=\"p1-2\">Serial No. 068896</p>\r\n            </div>\r\n\r\n            <div className=\"boxes\">\r\n                <h2>DEFENDER MINI 2KW 120 volts input 120 volts output, 1-phase, 60 HZ</h2>\r\n                <p>Qty            Unit Price            Unit Total</p>\r\n                <ul>\r\n                    <li>ONLINE Emergency Lighting Inverter</li>\r\n                    <li>90 minutes Battery Back up</li>\r\n                    <li>Input/Output Terminal Blocks</li>\r\n                    <li>Input/Output Transient Noise Filters</li>\r\n                    <li>Input Main Circuit Breaker</li>\r\n                    <li>Output Main Circuit Breaker</li>\r\n                    <li>Internal Bypass Switch</li>\r\n                    <li>LCD Monitoring / Control / Diagnostic / Communication Subsystem with RS232</li>\r\n                    <li>Phone Assisted Startup, 8am to 5pm Monday to Friday, normal business hours PST</li>\r\n                    <li>Enclosure - (1) each Inverter Cabinet: 24 W X 26 H X 16 D</li>\r\n                    <li>Battery jumper cables included.</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"boxes\">\r\n                <h2>Service Program Options for DMINIA-2KW-120-120-90</h2>\r\n                <p>Qty            Unit Price            Unit Total</p>\r\n                <ul>\r\n                    <li>SW58-EWMINI1050-2KW 8-5 Mon-Fri, per year $ 661</li><br />\r\n                    <li>SW725 7 days a week 24 hrs Except Holidays, per year $ 1125</li>\r\n                    <li>SW365 7 days a week 24hrs Including Holidays, per year $ 1240</li>\r\n                    <li>SF58-EWMINI1050-2KW 8-5 Mon-Fri One (1) Preventive Maintenance per year (1) $ 1130</li>\r\n                    <li>SF724-EWMINI1050-2KW 7 days a week, 24hrs, Except Holidays, 1 Preventive maintenance per\r\n                        year $ 1683</li>\r\n                    <li>SF365-EWMINI1050-2KW 7 days a week, 24hrs, Including Holidays, 1 Preventive Maintenance per\r\n                        year $ 1895</li>\r\n                    <li>SW58-EWMINI1050-2KW 8-5 Mon-Fri, per year $ 661</li>\r\n                    <li>SF58-EWMINI1050-2KW 8-5 Mon-Fri One (1) Preventive Maintenance per year (1) $ 1130</li>\r\n                    <li>SF724-EWMINI1050-2KW 7 days a week, 24hrs, Except Holidays, 1 Preventive maintenance per\r\n                        year $ 1683</li>\r\n                    <li>SF365-EWMINI1050-2KW 7 days a week, 24hrs, Including Holidays, 1 Preventive Maintenance per\r\n                        year $ 1895</li>\r\n\r\n                </ul>\r\n            </div>\r\n\r\n\r\n            <div className=\"box-blue1\">\r\n                <h1 className=\"h1-1\">This freight quote does not include special items such as lift gates, limited access charges,</h1>\r\n                <p className=\"p1-1\">Group [2] Model FREIGHT</p>\r\n                <p className=\"p1-2\">Serial No. 068898</p>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"boxes-txt\">\r\n                <h2>Service Program Options for DMINIA-2KW-120-120-90</h2>\r\n                <p>Qty            Unit Price            Unit Total</p>\r\n                <p>\r\n\r\n                    This freight quote does not include special items such as lift gates, limited access charges, and/or any<br />\r\n\r\n                    other special handling charges.<br />\r\n\r\n                    If extra charges occur, we will contact you to determine how to handle any additional shipping costs if<br />\r\n\r\n                    not already disclosed at time of order.<br />\r\n\r\n\r\n                </p>\r\n            </div>\r\n\r\n\r\n            <div className=\"erea\">\r\n                <h3 className=\"h3-3\">Special Instructions</h3>\r\n                <h1> Shipping Instructions:</h1>\r\n                <p>\r\n\r\n                    PLEASE MARK ALL PACKAGES WITH JOB NAME AND TYPE<br />\r\n\r\n                    DELIVERY DOCK AROUND BACK OF BUILDING<br />\r\n\r\n                    Special Instructions</p>\r\n            </div>\r\n\r\n\r\n            <div className=\"boxes\" style={{ marginTop: '140px' }} />\r\n            <h2>NOTES:</h2>\r\n            <p>Qty            Unit Price            Unit Total</p>\r\n\r\n            1. * This is the standard lead time; please consult the factory for others.<br />\r\n\r\n            a. Expediting fees are due and nonrefundable upon release of purchase order to manufacture.<br />\r\n\r\n            b. DSPM will put forth the best effort possible to comply with required dates but not guaranteed.<br />\r\n\r\n            2. ** Unit and batteries ship separately, may not arrive same day.<br />\r\n\r\n            3. For future reference, please provide ship to zip code for most accurate freight cost.<br />\r\n\r\n            4. Line to neutral loads only; unless otherwise stated on purchase order from 3Kva to 21Kva.<br />\r\n\r\n            5. Number of battery cabinets may vary; dependent on type of batteries available.<br />\r\n\r\n            6. Battery manufacturer subject to change based on availability of batteries.<br />\r\n\r\n            7. Customer is responsible for installing batteries into cabinet(s).<br />\r\n\r\n            8. DSPM is bidding our standard product in lieu of specifications; please review carefully.<br />\r\n\r\n            9. Freight is PREPAID AND ADD unless otherwise noted.<br />\r\n\r\n\r\n\r\n\r\n            <div className=\"boxes-txt\" style={{ fontSize: '15px' }}>\r\n                <h2>Terms and Conditions</h2>\r\n                <p>\r\n\r\n\r\n                    <br />\r\n                    <br />\r\n                    Acceptance\r\n                    The terms of sale contained herein apply to all sales transactions including Quotations and Purchase Orders entered into by\r\n                    Seller directly with the Buyer for standard product. Custom product sales may be subject to additional terms and conditions.\r\n                    This acceptance is conditional upon Buyer's assent to the terms and conditions set out herein in lieu of those in Buyer's\r\n                    purchase orders. Modifications or additions to these terms of sale will be recognized only if accepted in writing by an officer\r\n                    of the Seller. Seller's failure to object to provisions contained in any communication from Buyer shall not be deemed a\r\n                    waiver of the provisions contained herein.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Prices\r\n                    Quotations automatically expire 30 days from the date issued and are subject to withdrawal or extension by notice within\r\n                    that period. Seller's published prices are subject to change without notice. New pricing will not be applied to existing orders\r\n                    accepted by Seller. Prices quoted are for products only and do not include any other charges unless specifically covered in\r\n                    writing by Seller. Any discrepancies relating to price must be called to Seller's attention for resolution within 30 days of the\r\n                    billing date.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Taxes\r\n                    Unless otherwise agreed upon in writing or required by law, all prices will be quoted and billed exclusive of federal, state\r\n                    and local excise sales and similar taxes. Such taxes, when applicable shall appear as additional terms on the invoice. If\r\n                    exemption from such taxes is claimed, buyer must provide, or have on file with Seller, a certificate of exemption at the time\r\n                    the Purchase Order is submitted to Seller.\r\n\r\n                    <br />\r\n                    <br />\r\n                    Orders Acceptance\r\n                    Buyer's Purchase Orders must be in writing and approved by an authorized representative of the Buyer. Seller shall\r\n                    determine order acceptance at its discretion, and may impose restrictions for quantity requirements in regard to total order\r\n                    value and product packaging minimums. Seller can also restrict time frames for scheduled deliveries and change order\r\n                    activity. Terms of acceptance will be mutually understood by both parties, and authorized in writing by Seller at the Buyer's\r\n                    request.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Terms of Payment\r\n                    The Seller reserves the right to require payment in advance or C.O.D. and otherwise modify credit terms. Unless otherwise\r\n                    agreed, partial shipments can be made and payment shall become due in accordance with the designated terms upon\r\n                    submission of invoices. Each shipment shall be invoiced separately and Buyer shall pay for each shipment as invoiced. If\r\n                    shipments are delayed by Buyer without Seller's prior written consent, payments shall become due on the date when Seller\r\n                    is prepared to make shipment. Products held for the Buyer by the Seller shall be at the risk and expense of the Buyer. Seller\r\n                    reserves the right to add a monthly service charge as allowed by law.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Title and Delivery\r\n                    Unless otherwise instructed in writing, Seller shall ship by the methods it deems most advantageous. Transportation shall\r\n                    be collect, or if prepaid, will be subsequently billed to the Buyer. Title shall pass to the Buyer, and Seller's liability as to\r\n                    delivery shall cease on delivery of products to carrier at Seller's facility, regardless of any provisions for payment of freight\r\n                    or insurance or the form of shipping documents. Risk of loss or damage in transit shall rest with the Buyer. All claims for\r\n                    loss or damage will be filed with the carrier. Claims against Seller for shortages occurring before delivery to carrier shall be\r\n                    waived unless made within thirty (30) days after delivery of shipment to the Buyer.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Contingencies\r\n                    All shipping dates and quantities are approximate. Seller shall use reasonable efforts to fill all orders according to the\r\n                    agreed upon schedule and quantity. Seller shall not be responsible for any failure to perform resulting from unforeseen\r\n                    circumstances or causes beyond Seller's reasonable control. Such causes include, but are not limited to; strikes, floods,\r\n                    fires, labor disputes, accidents, inability to maintain materials or supplies, excessive demand for products over the available\r\n                    supply, custom duties or surcharges, and interruption for any reason in the manufacture of Seller's products by Seller's\r\n                    suppliers, any act of God, or the action of any government. In the event of any delay caused by such a contingency, the date\r\n                    of delivery shall, at the request of the Seller be deferred for period equal to the period of delay.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Patents\r\n                    Buyer shall indemnify, defend and hold Seller harmless against all expenses, damages, costs, or losses resulting from any\r\n                    suit or proceeding brought for infringement of copyright, patent, trademarks, or other intellectual property rights or for\r\n                    unfair competition arising from compliance with Buyer's design specifications or instructions. With respect to products\r\n                    manufactured solely to Seller's design and specifications, Seller shall defend any suit or proceeding brought against Buyer\r\n                    so far as based on a claim that any such products of any parts there of furnished hereunder constitute an infringement of\r\n                    any United States patent or United States mask work rights, if notified promptly of such claim in writing and given\r\n                    authority, information and assistance in the defense of same, and Seller shall pay all damages and costs awarded therein\r\n                    against Buyer. Seller assumes no liability, consequential or otherwise for, and Buyer agrees to hold Seller harmless against\r\n                    infringement of patent claims covering completed equipment or any assembly, circuit, combination, method or process in\r\n                    which any products may be used. In no event shall Seller's total liability to Buyer under or as a result of compliance with\r\n                    provisions of this paragraph exceed the aggregate sum paid to Seller by Buyer for the purchase of allegedly infringing\r\n                    products or parts. The foregoing states the entire warranty by Seller and the exclusive remedy of the Buyer with respect to\r\n                    any alleged copyright, patent or other intellectual property right infringement by such products or parts. No costs or\r\n                    expenses under this paragraph shall in any event be incurred for the account of the Seller without its prior written consent.\r\n                    Sale of product or any part thereof does not convey to Buyer any license, express or by implication, estoppels or otherwise,\r\n                    under any patent claim with respect to which Seller can grant licenses covering complicated equipment, or any assembly,\r\n                    circuit, combination, method or process in which any such products are used as components (not withstanding) the fact\r\n                    that such products may have been designed for use in or may only be useful in any such patented equipment, assembly\r\n                    circuit, combination, method or process, and that such products may have been purchased and sold for such use). Seller\r\n                    expressly reserves all rights under such patent or patent claim.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Warranty and Sole Remedy\r\n                    For the applicable warranty period specified below, Seller warrants that the products to be delivered hereunder will be free\r\n                    from defects in materials and workmanship under normal use and service. The obligations of the Seller under this warranty\r\n                    are limited to replacing, repairing or giving credit for, at its option, any of said products which shall, within the warranty\r\n                    period be returned as provided herein to the Seller, transportation charges prepaid and which are, after examination,\r\n                    disclosed to the satisfaction of the Seller to be thus defective. Buyer acknowledges and agrees that the provisions of this\r\n                    warranty constitute the sole and exclusive remedy available to it with regard to said defective products. No agent,\r\n                    employee, or representative of Seller has any authority to bind Seller to any affirmation, representation or warranty relating\r\n                    to the products other than as specifically provided herein. The warranty provided herein is subject to the following\r\n                    conditions:\r\n                    <br />\r\n                    <br />\r\n\r\n                    A. If products become defective during the warranty period, Buyer shall notify Seller promptly in writing of any such claims\r\n                    and provide information pertinent to delivery dates of the product and/or date code information.\r\n                    <br />\r\n                    <br />\r\n\r\n                    B. If Seller advises Buyer to return the product for repair or replacement, Buyer will follow Sellers Material Return\r\n                    Authorization procedures. Any order returned after 90 days from the time the order arrived on site, will not get credit for\r\n                    the batteries.\r\n                    <br />\r\n                    <br />\r\n\r\n                    C. If product alleged by Buyer to be defective or returned to Seller for repair as provided in this section is either (I) not\r\n                    under warranty, or (ii) determined not to be defective, or (iii) defective due to any cause not covered under the warranty\r\n                    <br />\r\n                    <br />\r\n\r\n                    provided herein, Buyer agrees to reimburse Seller for all reasonable expenses incurred in traveling and/or shipping,\r\n                    handling, and inspection of such product.\r\n\r\n                    <br />\r\n                    <br />\r\n                    D. Products will be accepted by Seller for warranty claim verification only when returned by Buyer in a condition which\r\n                    allows for suitable testing by Seller.\r\n                    <br />\r\n                    <br />\r\n\r\n                    E. Seller shall reimburse Buyer for shipping charges to the extent of the percent of the total return that are found by Seller\r\n                    to be defective as specified herein. Reimbursement will be in the form of a credit adjustment to Buyer's account unless\r\n                    otherwise agreed upon.\r\n\r\n                    <br />\r\n                    <br />\r\n                    F. In no event shall Seller be liable for any defective products if examination discloses that the defective condition of such\r\n                    products was caused by misuse, abuse or improper installation, application, maintenance or repair assembly by other than\r\n                    Seller, alteration, accident or negligence in use, storage, transportation or handling outside of specified environmental\r\n                    conditions.\r\n\r\n                    <br />\r\n                    <br />\r\n                    G. Seller assumes no risk or liability for the suitability or unsuitability or results of its products, used in combination with\r\n                    any electrical or electronic components, circuits, systems, assemblies, or any other material substances, or environments.\r\n                    <br />\r\n                    <br />\r\n\r\n                    H. Any returned products electrically or mechanically destroyed by Buyer or third parties will not be covered under this\r\n                    warranty, and will not be returned to Buyer, but will be scrapped by Seller.\r\n\r\n                    <br />\r\n                    <br />\r\n                    I. This warranty shall exist for a period of twelve (12) months after the date of shipment from the Seller and is considered\r\n                    null and void if components or subassemblies other than those supplied or approved by Seller are used in the assembly of\r\n                    Seller’s products, or if Sellers product is modified in any way without written authorization of Seller.\r\n                    <br />\r\n                    <br />\r\n\r\n                    J. Developmental products of Seller are warranted to be free from defects in materials and workmanship and to meet the\r\n                    applicable specifications only at the time of receipt of Buyer and for no longer period of time. All accepted deliveries are\r\n                    deemed to be free from defects as of the time of delivery.\r\n                    <br />\r\n                    <br />\r\n\r\n                    K. Product sold but not manufactured by the Seller will be warranted as to defects in material and workmanship consistent\r\n                    with the warranty policy of the original manufacturer of the product. The Seller's only obligation shall be to assign Buyer, to\r\n                    the extent possible, whatever warranty the Seller receives from said manufacturer. In no event shall the Seller be liable for\r\n                    loss, damage or expense directly or indirectly arising from the use of the units or from any other cause, except as expressly\r\n                    stated in this warranty. THERE ARE NO WARRANTIES, WHICH EXTEND BEYOND THE DESCRIPTION ON THE FACE HEREOF.\r\n                    THE SELLER DISCLAIMS ANY IMPLIED WARRANTY OF MERCHANTABILITY OF THE GOODS OR OF THE FITNESS OF THE\r\n                    GOODS FOR ANY INTENDED PURPOSE. The Seller is not liable for, and the Buyer waives any right of action it has or may\r\n                    have against the Seller for any consequential or special damages arising out of any breach of warranty and for any damages\r\n                    the Buyer may claim for damage to any property or injury or death to any person arising out of its purchase or the use,\r\n                    operation, or maintenance of the product. The Seller will not be liable for any labor subcontracted or performed by the\r\n                    Buyer for preparation of item under warranty for return to the Seller’s factory or for preparation work for field repair or\r\n                    replacement. Invoicing of the Seller for labor either performed or subcontracted by the Buyer will not be considered as a\r\n                    liability by the Seller. The Seller's obligations under this warranty are conditioned upon timely receipt of all payments in\r\n                    strict accordance with payment terms, time being of the essence in this regard. During the time while the Seller has not\r\n                    received any amount overdue, the Seller shall have no obligation under this warranty. The expiration date of the warranty\r\n                    shall not be extended upon payment of the overdue amount.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Product Discontinuance\r\n                    Seller will give as much notification as possible in the event of discontinuing product, however, Seller reserves the right to\r\n                    discontinue production of any product at any time without notice except for that quantity of product for which Seller has\r\n                    received and acknowledged a Purchase Order from Buyer and has scheduled such product for shipment within six (6)\r\n                    months of the date of such acknowledgement.\r\n\r\n                    <br />\r\n                    <br />\r\n                    Cancellation of Buyer\r\n                    Orders for standard product may be cancelled on sixty (60) days prior to the scheduled ship date by written notice to Seller.\r\n                    Orders for products which are not listed in Seller’s current catalogue (including but not limited to, semi-custom application\r\n                    specific products, or other semi-custom product(s) which have special markings, or which have received special testing or\r\n                    which are specially programmed for Buyer) may not be cancelled or returned except under the provisions of a prior written\r\n                    agreement between Seller and Buyer which sets forth the cancellation charges to be paid by Buyer in the vent of such\r\n                    cancellation. If such an agreement is not in place, the charges shall be 100%. Any money paid in advance is refundable at\r\n                    DSPM discretion.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Property Rights\r\n                    The design, development or manufacture by Seller of a product for Buyer shall not be deemed to produce a work made for\r\n                    hire and shall not give to Buyer any copyright interest in the product or any interest in all or any portion of the mask works\r\n                    relating to the product. All such rights remain with the property of the Seller including models, drawings, composites,\r\n                    patterns, dies molds, masks and any other tools made for or obtained for furnishing the products hereunder.\r\n                    <br />\r\n                    <br />\r\n\r\n                    Special, Incidental, Consequential, or Indirect Damages\r\n                    INDEPENDENTLY OF ANY OTHER LIMITATION HEREOF AND REGARDLESS OF WHETHER THE PURPOSE OF SUCH LIMITATION\r\n                    IS SERVED, IT IS AGREED THAT IN NO EVENT SHALL SELLER BE LIABLE FOR SPECIAL, INCIDENTAL, CONSEQUENTIAL OR\r\n                    INDIRECT DAMAGES.\r\n\r\n                    <br />\r\n                    <br />\r\n                    Limitation of Actions\r\n                    No action against Seller for breach hereof shall be commenced more than one (1) year after the accrual of the cause of\r\n                    action.\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { display } from 'html2canvas/dist/types/css/property-descriptors/display';\r\n\r\nconst useStyles = makeStyles({\r\n    divider: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginBottom: \"15px\",\r\n    },\r\n    logo: {\r\n        width: '40%',\r\n    },\r\n    column: {\r\n        width: '48%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    topTableContainer: {\r\n        width: '55%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    topTable: {\r\n        width: '100%',\r\n        border: '1px solid black'\r\n    },\r\n    topTableHead: {\r\n        padding: '10px 0px',\r\n        width: '100%',\r\n        backgroundColor: 'lightgray',\r\n        border: '1px solid black'\r\n    },\r\n    th: {\r\n        backgroundColor: 'lightgray',\r\n        border: '1px solid black',\r\n    },\r\n    td: {\r\n        border: '1px solid black',\r\n        padding: '5px'\r\n    },\r\n    onePage: {\r\n        width: \"100%\",\r\n        minHeight: \"1250px\",\r\n        marginBottom: \"40px\",\r\n    },\r\n    exact: {\r\n        width: \"100%\",\r\n        height: \"1200px\",\r\n        marginBottom: \"40px\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n    },\r\n    grid: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr\",\r\n        gridTemplateRows: \"1fr 1fr 1fr 1fr\",\r\n        width: \"100%\",\r\n        height: \"320px\",\r\n        marginTop: \"140%\",\r\n    },\r\n    right: {\r\n        flex: 1,\r\n        backgroundColor: \"#4f81bc\",\r\n        height: \"100%\",\r\n        border: \"1px solid black\",\r\n        borderLeft: \"none\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"30px\",\r\n        color: \"white\",\r\n    },\r\n});\r\n\r\n\r\n\r\nexport default function SOCus({ data }: { data: any }) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <div className={classes.divider}>\r\n                <div className={classes.logo}>LOGO</div>\r\n                <div className={classes.topTableContainer}>\r\n                    <th className={classes.topTableHead}>ACCOUNTING SALES COPY</th>\r\n                    <table className={classes.topTable}>\r\n                        <tr>\r\n                            <td>Project Name</td>\r\n                            <td>Alia Inverter</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Customer PO#</td>\r\n                            <td>S6650371-PHASE 5</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Sales Order # </td>\r\n                            <td>060921-1</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>PO Received Date</td>\r\n                            <td>06-09-21</td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div className={classes.divider}>\r\n                <div className={classes.column}>\r\n                    <table style={{ minHeight: '100px' }}>\r\n                        <th className={classes.th} style={{ width: '25%', padding: '20px 15px' }}>\r\n                            Bill to\r\n                        </th>\r\n                        <td className={classes.td}>\r\n                            OneSource Distributors, LLC 5045 Convey St\r\n                            San Diego, CA 92111\r\n                        </td>\r\n                    </table>\r\n                    <br />\r\n                    <table>\r\n                        <tr>\r\n                            <td className={classes.td} style={{ width: '50%' }}>Material Cost</td>\r\n                            <td className={classes.td}> </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td className={classes.td} style={{ width: '50%' }}>Actual Ship Date</td>\r\n                            <td className={classes.td}> </td>\r\n                        </tr>\r\n                    </table>\r\n                    <br />\r\n                    <table>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}> PO Received By</th>\r\n                            <td className={classes.td}> Rose Corona</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}>SO Issued Date</th>\r\n                            <td className={classes.td}> 06-09-21 </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}>SO Issued By</th>\r\n                            <td className={classes.td}>‌ </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}>SO Processed By</th>\r\n                            <td className={classes.td}> ‌</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}> Sent to Shipping</th>\r\n                            <td className={classes.td}> ‌</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}>\r\n                                Approval - Sales\r\n                            </th>\r\n                            <td className={classes.td}>‌ </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}>\r\n                                Approval - Accounting\r\n                            </th>\r\n                            <td className={classes.td}>‌ </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}>\r\n                                Approval - Engineering\r\n                            </th>\r\n                            <td className={classes.td}>‌ </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}>\r\n                                Approval - Manufacturing\r\n                            </th>\r\n                            <td className={classes.td}>‌ </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                <div className={classes.column}>\r\n                    <table style={{ minHeight: '100px' }}>\r\n                        <th className={classes.th} style={{ width: '25%', padding: '20px 15px' }}>\r\n                            Ship to\r\n                        </th>\r\n                        <td className={classes.td}>\r\n                            BR36 ONESOURCE\r\n                            5045 CONVOY STREET\r\n                            San Diego, CA 92111\r\n                        </td>\r\n                    </table>\r\n                    <br />\r\n                    <div style={{ height: '65px' }}></div>\r\n                    <br />\r\n                    <table>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}>Purchase Order Total</th>\r\n                            <td className={classes.td}>  $4,492.00</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}>Sales Tax</th>\r\n                            <td className={classes.td}>$0.00 </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}>Shipping & Handling</th>\r\n                            <td className={classes.td}>$450.00 </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}>Product Cost</th>\r\n                            <td className={classes.td}>$4,042.00 </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}>Reg. Commission Rate</th>\r\n                            <td className={classes.td}>   % 10</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}> Total Commission Amt</th>\r\n                            <td className={classes.td}> $404.20 </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}>  Commission Name</th>\r\n                            <td className={classes.td} style={{ fontSize: 'small', padding: '0px' }}> WESTERN Lighting and Controls </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}>Warranty</th>\r\n                            <td className={classes.td}>‌ </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th className={classes.th} style={{ width: '50%' }}>Total Order</th>\r\n                            <td className={classes.td}>$4,492.00 </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            {/* for each line item */}\r\n            <table style={{ width: '100%' }}>\r\n                <tr>\r\n                    <th> line item</th>\r\n                    <th>qty</th>\r\n                    <th> model number <br /> part number</th>\r\n                    <th style={{ width: '40%' }}>Description</th>\r\n                    <th>unit price</th>\r\n                    <th>extended price</th>\r\n                </tr>\r\n                <tr>\r\n                    <td>1</td>\r\n                    <td>1</td>\r\n                    <td>DMINIA-2KW-120-120-90</td>\r\n                    <td>\r\n                        DEFENDER MINI 2KW 120 volts input 120\r\n                        volts output, 1-phase, 60 HZ\r\n                    </td>\r\n                    <td>$3,152.00</td>\r\n                    <td style={{}}>$3,152.00</td>\r\n                </tr>\r\n                <tr>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td>\r\n                        <br />\r\n                        * ONLINE Emergency Lighting Inverter<br />\r\n                        * 90 minutes Battery Back up<br />\r\n                        * Input/Output Terminal Blocks<br />\r\n                        * Input/Output Transient Noise Filters<br />\r\n                        * Input Main Circuit Breaker<br />\r\n                        * Output Main Circuit Breaker<br />\r\n                        * Internal Bypass Switch<br />\r\n                        * LCD Monitoring / Control / Diagnostic /<br />\r\n                        Communication Subsystem with RS232<br />\r\n                        * Phone Assisted Startup, 8am to 5pm Monday<br />\r\n                        to Friday, normal business hours PST<br />\r\n                        * Enclosure - (1) each Inverter Cabinet: 24 W X<br />\r\n                        26 H X 16 D<br />\r\n                        * Battery jumper cables included.</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                </tr>\r\n            </table>\r\n            <br />\r\n            <br />\r\n            <h1>\r\n                Special Instruction\r\n            </h1>\r\n            <h3>\r\n                Shipping Instruction\r\n            </h3>\r\n            <div style={{ marginBottom: '100px' }}>\r\n                PLEASE MARK ALL PACKAGES WITH JOB NAME AND TYPE\r\n                DELIVERY DOCK AROUND BACK OF BUILDING\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState, useRef, Fragment } from \"react\";\r\nimport {\r\n    Typography,\r\n    Box,\r\n    FormControl,\r\n    FormLabel,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    RadioGroup,\r\n    Radio,\r\n    LinearProgress,\r\n    Paper,\r\n    Tabs,\r\n    Tab,\r\n} from \"@material-ui/core\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\n\r\nimport TextField from \"../../../app/TextField\";\r\nimport { FieldSelect, ArraySelect } from \"../../../app/Inputs\";\r\nimport Button from \"../../../app/Button\";\r\n\r\nimport { getAllEmployees } from \"../../../api/employee\";\r\nimport { getAllModelContact, getContacts } from \"../../../api/contact\";\r\nimport { getCustomers } from \"../../../api/customer\";\r\nimport { getAddresses } from \"../../../api/address\";\r\nimport { getPhones } from \"../../../api/phone\";\r\nimport { getEmails } from \"../../../api/emailAddress\";\r\nimport { getProjects } from \"../../../api/project\";\r\nimport { getQuoteById, getQuotes } from \"../../../api/quote\";\r\nimport { getTickets } from \"../../../api/ticket\";\r\nimport { ISO, ISOComplete } from \"../../../api/so\";\r\nimport { createAModelDocument } from \"../../../api/document\";\r\n\r\nimport { exportPdf } from \"../../../logic/pdf\";\r\nimport { formatTimestampToDate } from \"../../../logic/date\";\r\n\r\nimport SOCus from \"../../../PDFTemplates/SOCus\";\r\nimport SORep from \"../../../PDFTemplates/SORep\";\r\nimport SOAcc from \"../../../PDFTemplates/SOAcc\";\r\nimport { getPO } from \"../../../api/po\";\r\n\r\nexport const GeneralForm = ({\r\n    handleChange,\r\n    handleBlur,\r\n    onChangeInit,\r\n    values,\r\n}: {\r\n    values: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n    onChangeInit: (data: any) => void;\r\n}) => {\r\n    const [selectedQuote, setSelectedQuote] = useState<string>();\r\n\r\n    useEffect(() => {\r\n        if (selectedQuote) {\r\n            getQuoteById(selectedQuote)\r\n                .then((d) => {\r\n                    const {\r\n                        freightTerms,\r\n                        paymentTerms,\r\n                        carrier,\r\n                        issuedBy,\r\n                        status,\r\n                        expodate,\r\n\r\n                        estShipDate,\r\n                        actShipDate,\r\n                        shippingAddress,\r\n                        shippingContact,\r\n                        shippingPhone,\r\n                        shippingEmail,\r\n                        shippingEntitiy,\r\n\r\n                        billingContact,\r\n                        billingPhone,\r\n                        billingEmail,\r\n                        billingAddress,\r\n                        billingEntitiy,\r\n\r\n                        requester,\r\n                        // ClientId,\r\n                        ProjectId,\r\n                    } = d;\r\n                    onChangeInit({\r\n                        ...values,\r\n                        freightTerms,\r\n                        paymentTerms,\r\n                        carrier,\r\n                        issuedBy,\r\n                        status,\r\n                        expodate,\r\n\r\n                        estShipDate,\r\n                        actShipDate,\r\n                        shippingAddress,\r\n                        shippingContact,\r\n                        shippingPhone,\r\n                        shippingEmail,\r\n                        shippingEntitiy,\r\n\r\n                        billingContact,\r\n                        billingPhone,\r\n                        billingEmail,\r\n                        billingAddress,\r\n                        billingEntitiy,\r\n\r\n                        requester,\r\n                        ProjectId,\r\n                    });\r\n                })\r\n                .catch((e) => console.log(e));\r\n        }\r\n    }, [onChangeInit, selectedQuote]);\r\n\r\n    return (\r\n        <Fragment>\r\n            <Box display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridColumnGap={10} gridRowGap={10}>\r\n                <TextField\r\n                    value={values.number}\r\n                    name=\"number\"\r\n                    label=\"SO ID\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <FieldSelect\r\n                    value={typeof values.QuoteId === \"string\" ? values.QuoteId : values.QuoteId?.id}\r\n                    name=\"QuoteId\"\r\n                    label=\"Quote ID\"\r\n                    request={getQuotes}\r\n                    getOptionList={(resp) => resp.result}\r\n                    itemTitleField=\"number\"\r\n                    itemValueField=\"id\"\r\n                    onChange={(e) => {\r\n                        setSelectedQuote(e.target.value as string);\r\n                        handleChange(e);\r\n                    }}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <TextField\r\n                    value={values.invoice}\r\n                    name=\"invoice\"\r\n                    label=\"Invoice ID\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <TextField value={formatTimestampToDate(values.createdAt)} name=\"createdAt\" label=\"SO Date\" disabled />\r\n                <ArraySelect\r\n                    value={values.warranty}\r\n                    name=\"warranty\"\r\n                    label=\"Warranty\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    items={[]}\r\n                />\r\n                <FieldSelect\r\n                    value={typeof values.ProjectId === \"string\" ? values.ProjectId : values.ProjectId?.id}\r\n                    request={getProjects}\r\n                    itemTitleField=\"name\"\r\n                    itemValueField=\"id\"\r\n                    keyField=\"id\"\r\n                    name=\"ProjectId\"\r\n                    label=\"Project Name\"\r\n                    onChange={handleChange}\r\n                />\r\n\r\n                <TextField value={values.location} name=\"location\" label=\"Location\" onChange={handleChange} />\r\n                <TextField value={values.leadTime} name=\"leadTime\" label=\"Lead Time\" onChange={handleChange} />\r\n                <TextField\r\n                    value={values.acknowledgeDate}\r\n                    name=\"acknowledgeDate\"\r\n                    label=\"Date acknowledged \"\r\n                    onChange={handleChange}\r\n                    disabled\r\n                />\r\n                <TextField value={values.csa} name=\"csa\" label=\"CSA\" onChange={handleChange} />\r\n            </Box>\r\n            <Paper\r\n                style={{\r\n                    margin: \"0.5em 0\",\r\n                    padding: \"0 0.5em 0 1em\",\r\n                    backgroundColor: \"#eee\",\r\n                    gridColumnEnd: \"span 4\",\r\n                }}\r\n            >\r\n                <FormControlLabel\r\n                    name=\"callADayBeforeDelivery\"\r\n                    control={<Checkbox checked={Boolean(values.callADayBeforeDelivery)} />}\r\n                    label=\"Call 24 hours before delivery\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n            </Paper>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport const EntitiesForm = ({\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    setFieldValue,\r\n}: {\r\n    values: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n    setFieldValue: any;\r\n}) => {\r\n    return (\r\n        <Box my={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr 1fr 1fr\" gridColumnGap={10}>\r\n            <Box my={1} display=\"grid\" gridTemplateColumns=\" 1fr \" gridRowGap={10}>\r\n                <FieldSelect\r\n                    value={typeof values.repOrAgency === \"string\" ? values.repOrAgency : values.repOrAgency?.id}\r\n                    request={getCustomers}\r\n                    getOptionList={(resp) => resp.result}\r\n                    itemTitleField=\"name\"\r\n                    itemValueField=\"id\"\r\n                    name=\"repOrAgency\"\r\n                    label=\"rep / Agency\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <TextField value={values.repOrAgency?.address} label=\"Address\" disabled />\r\n                <TextField\r\n                    value={values.repOrAgency?.city}\r\n                    name=\"city\"\r\n                    label=\"City\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    value={values.repOrAgency?.state}\r\n                    name=\"state\"\r\n                    label=\"State\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    value={values.repOrAgency?.zipcode}\r\n                    name=\"zipCode\"\r\n                    label=\"Zip Code\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n            </Box>\r\n            <Box my={1} display=\"grid\" gridTemplateColumns=\" 1fr \" gridRowGap={10}>\r\n                <TextField\r\n                    value={values.requesterName}\r\n                    name=\"requesterName\"\r\n                    label=\"requesterName\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <TextField\r\n                    value={values.requesterMail}\r\n                    name=\"requesterMail\"\r\n                    label=\"requesterMail\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <TextField\r\n                    value={values.requesterPhone}\r\n                    name=\"requesterPhone\"\r\n                    label=\"requesterPhone\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <TextField style={{ opacity: 0 }} />\r\n                <TextField style={{ opacity: 0 }} />\r\n            </Box>\r\n            <Box my={1} display=\"grid\" gridTemplateColumns=\" 1fr \" gridRowGap={10}>\r\n                {/* <TextField\r\n                    value={values.client}\r\n                    name=\"client\"\r\n                    label=\"Client\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                /> */}\r\n                <FieldSelect\r\n                    value={typeof values.client === \"string\" ? values.client : values.client?.id}\r\n                    request={getCustomers}\r\n                    itemTitleField=\"name\"\r\n                    itemValueField=\"id\"\r\n                    name=\"client\"\r\n                    label=\"Client\"\r\n                    onChange={handleChange}\r\n                />\r\n                <TextField\r\n                    value={values.contact?.lastName}\r\n                    name=\"contactName\"\r\n                    label=\"Contact Name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    value={values.contact?.email}\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    value={values.contact?.lastName}\r\n                    name=\"phone\"\r\n                    label=\"Phone\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    value={values.unitPricingLevel}\r\n                    name=\"Unit Pricing Level\"\r\n                    label=\"Unit Pricing Level\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n            </Box>\r\n            <Box my={1} display=\"grid\" gridTemplateColumns=\"1fr\" gridGap={10}>\r\n                <FieldSelect\r\n                    label=\"24 Hour Contact\"\r\n                    name=\"twentyFourContact\"\r\n                    request={\r\n                        typeof values.client === \"string\"\r\n                            ? () => getAllModelContact(\"customer\", values.client)\r\n                            : () => getAllModelContact(\"customer\", values.client?.id)\r\n                    }\r\n                    itemTitleField=\"lastName\"\r\n                    itemValueField=\"id\"\r\n                    value={\r\n                        typeof values.twentyFourContact === \"string\"\r\n                            ? values.twentyFourContact\r\n                            : values.twentyFourContact?.id\r\n                    }\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled={!values.client}\r\n                />\r\n                <FieldSelect\r\n                    label=\"Phone\"\r\n                    name=\"twentyFourContact\"\r\n                    request={\r\n                        typeof values.client === \"string\"\r\n                            ? () => getAllModelContact(\"customer\", values.client)\r\n                            : () => getAllModelContact(\"customer\", values.client?.id)\r\n                    }\r\n                    itemTitleField=\"phone\"\r\n                    itemValueField=\"id\"\r\n                    value={\r\n                        typeof values.twentyFourContact === \"string\"\r\n                            ? values.twentyFourContact\r\n                            : values.twentyFourContact?.id\r\n                    }\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n                <FieldSelect\r\n                    label=\"Email\"\r\n                    name=\"twentyFourContact\"\r\n                    request={\r\n                        typeof values.client === \"string\"\r\n                            ? () => getAllModelContact(\"customer\", values.client)\r\n                            : () => getAllModelContact(\"customer\", values.client?.id)\r\n                    }\r\n                    itemTitleField=\"email\"\r\n                    itemValueField=\"id\"\r\n                    value={\r\n                        typeof values.twentyFourContact === \"string\"\r\n                            ? values.twentyFourContact\r\n                            : values.twentyFourContact?.id\r\n                    }\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n\r\n                <TextField style={{ opacity: 0 }} />\r\n                <TextField style={{ opacity: 0 }} />\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const AddressesForm = ({\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    setFieldValue,\r\n}: {\r\n    values: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n    setFieldValue: any;\r\n}) => {\r\n    const [activeTab, setActiveTab] = useState(0);\r\n\r\n    return (\r\n        <>\r\n            <Tabs\r\n                textColor=\"primary\"\r\n                value={activeTab}\r\n                onChange={(e, nv) => setActiveTab(nv)}\r\n                variant=\"scrollable\"\r\n                style={{ maxWidth: 600 }}\r\n            >\r\n                <Tab label=\"Billing Address\" />\r\n                <Tab label=\"Shipping Address\" />\r\n            </Tabs>\r\n            {activeTab === 0 && (\r\n                <Box my={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridGap={10} gridRowGap={10}>\r\n                    <TextField\r\n                        value={values.billingAddressCompany}\r\n                        name=\"billingAddressCompany\"\r\n                        label=\"Company\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.billingAddressAttn}\r\n                        name=\"billingAddressAttn\"\r\n                        label=\"Attn\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n\r\n                    <TextField\r\n                        value={values.billingAddressAddress}\r\n                        name=\"billingAddressAddress\"\r\n                        label=\"Billing Address\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.billingAddressCity}\r\n                        name=\"billingAddressCity\"\r\n                        label=\"City\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.billingAddressState}\r\n                        name=\"billingAddressState\"\r\n                        label=\"State\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.billingAddressZipCode}\r\n                        name=\"billingAddressZipCode\"\r\n                        label=\"Zip Code\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.billingAddressCountry}\r\n                        name=\"billingAddressCountry\"\r\n                        label=\"Country\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.billingAddressPhone}\r\n                        name=\"billingAddressPhone\"\r\n                        label=\"Billing Phone\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.billingAddressEmail}\r\n                        name=\"billingAddressEmail\"\r\n                        label=\"Billing Email\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        style={{ gridColumnEnd: \"span 2\" }}\r\n                    />\r\n                </Box>\r\n            )}\r\n            {activeTab === 1 && (\r\n                <Box\r\n                    my={1}\r\n                    display=\"grid\"\r\n                    gridTemplateColumns=\"1fr 1fr\"\r\n                    gridGap={10}\r\n                    gridRowGap={10}\r\n                    gridColumnGap={10}\r\n                >\r\n                    <TextField\r\n                        value={values.shippingAddressCompany}\r\n                        name=\"shippingAddressCompany\"\r\n                        label=\"Company\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressAttn}\r\n                        name=\"shippingAddressAttn\"\r\n                        label=\"Attn\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressAddress}\r\n                        label=\"Shipping Address\"\r\n                        name=\"shippingAddressAddress\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressCity}\r\n                        name=\"shippingAddressCity\"\r\n                        label=\"City\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressState}\r\n                        name=\"shippingAddressState\"\r\n                        label=\"State\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressZipCode}\r\n                        name=\"shippingAddressZipCode\"\r\n                        label=\"Zip Code\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressCountry}\r\n                        name=\"shippingAddressCountry\"\r\n                        label=\"Country\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressPhone}\r\n                        name=\"shippingAddressPhone\"\r\n                        label=\"Shipping Phone\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressEmail}\r\n                        name=\"shippingAddressEmail\"\r\n                        label=\"Shipping Email\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        style={{ gridColumnEnd: \"span 2\" }}\r\n                    />\r\n                </Box>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport const AccountingForm = ({\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    setFieldValue,\r\n}: {\r\n    values: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n    setFieldValue: any;\r\n}) => {\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    return (\r\n        <Fragment>\r\n            <Box mt={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridColumnGap={10} gridRowGap={10}>\r\n                <TextField\r\n                    value={values.requestApproval}\r\n                    name=\"requestApproval\"\r\n                    label=\" Request Approval\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <TextField\r\n                    value={formatTimestampToDate(values.createdAt)}\r\n                    name=\"toBeInvoicedDate\"\r\n                    label=\"To be Invoiced Date\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n            </Box>\r\n            <Tabs\r\n                textColor=\"primary\"\r\n                value={activeTab}\r\n                onChange={(e, nv) => setActiveTab(nv)}\r\n                variant=\"scrollable\"\r\n                style={{ maxWidth: 600 }}\r\n            >\r\n                <Tab label=\"Commissions\" />\r\n                <Tab label=\"Cost\" />\r\n            </Tabs>\r\n            {activeTab === 0 && (\r\n                <Box my={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridRowGap={10} gridGap={10}>\r\n                    <TextField\r\n                        style={{ gridColumnEnd: \"span 2\" }}\r\n                        value={values.commisionBaseAmt}\r\n                        name=\"commisionBaseAmt\"\r\n                        label=\"Commission Base Amt\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.regularCommision}\r\n                        name=\"regularCommision\"\r\n                        label=\"Regular Commission %\"\r\n                        type=\"number\"\r\n                        placeholder=\"0.00%\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.regularCommision}\r\n                        name=\"regularCommision\"\r\n                        label=\"Regular Commission $\"\r\n                        placeholder=\"0.00$\"\r\n                        disabled\r\n                    />\r\n                    <TextField\r\n                        value={values.overageCommision}\r\n                        name=\"overageCommision\"\r\n                        label=\"Overage Commission\"\r\n                        type=\"number\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.totalCommision}\r\n                        name=\"totalCommision\"\r\n                        label=\"Total Commission\"\r\n                        type=\"number\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                </Box>\r\n            )}\r\n            {activeTab === 1 && (\r\n                <Box my={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridRowGap={10} gridGap={10}>\r\n                    <TextField\r\n                        style={{ gridColumnEnd: \"span 2\" }}\r\n                        value={values.soCost}\r\n                        name=\"soCost\"\r\n                        label=\"SO Cost\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.partsCost}\r\n                        name=\"partsCost\"\r\n                        label=\"Parts Cost\"\r\n                        type=\"number\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.labor}\r\n                        name=\"labor\"\r\n                        label=\"Labor\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.margin}\r\n                        name=\"margin\"\r\n                        label=\"Margin\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={(values.margin / values.soCost) * 100}\r\n                        name=\"marginPercent\"\r\n                        label=\"Margin %\"\r\n                        disabled\r\n                    />\r\n                </Box>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport const ApprovalForm = ({\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    setFieldValue,\r\n}: {\r\n    values: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n    setFieldValue: any;\r\n}) => {\r\n    return (\r\n        <Fragment>\r\n            <Paper\r\n                style={{\r\n                    margin: \"1em 0\",\r\n                    padding: \"0 0.5em 0 1em\",\r\n                    backgroundColor: \"#eee\",\r\n                    gridColumnEnd: \"span 4\",\r\n                    display: \"grid\",\r\n                    gridTemplateColumns: \"1fr 1fr\",\r\n                }}\r\n            >\r\n                <FormControlLabel\r\n                    name=\"releaseToProduction\"\r\n                    control={<Checkbox checked={Boolean(values.releaseToProduction)} />}\r\n                    label=\"Release to Production\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled={Boolean(values.releaseToProduction)}\r\n                />\r\n                <FormControlLabel\r\n                    name=\"expedite\"\r\n                    control={<Checkbox checked={Boolean(values.expedite)} />}\r\n                    label=\"Expedite\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n            </Paper>\r\n            <Box mt={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridColumnGap={10} gridRowGap={10}>\r\n                <FieldSelect\r\n                    itemValueField=\"id\"\r\n                    itemTitleField=\"number\"\r\n                    request={getPO}\r\n                    name=\"POId\"\r\n                    value={typeof values.POId === \"string\" ? values.POId : values.POId?.id}\r\n                    onBlur={handleBlur}\r\n                    onChange={handleChange}\r\n                    label=\"Customer PO\"\r\n                />\r\n                <TextField\r\n                    value={formatTimestampToDate(values.POId?.createdAt)}\r\n                    name=\"POReceivedDate\"\r\n                    label=\"PO Received Date\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n                <FieldSelect\r\n                    value={typeof values.issuedBy === \"string\" ? values.issuedBy : values.issuedBy?.id}\r\n                    name=\"issuedBy\"\r\n                    label=\"Issued By\"\r\n                    request={getAllEmployees}\r\n                    itemTitleField=\"username\"\r\n                    itemValueField=\"id\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <TextField\r\n                    value={values.releaseDate ? formatTimestampToDate(values.releaseDate) : \"\"}\r\n                    name=\"releaseDate\"\r\n                    label=\"Release Date\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n                <ArraySelect\r\n                    value={values.warranty}\r\n                    name=\"warranty\"\r\n                    label=\"Warranty\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    items={[]}\r\n                />\r\n                <ArraySelect\r\n                    value={values.status}\r\n                    name=\"status\"\r\n                    label=\"SO Status\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    items={[\"New\", \"Pending\", \"Fulfilled\", \"Shipped\"]}\r\n                />\r\n            </Box>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport const ShippingForm = ({\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    setFieldValue,\r\n}: {\r\n    values: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n    setFieldValue: any;\r\n}) => {\r\n    return (\r\n        <Box mt={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridColumnGap={10} gridRowGap={10}>\r\n            <DateTimePicker\r\n                style={{ gridColumnEnd: \"span 2\" }}\r\n                size=\"small\"\r\n                value={values.estimatedShipDate}\r\n                name=\"estimatedShipDate\"\r\n                label=\"Estimated ship date\"\r\n                onChange={(date) => setFieldValue(\"estimatedShipDate\", date)}\r\n                onBlur={handleBlur}\r\n            />\r\n            <DateTimePicker\r\n                style={{ gridColumnEnd: \"span 2\" }}\r\n                size=\"small\"\r\n                value={values.orgShipDate}\r\n                name=\"orgShipDate\"\r\n                label=\"Original ship date\"\r\n                onChange={(date) => setFieldValue(\"orgShipDate\", date)}\r\n                onBlur={handleBlur}\r\n            />\r\n            <DateTimePicker\r\n                style={{ gridColumnEnd: \"span 2\" }}\r\n                size=\"small\"\r\n                value={values.actualShipDate}\r\n                name=\"actualShipDate\"\r\n                label=\"Actual ship date\"\r\n                onChange={(date) => setFieldValue(\"actualShipDate\", date)}\r\n                onBlur={handleBlur}\r\n            />\r\n\r\n            {/* \r\n             <FieldSelect\r\n                value={values.shippingContact ? values.shippingContact : \"\"}\r\n                request={getContacts}\r\n                itemTitleField=\"lastName\"\r\n                itemValueField=\"id\"\r\n                keyField=\"id\"\r\n                name=\"shippingContact\"\r\n                label=\"Shipping Contact\"\r\n                onChange={handleChange}\r\n            />\r\n            <FieldSelect\r\n                value={values.shippingAddress ? values.shippingAddress : \"\"}\r\n                name=\"shippingAddress\"\r\n                request={getAddresses}\r\n                itemTitleField=\"address\"\r\n                itemValueField=\"id\"\r\n                keyField=\"id\"\r\n                label=\"Shipping Address\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n           \r\n            <FieldSelect\r\n                value={values.shippingEmail ? values.shippingEmail : \"\"}\r\n                request={getEmails}\r\n                itemTitleField=\"email\"\r\n                itemValueField=\"id\"\r\n                keyField=\"id\"\r\n                name=\"shippingEmail\"\r\n                label=\"Shipping Email\"\r\n                onChange={handleChange}\r\n            />\r\n            <FieldSelect\r\n                value={values.shippingPhone ? values.shippingPhone : \"\"}\r\n                request={getPhones}\r\n                itemTitleField=\"phone\"\r\n                itemValueField=\"id\"\r\n                keyField=\"id\"\r\n                name=\"shippingPhone\"\r\n                label=\"Shipping Phone\"\r\n                onChange={handleChange}\r\n            />\r\n            <FormControl style={{ gridColumnEnd: \"span 2\" }}>\r\n                <FormLabel>Shipping Client or Agency</FormLabel>\r\n                <RadioGroup\r\n                    style={{ flexDirection: \"row\" }}\r\n                    name=\"shippingEntitiy\"\r\n                    value={String(values.shippingEntitiy)}\r\n                    onChange={handleChange}\r\n                >\r\n                    <FormControlLabel control={<Radio />} label=\"Client\" value=\"client\" />\r\n                    <FormControlLabel control={<Radio />} label=\"Agency\" value=\"agency\" />\r\n                </RadioGroup>\r\n            </FormControl> */}\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const BillingTab = ({\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n}: {\r\n    values: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n}) => {\r\n    return (\r\n        <Box display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridRowGap={10}>\r\n            <FieldSelect\r\n                value={values.billingAddress ? values.billingAddress : \"\"}\r\n                request={getAddresses}\r\n                itemTitleField=\"address\"\r\n                itemValueField=\"id\"\r\n                keyField=\"id\"\r\n                name=\"billingAddress\"\r\n                label=\"Billing Address\"\r\n                onChange={handleChange}\r\n            />\r\n            <FieldSelect\r\n                value={values.billingContact ? values.billingContact : \"\"}\r\n                request={getContacts}\r\n                itemTitleField=\"lastName\"\r\n                itemValueField=\"id\"\r\n                keyField=\"id\"\r\n                name=\"billingContact\"\r\n                label=\"Billing Contact\"\r\n                onChange={handleChange}\r\n            />\r\n            <FieldSelect\r\n                value={values.billingPhone ? values.billingPhone : \"\"}\r\n                request={getPhones}\r\n                itemTitleField=\"phone\"\r\n                itemValueField=\"id\"\r\n                keyField=\"id\"\r\n                name=\"billingPhone\"\r\n                label=\"Billing Phone\"\r\n                onChange={handleChange}\r\n            />\r\n            <FieldSelect\r\n                value={values.billingEmail ? values.billingEmail : \"\"}\r\n                request={getEmails}\r\n                itemTitleField=\"email\"\r\n                itemValueField=\"id\"\r\n                keyField=\"id\"\r\n                name=\"billingEmail\"\r\n                label=\"Billing Email\"\r\n                onChange={handleChange}\r\n            />\r\n            <FormControl>\r\n                <FormLabel>Billing Client or Agency</FormLabel>\r\n                <RadioGroup\r\n                    name=\"billingEntitiy\"\r\n                    onChange={handleChange}\r\n                    value={values.billingEntitiy}\r\n                    style={{ flexDirection: \"row\" }}\r\n                >\r\n                    <FormControlLabel control={<Radio />} label=\"Client\" value=\"client\" />\r\n                    <FormControlLabel control={<Radio />} label=\"Agency\" value=\"agency\" />\r\n                </RadioGroup>\r\n            </FormControl>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const TermsTab = ({\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n}: {\r\n    values: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n}) => {\r\n    return (\r\n        <Box display=\"grid\" gridTemplateColumns=\"1fr\" gridRowGap={10}>\r\n            <FieldSelect\r\n                request={getCustomers}\r\n                itemTitleField=\"name\"\r\n                itemValueField=\"id\"\r\n                value={values.repOrAgency}\r\n                name=\"repOrAgency\"\r\n                label=\"Rep / Agency\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n            <FieldSelect\r\n                value={values.requester ? values.requester : \"\"}\r\n                request={getAllEmployees}\r\n                getOptionList={(resp) => resp.result}\r\n                itemTitleField=\"username\"\r\n                itemValueField=\"id\"\r\n                keyField=\"id\"\r\n                name=\"requester\"\r\n                label=\"Requester\"\r\n                onChange={handleChange}\r\n            />\r\n            <FieldSelect\r\n                value={values.client ? values.client : \"\"}\r\n                request={getCustomers}\r\n                getOptionList={(resp) => resp.result}\r\n                itemTitleField=\"name\"\r\n                itemValueField=\"id\"\r\n                keyField=\"id\"\r\n                name=\"client\"\r\n                label=\"Client\"\r\n                onChange={handleChange}\r\n            />\r\n            <FieldSelect\r\n                value={values.ProjectId ? values.ProjectId : \"\"}\r\n                request={getProjects}\r\n                itemTitleField=\"name\"\r\n                itemValueField=\"id\"\r\n                keyField=\"id\"\r\n                name=\"ProjectId\"\r\n                label=\"Project\"\r\n                onChange={handleChange}\r\n            />\r\n            <FieldSelect\r\n                value={values.JobId ? values.JobId : \"\"}\r\n                request={getTickets}\r\n                itemTitleField=\"description\"\r\n                itemValueField=\"id\"\r\n                keyField=\"id\"\r\n                name=\"JobId\"\r\n                label=\"Job\"\r\n                onChange={handleChange}\r\n            />\r\n            <FieldSelect\r\n                value={typeof values.issuedBy === \"string\" ? values.issuedBy : values.issuedBy?.id}\r\n                name=\"issuedBy\"\r\n                label=\"Issued By\"\r\n                request={getAllEmployees}\r\n                itemTitleField=\"username\"\r\n                itemValueField=\"id\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const DocumentForm = ({\r\n    onDone,\r\n    createdSO,\r\n    data,\r\n}: {\r\n    onDone: () => void;\r\n    createdSO: ISO;\r\n    data: ISOComplete;\r\n}) => {\r\n    const divToPrintAcc = useRef<HTMLElement | null>(null);\r\n    const divToPrintRep = useRef<HTMLElement | null>(null);\r\n    const divToPrintCus = useRef<HTMLElement | null>(null);\r\n\r\n    // const classes = useStyles();\r\n    const [canSave, setCanSave] = useState(false);\r\n    const [isUploading, setIsUploading] = useState(false);\r\n\r\n    const handleSaveDocument = async () => {\r\n        try {\r\n            setCanSave(false);\r\n            setIsUploading(true);\r\n            if (divToPrintAcc.current && createdSO?.id) {\r\n                const generatedAccPdf = await exportPdf(divToPrintAcc.current);\r\n                await createAModelDocument(\r\n                    \"so\",\r\n                    createdSO.id,\r\n                    generatedAccPdf,\r\n                    `${new Date().toJSON().slice(0, 19)} - ${createdSO.number}`,\r\n                    `SO_ACC_${createdSO.number}.pdf`\r\n                );\r\n            }\r\n            if (divToPrintRep.current) {\r\n                const generatedRepPdf = await exportPdf(divToPrintRep.current);\r\n                await createAModelDocument(\r\n                    \"so\",\r\n                    createdSO.id,\r\n                    generatedRepPdf,\r\n                    `${new Date().toJSON().slice(0, 19)} - ${createdSO.number}`,\r\n                    `SO_REP_${createdSO.number}.pdf`\r\n                );\r\n            }\r\n            if (divToPrintCus.current) {\r\n                const generatedCusPdf = await exportPdf(divToPrintCus.current);\r\n                await createAModelDocument(\r\n                    \"so\",\r\n                    createdSO.id,\r\n                    generatedCusPdf,\r\n                    `${new Date().toJSON().slice(0, 19)} - ${createdSO.number}`,\r\n                    `SO_CUS_${createdSO.number}.pdf`\r\n                );\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setCanSave(true);\r\n            setIsUploading(false);\r\n            onDone();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Typography>We made a pdf from your Sales Order, now you can save it</Typography>\r\n            <div style={{ height: 400, overflowY: \"auto\" }}>\r\n                <div id=\"myMm\" style={{ height: \"1mm\" }} />\r\n                <h1>Accounting doc :</h1>\r\n                <div\r\n                    id=\"divToPrint\"\r\n                    ref={(e) => (divToPrintAcc.current = e)}\r\n                    style={{\r\n                        backgroundColor: \"#fff\",\r\n                        color: \"black\",\r\n                        width: \"835px\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight: \"auto\",\r\n                        minHeight: \"1200px\",\r\n                    }}\r\n                >\r\n                    <SOAcc data={data} />\r\n                </div>\r\n                <h1>Representative doc :</h1>\r\n                <div\r\n                    id=\"divToPrint1\"\r\n                    ref={(e) => (divToPrintRep.current = e)}\r\n                    style={{\r\n                        backgroundColor: \"#fff\",\r\n                        color: \"black\",\r\n                        width: \"835px\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight: \"auto\",\r\n                        minHeight: \"1200px\",\r\n                    }}\r\n                >\r\n                    <SORep data={data} />\r\n                </div>\r\n                <h1>Customer doc :</h1>\r\n                <div\r\n                    id=\"divToPrint2\"\r\n                    ref={(e) => (divToPrintCus.current = e)}\r\n                    style={{\r\n                        backgroundColor: \"#fff\",\r\n                        color: \"black\",\r\n                        width: \"835px\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight: \"auto\",\r\n                        minHeight: \"1200px\",\r\n                    }}\r\n                >\r\n                    <SOCus data={data} />\r\n                </div>\r\n            </div>\r\n\r\n            <Box textAlign=\"right\">\r\n                <Button disabled={isUploading} kind=\"add\" onClick={handleSaveDocument}>\r\n                    Save\r\n                </Button>\r\n                {isUploading && <LinearProgress />}\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n","import React, { Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { IQuoteComplete } from \"../api/quote\";\r\n\r\nconst useStyles = makeStyles({\r\n    header: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginBottom: \"7px\",\r\n    },\r\n    pfe: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    headContain: {\r\n        width: \"40%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    title: {\r\n        width: \"30\",\r\n        fontWeight: \"bold\",\r\n        textAlign: \"right\",\r\n    },\r\n    info: {\r\n        width: \"65%\",\r\n    },\r\n    gray: {\r\n        backgroundColor: \"lightgray\",\r\n        textAlign: \"center\",\r\n        fontSize: \"large\",\r\n        fontWeight: \"bold\",\r\n        padding: \"5px 20px 20px 20px\",\r\n    },\r\n    Qty: {\r\n        width: \"30%\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    lineItemName: {\r\n        flex: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n    item: {\r\n        padding: \"0px 3px 5px 3px\",\r\n        borderBottom: \"2px solid black\",\r\n        fontWeight: \"bold\",\r\n        marginBottom: \"5px\",\r\n    },\r\n    onePage: {\r\n        width: \"100%\",\r\n        minHeight: \"1250px\",\r\n        marginBottom: \"40px\",\r\n    },\r\n    exact: {\r\n        width: \"100%\",\r\n        height: \"1200px\",\r\n        marginBottom: \"40px\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n    },\r\n    grid: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"1fr 1fr\",\r\n        gridTemplateRows: \"1fr 1fr 1fr 1fr\",\r\n        width: \"100%\",\r\n        height: \"320px\",\r\n        marginTop: \"140%\",\r\n    },\r\n    right: {\r\n        flex: 1,\r\n        backgroundColor: \"#4f81bc\",\r\n        height: \"100%\",\r\n        border: \"1px solid black\",\r\n        borderLeft: \"none\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"30px\",\r\n        color: \"white\",\r\n    },\r\n    table: {\r\n        width: \"100%\",\r\n    },\r\n    td: {\r\n        border: \"0.5px solid black\",\r\n    },\r\n    th: {\r\n        border: \"0.5px solid black\",\r\n    },\r\n    span: {\r\n        fontWeight: \"bold\",\r\n        fontSize: \"large\",\r\n        margin: \"0px 5px\",\r\n    },\r\n});\r\nexport default function QuotePDF({ data, createdQuote }: { data: IQuoteComplete; createdQuote: IQuoteComplete }) {\r\n    const classes = useStyles();\r\n    let total = 0;\r\n    createdQuote.lineItemRecords?.forEach((l) => {\r\n        total = total + l.quantity * l.price;\r\n    });\r\n    return (\r\n        <div>\r\n            <div className={classes.exact}>\r\n                <div\r\n                    style={{\r\n                        width: \"160px\",\r\n                        backgroundColor: \"#8c8c8c\",\r\n                        height: \"100%\",\r\n                        border: \"1px solid black\",\r\n                    }}\r\n                >\r\n                    <div className={classes.grid}>\r\n                        <div style={{ backgroundColor: \"#37608c\", border: \"2px solid white\" }}></div>\r\n                        <div style={{ backgroundColor: \"\" }}></div>\r\n                        <div style={{ backgroundColor: \"#18375f\", border: \"2px solid white\" }}></div>\r\n                        <div style={{ backgroundColor: \"#37608c\", border: \"2px solid white\" }}></div>\r\n                        <div style={{ backgroundColor: \"#102540\", border: \"2px solid white\" }}></div>\r\n                        <div style={{ backgroundColor: \"#18375f\", border: \"2px solid white\" }}></div>\r\n                        <div style={{ backgroundColor: \"\" }}></div>\r\n                        <div style={{ backgroundColor: \"#102540\", border: \"2px solid white\" }}></div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.right}>\r\n                    <div style={{ marginLeft: \"auto\" }}>LOGO</div>\r\n                    <div>\r\n                        <h1>Representative Quote</h1>\r\n                    </div>\r\n                    <div>\r\n                        <h3>{createdQuote?.number}</h3>\r\n                    </div>\r\n                    <div>\r\n                        DSPM is committed to provide the highest quality products possible through our highly skilled\r\n                        and dedicated employees. Utilizing state-of-the-art manufacturing processes and patented\r\n                        products to pursue an aggressive, on-going research and development program. Insuring DSPM’s\r\n                        future as a leader in Power Conversion products. DSPM provides the highest standards of service\r\n                        available through our highly trained representatives and customer service personnel. DSPM\r\n                        employees are expected to serve the customer with the highest level of technical knowledge in\r\n                        the industry.\r\n                    </div>\r\n                    <div style={{ marginLeft: \"auto\" }}> footer</div>\r\n                </div>\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                        left: \"120px\",\r\n                        top: \"0px\",\r\n                        width: \"80px\",\r\n                        height: \"80px\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        backgroundColor: \"#8c8c8c\",\r\n                        border: \"1px solid black\",\r\n                        color: \"white\",\r\n                    }}\r\n                >\r\n                    {\" \"}\r\n                    2021{\" \"}\r\n                </div>\r\n            </div>\r\n            <div className={classes.onePage}>\r\n                <div className={classes.header} style={{ marginBottom: \"15px\" }}>\r\n                    <div>LOGO</div>\r\n                    <div>\r\n                        <div>Quoted By :</div>\r\n                        <div>{createdQuote?.EmployeeId?.username} //check</div>\r\n                    </div>\r\n                    <div className={classes.pfe}>\r\n                        <div style={{ fontSize: \"x-large\", fontWeight: \"bold\", color: \"teal\" }}>Quote</div>\r\n                        <div>\r\n                            <span>phone: </span>\r\n                            <span> +989906055809</span>\r\n                        </div>\r\n                        <div>\r\n                            <span>fax: </span>\r\n                            <span> +989906055809</span>\r\n                        </div>\r\n                        <div>\r\n                            <span>email: </span>\r\n                            <span> akdjakhdkjhHA@GMAIL.com</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.header}>\r\n                    <div className={classes.headContain} style={{ marginTop: \"auto\" }}>\r\n                        <div className={classes.header}>\r\n                            <span className={classes.title}>Agency: </span>\r\n                            <span className={classes.info}>\r\n                                {createdQuote.repOrAgency?.id\r\n                                    ? createdQuote.repOrAgency?.name\r\n                                    : createdQuote.client?.name}\r\n                            </span>\r\n                        </div>\r\n                        <div className={classes.header}>\r\n                            <span className={classes.title}>Requested By: </span>\r\n                            <span className={classes.info}>{createdQuote.requesterName}</span>\r\n                        </div>\r\n                        <div className={classes.header}>\r\n                            <span className={classes.title}>Project: </span>\r\n                            <span className={classes.info}>{createdQuote.ProjectId?.name} </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.headContain}>\r\n                        <div className={classes.header}>\r\n                            <span className={classes.title}>Quote # : </span>\r\n                            <span className={classes.info}>{createdQuote.number}</span>\r\n                        </div>\r\n                        <div className={classes.header}>\r\n                            <span className={classes.title}>Prepared On : </span>\r\n                            <span className={classes.info}>{createdQuote?.entryDate}</span>\r\n                        </div>\r\n                        <div className={classes.header}>\r\n                            <span className={classes.title}>Expires : </span>\r\n                            <span className={classes.info}>{createdQuote?.expireDate}</span>\r\n                        </div>\r\n                        <div className={classes.header}>\r\n                            <span className={classes.title}>Lead Time :</span>\r\n                            <span className={classes.info}>{createdQuote.leadTime}</span>\r\n                        </div>\r\n                        <div className={classes.header} style={{ marginTop: \"15px\" }}>\r\n                            <span className={classes.title}>Ship Via: </span>\r\n                            <span className={classes.info}>// we should fill this</span>\r\n                        </div>\r\n                        <div className={classes.header}>\r\n                            <span className={classes.title}>Freight Terms: </span>\r\n                            <span className={classes.info}>{createdQuote.freightTerms}</span>\r\n                        </div>\r\n                        <div className={classes.header}>\r\n                            <span className={classes.title}>Payment Terms:</span>\r\n                            <span className={classes.info}>{createdQuote.paymentTerms}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {createdQuote?.lineItemRecords?.map((item, index) => (\r\n                    <Fragment>\r\n                        <hr />\r\n                        <div className={classes.gray} style={{ marginBottom: \"15px\" }}>\r\n                            {item.ItemId?.name}\r\n                        </div>\r\n                        <div className={classes.header} style={{ marginBottom: \"15px\" }}>\r\n                            <div className={classes.lineItemName}>\r\n                                <div className={classes.Qty} style={{ width: \"50%\" }}>\r\n                                    <div>\r\n                                        <div className={classes.item}>Line[group]</div>\r\n                                        <div style={{ textAlign: \"center\" }}> {index} </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <div className={classes.item}>Item No./Description</div>\r\n                                        <div style={{ textAlign: \"center\" }}> {item?.ItemId?.no} </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{ paddingRight: \"10px\" }}>{item?.ItemId?.description}</div>\r\n                            </div>\r\n                            <div className={classes.Qty}>\r\n                                <div>\r\n                                    <div className={classes.item}>QTY</div>\r\n                                    <div style={{ textAlign: \"center\" }}> {item?.quantity} </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className={classes.item}>Unit Price</div>\r\n                                    <div style={{ textAlign: \"center\" }}> {item?.price} </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className={classes.item}>Unit Total</div>\r\n                                    <div style={{ textAlign: \"center\" }}> {item?.price * item?.quantity} </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Fragment>\r\n                ))}\r\n            </div>\r\n            <div className={classes.onePage}>\r\n                <div className={classes.header} style={{ marginBottom: \"15px\" }}>\r\n                    <div>LOGO</div>\r\n                    <div>\r\n                        <div>Quoted By :</div>\r\n                        <div>{createdQuote?.EmployeeId?.username}</div>\r\n                    </div>\r\n                    <div className={classes.pfe}>\r\n                        <div style={{ fontSize: \"x-large\", fontWeight: \"bold\", color: \"teal\" }}>Quote</div>\r\n                        <div>\r\n                            <span>phone: </span>\r\n                            <span> +989906055809</span>\r\n                        </div>\r\n                        <div>\r\n                            <span>fax: </span>\r\n                            <span> +989906055809</span>\r\n                        </div>\r\n                        <div>\r\n                            <span>email: </span>\r\n                            <span> akdjakhdkjhHA@GMAIL.com</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr />\r\n                <div className={classes.header}>\r\n                    <div className={classes.lineItemName}>\r\n                        <div className={classes.Qty} style={{ width: \"50%\" }}>\r\n                            <div>\r\n                                <div className={classes.item}>Notes : </div>\r\n                            </div>\r\n                        </div>\r\n                        <div style={{ paddingRight: \"10px\", color: \"red\" }}>{createdQuote?.note}</div>\r\n                    </div>\r\n                    <div className={classes.Qty} style={{ justifyContent: \"space-around\" }}>\r\n                        <div>\r\n                            <div style={{ textAlign: \"right\" }}> Commission Rate : </div>\r\n                            <div style={{ textAlign: \"right\" }}> Commission Total : </div>\r\n                            <div style={{ textAlign: \"right\", marginBottom: \"15px\" }}> Subtotal : </div>\r\n                            <div style={{ textAlign: \"right\" }}> Sales Tax : </div>\r\n                            <div style={{ textAlign: \"right\" }}> Total Freight : </div>\r\n                            <br />\r\n                            <div style={{ textAlign: \"right\" }}> Quote Total : </div>\r\n                        </div>\r\n                        <div>\r\n                            <div style={{ textAlign: \"left\" }}> {createdQuote?.regularCommission} </div>\r\n                            <div style={{ textAlign: \"left\" }}> {createdQuote?.regularCommission * total} </div>\r\n                            <div style={{ textAlign: \"left\", marginBottom: \"15px\" }}> {total} //check </div>\r\n                            <div style={{ textAlign: \"left\" }}> 0.0$ //fill this </div>\r\n                            <div style={{ textAlign: \"left\" }}> 0.0$ //fill this</div>\r\n                            <br />\r\n                            <div style={{ textAlign: \"left\" }}> 25.265$ </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <h3>TERMS AND CONDITIONS:</h3>\r\n                <h5>Acceptance</h5>\r\n                <div>\r\n                    The terms of sale contained herein apply to all sales transactions including Quotations and Purchase\r\n                    Orders entered into by Seller directly with the Buyer for standard product. Custom product sales may\r\n                    be subject to additional terms and conditions. This acceptance is conditional upon Buyer's assent to\r\n                    the terms and conditions set out herein in lieu of those in Buyer's purchase orders. Modifications\r\n                    or additions to these terms of sale will be recognized only if accepted in writing by an officer of\r\n                    the Seller. Seller's failure to object to provisions contained in any communication from Buyer shall\r\n                    not be deemed a waiver of the provisions contained herein.\r\n                </div>\r\n\r\n                <h5>Prices</h5>\r\n                <div>\r\n                    Quotations automatically expire 30 days from the date issued and are subject to withdrawal or\r\n                    extension by notice within that period. Seller's published prices are subject to change without\r\n                    notice. New pricing will not be applied to existing orders accepted by Seller. Prices quoted are for\r\n                    products only and do not include any other charges unless specifically covered in writing by Seller.\r\n                    Any discrepancies relating to price must be called to Seller's attention for resolution within 30\r\n                    days of the billing date.\r\n                </div>\r\n\r\n                <h5>Taxes</h5>\r\n                <div>\r\n                    Unless otherwise agreed upon in writing or required by law, all prices will be quoted and billed\r\n                    exclusive of federal, state and local excise sales and similar taxes. Such taxes, when applicable\r\n                    shall appear as additional terms on the invoice. If exemption from such taxes is claimed, buyer must\r\n                    provide, or have on file with Seller, a certificate of exemption at the time the Purchase Order is\r\n                    submitted to Seller.\r\n                </div>\r\n                <h5>Orders Acceptance</h5>\r\n                <div>\r\n                    Buyer's Purchase Orders must be in writing and approved by an authorized representative of the\r\n                    Buyer. Seller shall determine order acceptance at its discretion, and may impose restrictions for\r\n                    quantity requirements in regard to total order value and product packaging minimums. Seller can also\r\n                    restrict time frames for scheduled deliveries and change order activity. Terms of acceptance will be\r\n                    mutually understood by both parties, and authorized in writing by Seller at the Buyer's request.\r\n                </div>\r\n                <h5>Terms of Payment</h5>\r\n                <div>\r\n                    The Seller reserves the right to require payment in advance or C.O.D. and otherwise modify credit\r\n                    terms. Unless otherwise agreed, partial shipments can be made and payment shall become due in\r\n                    accordance with the designated terms upon submission of invoices. Each shipment shall be invoiced\r\n                    separately and Buyer shall pay for each shipment as invoiced. If shipments are delayed by Buyer\r\n                    without Seller's prior written consent, payments shall become due on the date when Seller is\r\n                    prepared to make shipment. Products held for the Buyer by the Seller shall be at the risk and\r\n                    expense of the Buyer. Seller reserves the right to add a monthly service charge as allowed by law.\r\n                </div>\r\n                <h5>Title and Delivery</h5>\r\n                <div>\r\n                    Unless otherwise instructed in writing, Seller shall ship by the methods it deems most advantageous.\r\n                    Transportation shall be collect, or if prepaid, will be subsequently billed to the Buyer. Title\r\n                    shall pass to the Buyer, and Seller's liability as to delivery shall cease on delivery of products\r\n                    to carrier at Seller's facility, regardless of any provisions for payment of freight or insurance or\r\n                    the form of shipping documents. Risk of loss or damage in transit shall rest with the Buyer. All\r\n                    claims for loss or damage will be filed with the carrier. Claims against Seller for shortages\r\n                    occurring before delivery to carrier shall be waived unless made within thirty (30) days after\r\n                    delivery of shipment to the Buyer.\r\n                </div>\r\n                <h5>Contingencies</h5>\r\n                <div>\r\n                    All shipping dates and quantities are approximate. Seller shall use reasonable efforts to fill all\r\n                    orders according to the agreed upon schedule and quantity. Seller shall not be responsible for any\r\n                    failure to perform resulting from unforeseen circumstances or causes beyond Seller's reasonable\r\n                    control. Such causes include, but are not limited to; strikes, floods, fires, labor disputes,\r\n                    accidents, inability to maintain materials or supplies, excessive demand for products over the\r\n                    available supply, custom duties or surcharges, and interruption for any reason in the manufacture of\r\n                    Seller's products by Seller's suppliers, any act of God, or the action of any government. In the\r\n                    event of any delay caused by such a contingency, the date of delivery shall, at the request of the\r\n                    Seller be deferred for period equal to the period of delay.\r\n                </div>\r\n                <h5>Patents</h5>\r\n                <div>\r\n                    Buyer shall indemnify, defend and hold Seller harmless against all expenses, damages, costs, or\r\n                    losses resulting from any suit or proceeding brought for infringement of copyright, patent,\r\n                    trademarks, or other intellectual property rights or for unfair competition arising from compliance\r\n                    with Buyer's design specifications or instructions. With respect to products manufactured solely to\r\n                    Seller's design and specifications, Seller shall defend any suit or proceeding brought against Buyer\r\n                    so far as based on a claim that any such products of any parts there of furnished hereunder\r\n                    constitute an infringement of any United States patent or United States mask work rights, if\r\n                    notified promptly of such claim in writing and given authority, information and assistance in the\r\n                    defense of same, and Seller shall pay all damages and costs awarded therein against Buyer. Seller\r\n                    assumes no liability, consequential or otherwise for, and Buyer agrees to hold Seller harmless\r\n                    against infringement of patent claims covering completed equipment or any assembly, circuit,\r\n                    combination, method or process in which any products may be used. In no event shall Seller's total\r\n                    liability to Buyer under or as a result of compliance with provisions of this paragraph exceed the\r\n                    aggregate sum paid to Seller by Buyer for the purchase of allegedly infringing products or parts.\r\n                    The foregoing states the entire warranty by Seller and the exclusive remedy of the Buyer with\r\n                    respect to any alleged copyright, patent or other intellectual property right infringement by such\r\n                    products or parts. No costs or expenses under this paragraph shall in any event be incurred for the\r\n                    account of the Seller without its prior written consent. Sale of product or any part thereof does\r\n                    not convey to Buyer any license, express or by implication, estoppels or otherwise, under any patent\r\n                    claim with respect to which Seller can grant licenses covering complicated equipment, or any\r\n                    assembly, circuit, combination, method or process in which any such products are used as components\r\n                    (not withstanding) the fact that such products may have been designed for use in or may only be\r\n                    useful in any such patented equipment, assembly circuit, combination, method or process, and that\r\n                    such products may have been purchased and sold for such use). Seller expressly reserves all rights\r\n                    under such patent or patent claim.\r\n                </div>\r\n                <h5>Warranty and Sole Remedy</h5>\r\n                <div>\r\n                    For the applicable warranty period specified below, Seller warrants that the products to be\r\n                    delivered hereunder will be free from defects in materials and workmanship under normal use and\r\n                    service. The obligations of the Seller under this warranty are limited to replacing, repairing or\r\n                    giving credit for, at its option, any of said products which shall, within the warranty period be\r\n                    returned as provided herein to the Seller, transportation charges prepaid and which are, after\r\n                    examination, disclosed to the satisfaction of the Seller to be thus defective. Buyer acknowledges\r\n                    and agrees that the provisions of this warranty constitute the sole and exclusive remedy available\r\n                    to it with regard to said defective products. No agent, employee, or representative of Seller has\r\n                    any authority to bind Seller to any affirmation, representation or warranty relating to the products\r\n                    other than as specifically provided herein. The warranty provided herein is subject to the following\r\n                    conditions:\r\n                    <br />\r\n                    <br />\r\n                    A. If products become defective during the warranty period, Buyer shall notify Seller promptly in\r\n                    writing of any such claims and provide information pertinent to delivery dates of the product and/or\r\n                    date code information.\r\n                    <br />\r\n                    <br />\r\n                    B. If Seller advises Buyer to return the product for repair or replacement, Buyer will follow\r\n                    Sellers Material Return Authorization procedures. Any order returned after 90 days from the time the\r\n                    order arrived on site, will not get credit for the batteries.\r\n                    <br />\r\n                    <br />\r\n                    C. If product alleged by Buyer to be defective or returned to Seller for repair as provided in this\r\n                    section is either (I) not under warranty, or (ii) determined not to be defective, or (iii) defective\r\n                    due to any cause not covered under the warranty provided herein, Buyer agrees to reimburse Seller\r\n                    for all reasonable expenses incurred in traveling and/or shipping, handling, and inspection of such\r\n                    product.\r\n                    <br />\r\n                    <br />\r\n                    D. Products will be accepted by Seller for warranty claim verification only when returned by Buyer\r\n                    in a condition which allows for suitable testing by Seller.\r\n                    <br />\r\n                    <br />\r\n                    E. Seller shall reimburse Buyer for shipping charges to the extent of the percent of the total\r\n                    return that are found by Seller to be defective as specified herein. Reimbursement will be in the\r\n                    form of a credit adjustment to Buyer's account unless otherwise agreed upon.\r\n                    <br />\r\n                    <br />\r\n                    F. In no event shall Seller be liable for any defective products if examination discloses that the\r\n                    defective condition of such products was caused by misuse, abuse or improper installation,\r\n                    application, maintenance or repair assembly by other than Seller, alteration, accident or negligence\r\n                    in use, storage, transportation or handling outside of specified environmental conditions.\r\n                    <br />\r\n                    <br />\r\n                    G. Seller assumes no risk or liability for the suitability or unsuitability or results of its\r\n                    products, used in combination with any electrical or electronic components, circuits, systems,\r\n                    assemblies, or any other material substances, or environments.\r\n                    <br />\r\n                    <br />\r\n                    H. Any returned products electrically or mechanically destroyed by Buyer or third parties will not\r\n                    be covered under this warranty, and will not be returned to Buyer, but will be scrapped by Seller.\r\n                    <br />\r\n                    <br />\r\n                    I. This warranty shall exist for a period of twelve (12) months after the date of shipment from the\r\n                    Seller and is considered null and void if components or subassemblies other than those supplied or\r\n                    approved by Seller are used in the assembly of Seller’s products, or if Sellers product is modified\r\n                    in any way without written authorization of Seller.\r\n                    <br />\r\n                    <br />\r\n                    J. Developmental products of Seller are warranted to be free from defects in materials and\r\n                    workmanship and to meet the applicable specifications only at the time of receipt of Buyer and for\r\n                    no longer period of time. All accepted deliveries are deemed to be free from defects as of the time\r\n                    of delivery.\r\n                    <br />\r\n                    <br />\r\n                    K. Product sold but not manufactured by the Seller will be warranted as to defects in material and\r\n                    workmanship consistent with the warranty policy of the original manufacturer of the product. The\r\n                    Seller's only obligation shall be to assign Buyer, to the extent possible, whatever warranty the\r\n                    Seller receives from said manufacturer. In no event shall the Seller be liable for loss, damage or\r\n                    expense directly or indirectly arising from the use of the units or from any other cause, except as\r\n                    expressly stated in this warranty. THERE ARE NO WARRANTIES, WHICH EXTEND BEYOND THE DESCRIPTION ON\r\n                    THE FACE HEREOF. THE SELLER DISCLAIMS ANY IMPLIED WARRANTY OF MERCHANTABILITY OF THE GOODS OR OF THE\r\n                    FITNESS OF THE GOODS FOR ANY INTENDED PURPOSE. The Seller is not liable for, and the Buyer waives\r\n                    any right of action it has or may have against the Seller for any consequential or special damages\r\n                    arising out of any breach of warranty and for any damages the Buyer may claim for damage to any\r\n                    property or injury or death to any person arising out of its purchase or the use, operation, or\r\n                    maintenance of the product. The Seller will not be liable for any labor subcontracted or performed\r\n                    by the Buyer for preparation of item under warranty for return to the Seller’s factory or for\r\n                    preparation work for field repair or replacement. Invoicing of the Seller for labor either performed\r\n                    or subcontracted by the Buyer will not be considered as a liability by the Seller. The Seller's\r\n                    obligations under this warranty are conditioned upon timely receipt of all payments in strict\r\n                    accordance with payment terms, time being of the essence in this regard. During the time while the\r\n                    Seller has not received any amount overdue, the Seller shall have no obligation under this warranty.\r\n                    The expiration date of the warranty shall not be extended upon payment of the overdue amount.\r\n                </div>\r\n                <h5>Product Discontinuance</h5>\r\n                <div>\r\n                    Seller will give as much notification as possible in the event of discontinuing product, however,\r\n                    Seller reserves the right to discontinue production of any product at any time without notice except\r\n                    for that quantity of product for which Seller has received and acknowledged a Purchase Order from\r\n                    Buyer and has scheduled such product for shipment within six (6) months of the date of such\r\n                    acknowledgement.\r\n                </div>\r\n                <h5>Cancellation of Buyer</h5>\r\n                <div>\r\n                    Orders for standard product may be cancelled on sixty (60) days prior to the scheduled ship date by\r\n                    written notice to Seller. Orders for products which are not listed in Seller’s current catalogue\r\n                    (including but not limited to, semi-custom application specific products, or other semi-custom\r\n                    product(s) which have special markings, or which have received special testing or which are\r\n                    specially programmed for Buyer) may not be cancelled or returned except under the provisions of a\r\n                    prior written agreement between Seller and Buyer which sets forth the cancellation charges to be\r\n                    paid by Buyer in the vent of such cancellation. If such an agreement is not in place, the charges\r\n                    shall be 100%. Any money paid in advance is refundable at DSPM discretion.\r\n                </div>\r\n                <h5>Property Rights</h5>\r\n                <div>\r\n                    The design, development or manufacture by Seller of a product for Buyer shall not be deemed to\r\n                    produce a work made for hire and shall not give to Buyer any copyright interest in the product or\r\n                    any interest in all or any portion of the mask works relating to the product. All such rights remain\r\n                    with the property of the Seller including models, drawings, composites, patterns, dies molds, masks\r\n                    and any other tools made for or obtained for furnishing the products hereunder.\r\n                </div>\r\n                <h5>Special, Incidental, Consequential, or Indirect Damages</h5>\r\n                <div>\r\n                    INDEPENDENTLY OF ANY OTHER LIMITATION HEREOF AND REGARDLESS OF WHETHER THE PURPOSE OF SUCH\r\n                    LIMITATION IS SERVED, IT IS AGREED THAT IN NO EVENT SHALL SELLER BE LIABLE FOR SPECIAL, INCIDENTAL,\r\n                    CONSEQUENTIAL OR INDIRECT DAMAGES.\r\n                </div>\r\n                <h5>Limitation of Actions</h5>\r\n                <div>\r\n                    No action against Seller for breach hereof shall be commenced more than one (1) year after the\r\n                    accrual of the cause of action.\r\n                </div>\r\n                <h5>Assignment</h5>\r\n                <div>\r\n                    The Buyer shall not assign this order or any interest therein or any rights there under without the\r\n                    prior written consent of Seller.\r\n                </div>\r\n                <h5>Local Currency</h5>\r\n                <div>Any order placed hereunder is, and payment for such order will be in U.S. Dollars.</div>\r\n                <h5>Confidential Information</h5>\r\n                <div>\r\n                    Seller shall have no obligation to hold any information received from Buyer hereunder in confidence\r\n                    unless such information is covered by a separate negotiated Non-Disclosure Agreement, which is\r\n                    reduced to writing and signed by both parties.\r\n                </div>\r\n                <h5>Governing Law</h5>\r\n                <div>\r\n                    SEVERABILITY. These terms and conditions of sale shall be governed by the laws of the state of\r\n                    California. Any provisions hereof which are prohibited or unenforceable in any jurisdiction shall,\r\n                    as to such jurisdictions, be ineffective to the extent of such prohibition or unenforceable without\r\n                    invalidating the remaining provisions hereof or affecting the validity or enforceability of such\r\n                    provisions in any other\r\n                </div>\r\n                <h5>Arbitration</h5>\r\n                <div>\r\n                    If a disagreement or controversy of any kind arises between the Buyer and Seller, both parties shall\r\n                    meet to attempt to resolve such disagreement. If the disagreement cannot be resolved by the parties,\r\n                    an informal binding arbitration shall be held. The rules of the informal arbitration shall be agreed\r\n                    upon by the parties prior to the arbitration. To the extent that Buyer and Seller cannot agree on\r\n                    the rules of the arbitration, the rules and procedures of the American Arbitration Association shall\r\n                    apply. As a minimum set of rules, the parties agree as follows:\r\n                    <br />\r\n                    <br />\r\n                    A. The arbitration shall be held by a single arbitrator mutually acceptable to both parties. If the\r\n                    parties cannot agree on a single arbitrator, each party shall identify one independent individual\r\n                    who shall meet to appoint a single arbitrator.\r\n                    <br />\r\n                    <br />\r\n                    B. The decision of the arbitrator shall be considered as a final and binding resolution of the\r\n                    disagreement which may be entered as a judgment by any court of competent jurisdiction.\r\n                    <br />\r\n                    <br />\r\n                    C. The arbitration shall be held in Los Angeles County, California.\r\n                    <br />\r\n                    <br />\r\n                    D. Neither party shall sue the other except for enforcement of the arbitrator's decision. All\r\n                    disagreements or controversies of any kind whether claimed in tort, contract or otherwise, either\r\n                    concerning this agreement or any other matter whatsoever, shall be arbitrated according to the\r\n                    provisions of this paragraph and shall be brought within one (1) year after the accrual of the\r\n                    disagreement or controversy.\r\n                </div>\r\n                <h5>Modifications</h5>\r\n                <div>\r\n                    No addition to or deletion from, nor any modifications of these terms and conditions of sale shall\r\n                    be binding upon the Seller unless acknowledged and accepted in writing by an officer of the Seller.\r\n                    Any change made by Seller will be deemed accepted by Buyer unless within ten (10) days from notice\r\n                    of such change. Buyer notifies Seller of Buyer's exception to such change. A waiver by Seller of any\r\n                    default or of any of the terms and conditions of sales shall not be deemed to be continuing waiver\r\n                    of any other default or of any other of these terms and conditions of sale, but shall apply solely\r\n                    to the instance to which the waiver is directed.\r\n                    <br />\r\n                    <br />\r\n                    Terms & Conditions of Sale subject to change without notice\r\n                    <br />\r\n                    <br />\r\n                    Effective date 12-12-2008 DSPM Copyright ©\r\n                    <br />\r\n                    079-0001-01\r\n                </div>\r\n            </div>\r\n            <div style={{ marginBottom: \"200px\" }}>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <h1> Service Program Descriptions </h1>\r\n                </div>\r\n                <div>\r\n                    <h4>TOS - Equipment Turn On Service WITHOUT On Site Warranty</h4>\r\n                    <ul>\r\n                        <li>\r\n                            Equipment Turn on Service is for customer that would like to have start-up performed without\r\n                            adding additional coverage to the equipment warranty.\r\n                        </li>\r\n                        <li>This coverage can be performed as an On-Site Startup Service for any DSPM product.</li>\r\n                        <li>\r\n                            All parts and labor to repair if NOT covered under a current Warranty or Service Plan and\r\n                            will be billed at DSPM current rates unless covered by a current warranty or service plan.\r\n                        </li>\r\n                    </ul>\r\n                    <h4>CI - Certification Inspection Visit</h4>\r\n                    <ul>\r\n                        <li>\r\n                            The Certification/Inspection is a service provided to certify equipment capable is placed\r\n                            under a warranty/service plan.\r\n                        </li>\r\n                        <li>The Certification Inspection is complete when all repairs are completed.</li>\r\n                        <li>\r\n                            The Certification Inspection is billed at DSPM current hourly rates based on time of day and\r\n                            day of week service is performed.\r\n                        </li>\r\n                        <li>All parts needed to complete the repairs are billed at DSPM current list prices.</li>\r\n                    </ul>\r\n                    <h4>SW58 - Extended On-Site Warranty 8-5 Monday-Friday</h4>\r\n                    <ul>\r\n                        <li>\r\n                            This Extended Warranty Plan is to be purchased while the equipment is still under current\r\n                            warranty coverage, or after approval by DSPM and a Certification Inspection by DSPM.\r\n                        </li>\r\n                        <li>\r\n                            This plan covers all replacement pans and labor including travel time and expenses for all\r\n                            emergency calls to service the unit. All service calls will be made between 8:00 a.m. and\r\n                            5:00 p.m. and will be limited to Monday through Friday with the exception of the DSPM's\r\n                            designated holidays.\r\n                        </li>\r\n                        <li>\r\n                            If the Customer requests remedial maintenance outside of the contracted coverage or\r\n                            preventive maintenance, DSPM will provide this service. This service will be charged to the\r\n                            Customer at DSPM's standard hourly rates in effect at the time of the service, and will be\r\n                            subject to an available field engineer.\r\n                        </li>\r\n                        <li>\r\n                            DSPM will provide all replacement parts for parts that are found defective during emergency\r\n                            service calls. If replaced parts are used from any Customer- spare parts kit, DSPM will\r\n                            replace them to the Customer-owned spare parts kit with no charges to the Customer.\r\n                        </li>\r\n                        <li>\r\n                            DSPM will include installation of any changes for safety reasons and at DSPM option, install\r\n                            any factory enhancements and upgrades, and reliability changes or improvements during the\r\n                            emergency service call. Uninterruptible Power Systems (UPS) and Emergency Lighting Inverter\r\n                            batteries are NOT warranted under this plan unless specified. DSPM will provide the\r\n                            maintenance and testing for the batteries at DSPM 's the hourly rates in effect for DSPM.\r\n                            DSPM, unless specified otherwise in contract, will NOT provide Battery replacements but will\r\n                            assist the customer in the replacement of the batteries through the battery manufacturer's\r\n                            warranty.\r\n                        </li>\r\n                    </ul>\r\n                    <h4>SW724 - Extended On-Site Warranty 24 hrs/day 7 days/week Except Holidays</h4>\r\n                    <ul>\r\n                        <li>\r\n                            This Extended Warranty Plan is to be purchased while the equipment is still under current\r\n                            warranty coverage, or after approval by DSPM and a Certification Inspection by DSPM.\r\n                        </li>\r\n                        <li>\r\n                            This plan covers all replacement pans and labor including travel time and expenses for all\r\n                            emergency calls to service the unit. All service calls will be made seven (7) days a week\r\n                            with the exception of the DSPM's designated holidays.\r\n                        </li>\r\n                        <li>\r\n                            If the Customer requests remedial maintenance outside of the contracted coverage or\r\n                            preventive maintenance, DSPM will provide this service. This service will be charged to the\r\n                            Customer at DSPM's standard hourly rates in effect at the time of the service, and will be\r\n                            subject to an available field engineer.\r\n                        </li>\r\n                        <li>\r\n                            DSPM will provide all replacement parts for parts that are found defective during emergency\r\n                            service calls. If replaced parts are used from any Customer- spare parts kit, DSPM will\r\n                            replace them to the Customer-owned spare parts kit with no charges to the Customer.\r\n                        </li>\r\n                        <li>\r\n                            DSPM will include installation of any changes for safety reasons and at DSPM option, install\r\n                            any factory enhancements and upgrades, and reliability changes or improvements during the\r\n                            emergency service call. Uninterruptible Power Systems (UPS) and Emergency Lighting Inverter\r\n                            batteries are NOT warranted under this plan unless specified. DSPM will provide the\r\n                            maintenance and testing for the batteries at DSPM 's the hourly rates in effect for DSPM.\r\n                            DSPM, unless specified otherwise in contract, will NOT provide Battery replacements but will\r\n                            assist the customer in the replacement of the batteries through the battery manufacturer's\r\n                            warranty.\r\n                        </li>\r\n                    </ul>\r\n                    <h4>SW36S - Extended On-Site Warranty 24 hrs/day 7 days/week Including Holidays</h4>\r\n                    <ul>\r\n                        <li>\r\n                            This Extended Warranty Plan is to be purchased while the equipment is still under current\r\n                            warranty coverage, or after approval by DSPM and a Certification Inspection by DSPM.\r\n                        </li>\r\n                        <li>\r\n                            This plan covers all replacement pans and labor including travel time and expenses for all\r\n                            emergency calls to service the unit. All service calls will be made seven (7) days a week\r\n                            including DSPM's designated holidays.\r\n                        </li>\r\n                        <li>\r\n                            This plan covers all replacement pans and labor including travel time and expenses for all\r\n                            emergency calls to service the unit. All service calls will be made seven (7) days a week\r\n                            including DSPM's designated holidays.\r\n                        </li>\r\n                        <li>\r\n                            DSPM will provide all replacement parts for parts that are found defective during emergency\r\n                            service calls. If replaced parts are used from any Customer- spare parts kit, DSPM will\r\n                            replace them to the Customer-owned spare parts kit with no charges to the Customer.\r\n                        </li>\r\n                        <li>\r\n                            DSPM will include installation of any changes for safety reasons and at DSPM option, install\r\n                            any factory enhancements and upgrades, and reliability changes or improvements during the\r\n                            emergency service call. Uninterruptible Power Systems (UPS) and Emergency Lighting Inverter\r\n                            batteries are NOT warranted under this plan unless specified. DSPM will provide the\r\n                            maintenance and testing for the batteries at DSPM 's the hourly rates in effect for DSPM.\r\n                            DSPM, unless specified otherwise in contract, will NOT provide Battery replacements but will\r\n                            assist the customer in the replacement of the batteries through the battery manufacturer's\r\n                            warranty.\r\n                        </li>\r\n                    </ul>\r\n                    <h4>SFS8-1 - Full Service Contract 8 a.m. - 5 p.m. Monday- Friday</h4>\r\n                    <ul>\r\n                        <li>\r\n                            This Full Service Plan is to be purchased while the equipment is still under current\r\n                            warranty coverage, or after approval by DSPM and a Certification Inspection by DSPM .\r\n                        </li>\r\n                        <li>\r\n                            This Full Service Plan covers all emergency calls to service the unit and one (1) Preventive\r\n                            Maintenance call per year. Additional Preventive Maintenance calls may be purchased and\r\n                            added to the plan.\r\n                        </li>\r\n                        <li>\r\n                            This plan covers all replacement parts and labor including travel time and expenses for all\r\n                            emergency calls and one (1) Preventive Maintenance call to service the unit. All service\r\n                            calls will be made between 8:00 a.m. and 5:00 p.m. and are limited to Monday through Friday\r\n                            excluding DSPM's designated holidays.\r\n                        </li>\r\n                        <li>\r\n                            If the Customer requests remedial maintenance or preventive maintenance outside of the\r\n                            contracted coverage, DSPM will provide this service. This service will be charged to the\r\n                            Customer at DSPM's standard hourly rates in effect at the time of the service, and will be\r\n                            subject to an available field engineer.\r\n                        </li>\r\n                        <li>\r\n                            DSPM will provide all replacement parts for pans that are found defective during emergency\r\n                            service calls. If replaced parts are used from any Customer-owned spare parts kit, DSPM will\r\n                            replace them to the Customer-owned spare parts kit with no charges to the Customer.\r\n                        </li>\r\n                        <li>\r\n                            DSPM will include installation of any changes for safety reasons and at DSPM option, install\r\n                            any factory enhancements and upgrades, and reliability changes or improvements during the\r\n                            emergency service call. Uninterruptible Power Systems (UPS) and Emergency Lighting Inverter\r\n                            batteries are NOT warranted under this plan unless specified. DSPM will provide the\r\n                            maintenance and testing for the batteries at DSPM 's the hourly rates in effect for DSPM.\r\n                            DSPM, unless specified otherwise in contract, will NOT provide Battery replacements but will\r\n                            assist the customer in the replacement of the batteries through the battery manufacturer's\r\n                            warranty.\r\n                        </li>\r\n                    </ul>\r\n                    <h4>SF724-J - Full Service Contract 24 hrs/day 7 days/week Except Holidays</h4>\r\n                    <ul>\r\n                        <li>\r\n                            This Full Service Plan is to be purchased while the equipment is still under current\r\n                            warranty coverage, or after approval by DSPM and a Certification Inspection by DSPM .\r\n                        </li>\r\n                        <li>\r\n                            This Full Service Plan covers all emergency calls to service the unit and one (1) Preventive\r\n                            Maintenance call per year. Additional Preventive Maintenance calls may be purchased and\r\n                            added to the plan.\r\n                        </li>\r\n                        <li>\r\n                            This plan covers all replacement parts and labor including travel time and expenses for all\r\n                            emergency calls and one (1) Preventive Maintenance call to service the unit. All service\r\n                            calls will be made seven (7) days a week excluding DSPM's designated holidays.\r\n                        </li>\r\n                        <li>\r\n                            If the Customer requests remedial maintenance or preventive maintenance outside of the\r\n                            contracted coverage, DSPM will provide this service. This service will be charged to the\r\n                            Customer at DSPM's standard hourly rates in effect at the time of the service, and will be\r\n                            subject to an available field engineer.\r\n                        </li>\r\n                        <li>\r\n                            DSPM will provide all replacement parts for pans that are found defective during emergency\r\n                            service calls. If replaced parts are used from any Customer-owned spare parts kit, DSPM will\r\n                            replace them to the Customer-owned spare parts kit with no charges to the Customer.\r\n                        </li>\r\n                        <li>\r\n                            DSPM will include installation of any changes for safety reasons and at DSPM option, install\r\n                            any factory enhancements and upgrades, and reliability changes or improvements during the\r\n                            emergency service call. Uninterruptible Power Systems (UPS) and Emergency Lighting Inverter\r\n                            batteries are NOT warranted under this plan unless specified. DSPM will provide the\r\n                            maintenance and testing for the batteries at DSPM 's the hourly rates in effect for DSPM.\r\n                            DSPM, unless specified otherwise in contract, will NOT provide Battery replacements but will\r\n                            assist the customer in the replacement of the batteries through the battery manufacturer's\r\n                            warranty.\r\n                        </li>\r\n                    </ul>\r\n                    <h4>SF365-1 - Full Service Contract 24 hrs/day 7 days/week Including Holidays</h4>\r\n                    <ul>\r\n                        <li>\r\n                            This Full Service Plan is to be purchased while the equipment is still under current\r\n                            warranty coverage, or after approval by DSPM and a Certification Inspection by DSPM .\r\n                        </li>\r\n                        <li>\r\n                            This Full Service Plan covers all emergency calls to service the unit and one (1) Preventive\r\n                            Maintenance call per year. Additional Preventive Maintenance calls may be purchased and\r\n                            added to the plan.\r\n                        </li>\r\n                        <li>\r\n                            This plan covers all replacement parts and labor including travel time and expenses for all\r\n                            emergency calls and one (1) Preventive Maintenance call to service the unit. All service\r\n                            calls will be made seven (7) days a week including DSPM's designated holidays.\r\n                        </li>\r\n                        <li>\r\n                            If the Customer requests remedial maintenance or preventive maintenance outside of the\r\n                            contracted coverage, DSPM will provide this service. This service will be charged to the\r\n                            Customer at DSPM's standard hourly rates in effect at the time of the service, and will be\r\n                            subject to an available field engineer.\r\n                        </li>\r\n                        <li>\r\n                            DSPM will provide all replacement parts for pans that are found defective during emergency\r\n                            service calls. If replaced parts are used from any Customer-owned spare parts kit, DSPM will\r\n                            replace them to the Customer-owned spare parts kit with no charges to the Customer.\r\n                        </li>\r\n                        <li>\r\n                            DSPM will include installation of any changes for safety reasons and at DSPM option, install\r\n                            any factory enhancements and upgrades, and reliability changes or improvements during the\r\n                            emergency service call. Uninterruptible Power Systems (UPS) and Emergency Lighting Inverter\r\n                            batteries are NOT warranted under this plan unless specified. DSPM will provide the\r\n                            maintenance and testing for the batteries at DSPM 's the hourly rates in effect for DSPM.\r\n                            DSPM, unless specified otherwise in contract, will NOT provide Battery replacements but will\r\n                            assist the customer in the replacement of the batteries through the battery manufacturer's\r\n                            warranty.\r\n                        </li>\r\n                    </ul>\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <h1>Comparison Chart</h1>\r\n                        <table className={classes.table}>\r\n                            <tr>\r\n                                <th className={classes.th}>plan Type</th>\r\n                                <th className={classes.th}>Coverage</th>\r\n                                <th className={classes.th}>Labor</th>\r\n                                <th className={classes.th}>Parts</th>\r\n                                <th className={classes.th}>Travel Expanses</th>\r\n                                <th className={classes.th}>Emergency Calls</th>\r\n                                <th className={classes.th}>Preventive Maintenance</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                                <td className={classes.td}>x</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                    <h3>Notes</h3>\r\n                    <table>\r\n                        <tr>\r\n                            <td>\r\n                                {\" \"}\r\n                                <span className={classes.span}>x</span>\r\n                            </td>\r\n                            <td>\r\n                                {\" \"}\r\n                                <span>Included with Plan Type</span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                {\" \"}\r\n                                <span className={classes.span}>x1</span>\r\n                            </td>\r\n                            <td>\r\n                                {\" \"}\r\n                                <span>\r\n                                    Included If Purchased During Warranty Period or With Unit Under a Service Contract.\r\n                                    Coverage for parts must be from other coverage such as an Extended Warranty or\r\n                                    Service Contract.\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                {\" \"}\r\n                                <span className={classes.span}>-n</span>\r\n                            </td>\r\n                            <td>\r\n                                <span>Indicates the number of Preventive Maintenance Calls per year.</span>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                {\" \"}\r\n                                <span className={classes.span}>*</span>\r\n                            </td>\r\n                            <td>\r\n                                <span>\r\n                                    Must be purchased during an active original factory warranty, during an active\r\n                                    Extended Warranty, during an active Service Contract, or After a CI with DSPM\r\n                                    Management approval. Multiple Unit discount for more than one unit at a single\r\n                                    location only, and startups are all at the same time.\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                <h3>\r\n                    Multiple Unit discount for more than one unit at a single location only, and startups are all at the\r\n                    same time.\r\n                </h3>\r\n                <table style={{ width: \"400px\", margin: \"5px auto\", textAlign: \"center\" }}>\r\n                    <tr>\r\n                        <th>QTY</th>\r\n                        <th>Multiplier</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>2 to 5</td>\r\n                        <td>1.00</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>6 to 10</td>\r\n                        <td>0.90</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>11 to 15 </td>\r\n                        <td>0.82</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>16 to 20 </td>\r\n                        <td>0.75</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td> 21 to 25 </td>\r\n                        <td>0.70</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>26 to 30 </td>\r\n                        <td>0.65</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>31 to 35</td>\r\n                        <td>0.60</td>\r\n                    </tr>\r\n                </table>\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <h1>CUSTOMER SERVICE RATES </h1>\r\n                </div>\r\n                <h4>Labor Rates:</h4>\r\n                <h5>Repair Charges (Customer Site Time)</h5>\r\n                <table style={{ width: \"700px\", margin: \"5px auto\", textAlign: \"left\" }}>\r\n                    <tr>\r\n                        <td>8 to 5 Monday thru Friday excluding holidays</td>\r\n                        <td>140.0$</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>All other times excluding holidays</td>\r\n                        <td>210.0$</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Holidays</td>\r\n                        <td>280.0$</td>\r\n                    </tr>\r\n                </table>\r\n                <h5>Travel Charges (Round Trip)</h5>\r\n                <table style={{ width: \"700px\", margin: \"5px auto\", textAlign: \"left\" }}>\r\n                    <tr>\r\n                        <td>All travel time excluding holidays</td>\r\n                        <td>140.0$</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Travel time for holidays</td>\r\n                        <td>210.0$</td>\r\n                    </tr>\r\n                </table>\r\n                <h4>Expenses:</h4>\r\n                <div>\r\n                    Travel expenses for all services NOT covered under an EXTENDED WARRANTY PLAN or a SERVICE CONTRACT\r\n                    will be billed at actual cost.\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport {\r\n    LinearProgress,\r\n    Typography,\r\n    Box,\r\n    FormControl,\r\n    FormLabel,\r\n    FormControlLabel,\r\n    RadioGroup,\r\n    Radio,\r\n} from \"@material-ui/core\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\n\r\nimport TextField from \"../../../app/TextField\";\r\nimport Button from \"../../../app/Button\";\r\nimport { FieldSelect, ArraySelect } from \"../../../app/Inputs\";\r\nimport { getAllEmployees } from \"../../../api/employee\";\r\nimport { getProjects } from \"../../../api/project\";\r\nimport { getItems } from \"../../../api/items\";\r\nimport { exportPdf } from \"../../../logic/pdf\";\r\nimport { getTickets } from \"../../../api/ticket\";\r\nimport QuotePDF from \"../../../PDFTemplates/Quote\";\r\nimport { createAModelDocument } from \"../../../api/document\";\r\nimport { IQuoteComplete } from \"../../../api/quote\";\r\n// import { getContacts } from \"../../../api/contact\";\r\nimport { getCustomers } from \"../../../api/customer\";\r\n\r\nexport const DocumentForm = ({\r\n    onDone,\r\n    createdQoute,\r\n    data,\r\n}: {\r\n    onDone: () => void;\r\n    createdQoute: any;\r\n    data: IQuoteComplete;\r\n}) => {\r\n    const divToPrint = useRef<HTMLElement | null>(null);\r\n\r\n    const [isUploading, setIsUploading] = useState(false);\r\n\r\n    const handleSaveDocument = async () => {\r\n        try {\r\n            setIsUploading(true);\r\n            if (divToPrint.current && createdQoute.id) {\r\n                const generatedPdf = await exportPdf(divToPrint.current);\r\n                console.log(generatedPdf);\r\n                const resp = await createAModelDocument(\r\n                    \"quote\",\r\n                    createdQoute.id,\r\n                    generatedPdf,\r\n                    `${new Date().toJSON().slice(0, 19)} - ${createdQoute.number}`,\r\n                    `PO_${createdQoute.number}.pdf`\r\n                );\r\n                if (resp) {\r\n                    onDone();\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setIsUploading(false);\r\n        }\r\n    };\r\n    return (\r\n        <Box>\r\n            <Typography>We made a pdf from your Quote, now you can save it</Typography>\r\n            <div style={{ height: 400, overflowY: \"auto\" }}>\r\n                <div id=\"myMm\" style={{ height: \"1mm\" }} />\r\n                <div\r\n                    id=\"divToPrint\"\r\n                    ref={(e) => (divToPrint.current = e)}\r\n                    style={{\r\n                        backgroundColor: \"#fff\",\r\n                        color: \"black\",\r\n                        width: \"835px\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight: \"auto\",\r\n                        minHeight: \"1200px\",\r\n                    }}\r\n                >\r\n                    <QuotePDF data={data} createdQuote={createdQoute} />\r\n                </div>\r\n            </div>\r\n            <Box textAlign=\"right\">\r\n                <Button disabled={false} kind=\"add\" onClick={handleSaveDocument}>\r\n                    Save\r\n                </Button>\r\n                {isUploading && <LinearProgress />}\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const LineItemForm = ({\r\n    handleChange,\r\n    handleBlur,\r\n    handleDelete,\r\n    values,\r\n    errors,\r\n    touched,\r\n    LIData,\r\n    isSubmitting,\r\n}: {\r\n    values: any;\r\n    errors: any;\r\n    touched: any;\r\n    LIData: any;\r\n    isSubmitting: boolean;\r\n    handleDelete: () => void;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n}) => {\r\n    return (\r\n        <Box>\r\n            <Box mb={2} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridColumnGap={10} gridRowGap={10}>\r\n                <FieldSelect\r\n                    style={{ gridColumnEnd: \"span 2\" }}\r\n                    label=\"Item\"\r\n                    name=\"ItemId\"\r\n                    value={values.ItemId}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    request={getItems}\r\n                    getOptionList={(data) => data.result}\r\n                    itemTitleField=\"name\"\r\n                    itemValueField=\"id\"\r\n                    error={Boolean(errors.ItemId && touched.ItemId)}\r\n                />\r\n                <TextField\r\n                    placeholder=\"description\"\r\n                    label=\"description\"\r\n                    name=\"description\"\r\n                    value={values.description}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <TextField\r\n                    placeholder=\"quantity\"\r\n                    label=\"quantity\"\r\n                    name=\"quantity\"\r\n                    value={values.quantity}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.quantity && touched.quantity)}\r\n                    helperText={errors.quantity}\r\n                />\r\n                <TextField\r\n                    placeholder=\"price\"\r\n                    label=\"price\"\r\n                    name=\"price\"\r\n                    value={values.price}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.price && touched.price)}\r\n                    helperText={errors.price}\r\n                />\r\n                <TextField\r\n                    placeholder=\"index\"\r\n                    label=\"index\"\r\n                    name=\"index\"\r\n                    value={values.index}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.index && touched.index)}\r\n                    helperText={errors.index}\r\n                />\r\n                <FormControl style={{ margin: \"0.5em\" }}>\r\n                    <FormLabel>Tax?</FormLabel>\r\n                    <RadioGroup\r\n                        value={String(values.tax)}\r\n                        name=\"tax\"\r\n                        onChange={handleChange}\r\n                        style={{ flexDirection: \"row\" }}\r\n                    >\r\n                        <FormControlLabel control={<Radio />} label=\"Yes\" value=\"true\" />\r\n                        <FormControlLabel control={<Radio />} label=\"No\" value=\"false\" />\r\n                    </RadioGroup>\r\n                </FormControl>\r\n            </Box>\r\n\r\n            <Box textAlign=\"center\">\r\n                <Button disabled={isSubmitting} type=\"submit\" kind={LIData ? \"edit\" : \"add\"}>\r\n                    {LIData ? \"Save\" : \"Add\"}\r\n                </Button>\r\n                {LIData && (\r\n                    <Button kind=\"delete\" style={{ margin: \"0 1em\" }} onClick={handleDelete}>\r\n                        Delete\r\n                    </Button>\r\n                )}\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const GeneralForm = ({\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n    edit,\r\n    setFieldValue,\r\n}: {\r\n    edit?: boolean;\r\n    values: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n    setFieldValue: any;\r\n}) => {\r\n    return (\r\n        <>\r\n            <Box my={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridColumnGap={10} gridRowGap={10}>\r\n                {edit && (\r\n                    <TextField label=\"Quote ID\" value={values.number} style={{ gridColumnEnd: \"span 2\" }} disabled />\r\n                )}\r\n                {edit && <TextField label=\"SO ID\" value={values.number} style={{ width: \"100%\" }} disabled />}\r\n                <DateTimePicker\r\n                    size=\"small\"\r\n                    value={values.entryDate}\r\n                    name=\"entryDate\"\r\n                    label=\"Entry Date\"\r\n                    onChange={(date) => setFieldValue(\"entryDate\", date)}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <DateTimePicker\r\n                    size=\"small\"\r\n                    value={values.expireDate}\r\n                    name=\"expireDate\"\r\n                    label=\"Expire Date\"\r\n                    onChange={(date) => setFieldValue(\"expireDate\", date)}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <TextField\r\n                    value={values.location}\r\n                    style={edit ? {} : { gridColumnEnd: \"span 2\" }}\r\n                    name=\"location\"\r\n                    label=\"Location\"\r\n                    onChange={handleChange}\r\n                />\r\n                <FieldSelect\r\n                    value={typeof values.ProjectId === \"string\" ? values.ProjectId : values.ProjectId?.id}\r\n                    request={getProjects}\r\n                    itemTitleField=\"name\"\r\n                    itemValueField=\"id\"\r\n                    keyField=\"id\"\r\n                    name=\"ProjectId\"\r\n                    label=\"Project Name\"\r\n                    onChange={handleChange}\r\n                />\r\n                <FieldSelect\r\n                    value={typeof values.salesperson === \"string\" ? values.salesperson : values.salesperson?.id}\r\n                    request={getAllEmployees}\r\n                    itemTitleField=\"username\"\r\n                    itemValueField=\"id\"\r\n                    keyField=\"id\"\r\n                    name=\"salesperson\"\r\n                    label=\"Sales person\"\r\n                    onChange={handleChange}\r\n                />\r\n                <TextField\r\n                    value={values.leadTime}\r\n                    name=\"leadTime\"\r\n                    label=\"Lead Time\"\r\n                    onChange={handleChange}\r\n                    style={{ gridColumnEnd: \"span 2\" }}\r\n                />\r\n                <TextField\r\n                    value={values.note}\r\n                    style={{ gridColumnEnd: \"span 2\" }}\r\n                    name=\"note\"\r\n                    label=\"Note\"\r\n                    onChange={handleChange}\r\n                    multiline\r\n                    rows={3}\r\n                />\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const TermsTab = ({\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n}: {\r\n    values: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n}) => {\r\n    return (\r\n        <Box my={1} display=\"grid\" gridTemplateColumns=\"1fr\" gridRowGap={10}>\r\n            <ArraySelect\r\n                style={{ width: \"100%\" }}\r\n                value={values.status}\r\n                name=\"status\"\r\n                label=\"Quote Status\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                items={[\"New\", \"Pending\", \"Fulfiled\"]}\r\n            />\r\n            <TextField\r\n                style={{ width: \"100%\" }}\r\n                value={values.freightTerms}\r\n                name=\"freightTerms\"\r\n                label=\"Freight Terms\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n            <TextField\r\n                style={{ width: \"100%\" }}\r\n                value={values.paymentTerms}\r\n                name=\"paymentTerms\"\r\n                label=\"Payment Terms\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n            <FieldSelect\r\n                value={values.JobId ? values.JobId : \"\"}\r\n                request={getTickets}\r\n                itemTitleField=\"description\"\r\n                itemValueField=\"id\"\r\n                keyField=\"id\"\r\n                name=\"JobId\"\r\n                label=\"Job\"\r\n                onChange={handleChange}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const EntitiesTab = ({\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n}: {\r\n    values: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n}) => {\r\n    return (\r\n        <Box my={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr 1fr \" gridColumnGap={10}>\r\n            <Box my={1} display=\"grid\" gridTemplateColumns=\" 1fr \" gridRowGap={10}>\r\n                <FieldSelect\r\n                    value={typeof values.repOrAgency === \"string\" ? values.repOrAgency : values.repOrAgency?.id}\r\n                    getOptionList={(resp) => resp.result}\r\n                    request={getCustomers}\r\n                    itemTitleField=\"name\"\r\n                    itemValueField=\"id\"\r\n                    name=\"repOrAgency\"\r\n                    label=\"rep / Agency\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <TextField value={values.repOrAgency?.address} label=\"Address\" disabled />\r\n                <TextField\r\n                    value={values.repOrAgency?.city}\r\n                    name=\"city\"\r\n                    label=\"City\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    value={values.repOrAgency?.state}\r\n                    name=\"state\"\r\n                    label=\"State\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    value={values.repOrAgency?.zipcode}\r\n                    name=\"zipCode\"\r\n                    label=\"Zip Code\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n            </Box>\r\n            <Box my={1} display=\"grid\" gridTemplateColumns=\" 1fr \" gridRowGap={10}>\r\n                <TextField\r\n                    value={values.requesterName}\r\n                    name=\"requesterName\"\r\n                    label=\"Requester Name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <TextField\r\n                    value={values.requesterMail}\r\n                    name=\"requesterMail\"\r\n                    label=\"Requester Mail\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <TextField\r\n                    value={values.requesterPhone}\r\n                    name=\"requesterPhone\"\r\n                    label=\"Requester Phone\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <TextField style={{ opacity: 0 }} />\r\n                <TextField style={{ opacity: 0 }} />\r\n            </Box>\r\n            <Box my={1} display=\"grid\" gridTemplateColumns=\" 1fr \" gridRowGap={10}>\r\n                {/* <TextField\r\n                    value={values.client}\r\n                    name=\"client\"\r\n                    label=\"Client\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                /> */}\r\n                <FieldSelect\r\n                    value={typeof values.client === \"string\" ? values.client : values.client?.id}\r\n                    getOptionList={(resp) => resp.result}\r\n                    request={getCustomers}\r\n                    itemTitleField=\"name\"\r\n                    itemValueField=\"id\"\r\n                    name=\"client\"\r\n                    label=\"Client\"\r\n                    onChange={handleChange}\r\n                />\r\n                <TextField\r\n                    value={values.contact?.lastName}\r\n                    name=\"contactName\"\r\n                    label=\"Contact Name\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    value={values.contact?.email}\r\n                    name=\"email\"\r\n                    label=\"Email\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    value={values.contact?.lastName}\r\n                    name=\"phone\"\r\n                    label=\"Phone\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n                <TextField\r\n                    value={values.unitPricingLevel}\r\n                    name=\"Unit Pricing Level\"\r\n                    label=\"Unit Pricing Level\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const CommissionTab = ({\r\n    add,\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n}: {\r\n    add?: boolean;\r\n    values: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n}) => {\r\n    return (\r\n        <Box my={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridRowGap={10} gridGap={10}>\r\n            <TextField\r\n                style={{ gridColumnEnd: \"span 2\" }}\r\n                value={values.commissionLabel}\r\n                name=\"commissionLabel\"\r\n                label=\"Commission Rate\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n            <TextField\r\n                style={add ? { gridColumnEnd: \"span 2\" } : {}}\r\n                value={values.regularCommission}\r\n                name=\"regularCommission\"\r\n                label=\"Regular Commission %\"\r\n                type=\"number\"\r\n                placeholder=\"0.00%\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n            {!add && (\r\n                <TextField\r\n                    value={values.regularCommission * values.price * values.quantity}\r\n                    name=\"regularCommission\"\r\n                    label=\"Regular Commission $\"\r\n                    placeholder=\"0.00$\"\r\n                    // onChange={handleChange}\r\n                    // onBlur={handleBlur}\r\n                    disabled\r\n                />\r\n            )}\r\n            <TextField\r\n                style={{ gridColumnEnd: \"span 2\" }}\r\n                value={values.overageCommission}\r\n                name=\"overageCommission\"\r\n                label=\"Overage Commission\"\r\n                type=\"number\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n            />\r\n        </Box>\r\n    );\r\n};\r\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport { emphasize } from '../styles/colorManipulator';\nexport var styles = function styles(theme) {\n  var emphasis = theme.palette.type === 'light' ? 0.8 : 0.98;\n  var backgroundColor = emphasize(theme.palette.background.default, emphasis);\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, _defineProperty({\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      flexGrow: 1\n    }, theme.breakpoints.up('sm'), {\n      flexGrow: 'initial',\n      minWidth: 288\n    })),\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar SnackbarContent = /*#__PURE__*/React.forwardRef(function SnackbarContent(props, ref) {\n  var action = props.action,\n      classes = props.classes,\n      className = props.className,\n      message = props.message,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      other = _objectWithoutProperties(props, [\"action\", \"classes\", \"className\", \"message\", \"role\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 6,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, message), action ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SnackbarContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSnackbarContent'\n})(SnackbarContent);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nexport var styles = function styles(theme) {\n  var top1 = {\n    top: 8\n  };\n  var bottom1 = {\n    bottom: 8\n  };\n  var right = {\n    justifyContent: 'flex-end'\n  };\n  var left = {\n    justifyContent: 'flex-start'\n  };\n  var top3 = {\n    top: 24\n  };\n  var bottom3 = {\n    bottom: 24\n  };\n  var right3 = {\n    right: 24\n  };\n  var left3 = {\n    left: 24\n  };\n  var center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      zIndex: theme.zIndex.snackbar,\n      position: 'fixed',\n      display: 'flex',\n      left: 8,\n      right: 8,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'center' }}`. */\n    anchorOriginTopCenter: _extends({}, top1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, top3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'center' }}`. */\n    anchorOriginBottomCenter: _extends({}, bottom1, _defineProperty({}, theme.breakpoints.up('sm'), _extends({}, bottom3, center))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'right' }}`. */\n    anchorOriginTopRight: _extends({}, top1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, top3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'right' }}`. */\n    anchorOriginBottomRight: _extends({}, bottom1, right, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      left: 'auto'\n    }, bottom3, right3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'top', 'left' }}`. */\n    anchorOriginTopLeft: _extends({}, top1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, top3, left3))),\n\n    /* Styles applied to the root element if `anchorOrigin={{ 'bottom', 'left' }}`. */\n    anchorOriginBottomLeft: _extends({}, bottom1, left, _defineProperty({}, theme.breakpoints.up('sm'), _extends({\n      right: 'auto'\n    }, bottom3, left3)))\n  };\n};\nvar Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(props, ref) {\n  var action = props.action,\n      _props$anchorOrigin = props.anchorOrigin;\n  _props$anchorOrigin = _props$anchorOrigin === void 0 ? {\n    vertical: 'bottom',\n    horizontal: 'center'\n  } : _props$anchorOrigin;\n\n  var vertical = _props$anchorOrigin.vertical,\n      horizontal = _props$anchorOrigin.horizontal,\n      _props$autoHideDurati = props.autoHideDuration,\n      autoHideDuration = _props$autoHideDurati === void 0 ? null : _props$autoHideDurati,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      ClickAwayListenerProps = props.ClickAwayListenerProps,\n      ContentProps = props.ContentProps,\n      _props$disableWindowB = props.disableWindowBlurListener,\n      disableWindowBlurListener = _props$disableWindowB === void 0 ? false : _props$disableWindowB,\n      message = props.message,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      open = props.open,\n      resumeHideDuration = props.resumeHideDuration,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n  } : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"classes\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  var timerAutoHide = React.useRef();\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose.apply(void 0, arguments);\n    }\n  });\n  var setAutoHideTimer = useEventCallback(function (autoHideDurationParam) {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(function () {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(function () {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return function () {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  var handlePause = function handlePause() {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  var handleResume = React.useCallback(function () {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  var handleMouseEnter = function handleMouseEnter(event) {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  var handleMouseLeave = function handleMouseLeave(event) {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  var handleClickAway = function handleClickAway(event) {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n  };\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  React.useEffect(function () {\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return function () {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps), /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[\"anchorOrigin\".concat(capitalize(vertical)).concat(capitalize(horizontal))], className),\n    onMouseEnter: handleMouseEnter,\n    onMouseLeave: handleMouseLeave,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    onEnter: createChainedFunction(handleEnter, onEnter),\n    onEntered: onEntered,\n    onEntering: onEntering,\n    onExit: onExit,\n    onExited: createChainedFunction(handleExited, onExited),\n    onExiting: onExiting,\n    timeout: transitionDuration,\n    direction: vertical === 'top' ? 'down' : 'up'\n  }, TransitionProps), children || /*#__PURE__*/React.createElement(SnackbarContent, _extends({\n    message: message,\n    action: action\n  }, ContentProps)))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: PropTypes.any,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is entering.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired before the transition is exiting.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the transition has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the transition is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, `Snackbar` is open.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  flip: false,\n  name: 'MuiSnackbar'\n})(Snackbar);","import React from \"react\";\r\n\r\nimport { IContact } from \"../api/contact\";\r\nimport { IVendor } from \"../api/vendor\";\r\n\r\nexport default function PurchasePO({\r\n    contact,\r\n    lines,\r\n    sum,\r\n    vendor,\r\n}: {\r\n    vendor: IVendor;\r\n    contact: IContact;\r\n    lines: any;\r\n    sum: any;\r\n}) {\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    height: \"150px\",\r\n                    backgroundColor: \"#416364\",\r\n                    color: \"white\",\r\n                }}\r\n            >\r\n                <div>\r\n                    <div\r\n                        style={{\r\n                            fontSize: \"x-large\",\r\n                            textAlign: \"center\",\r\n                            marginBottom: \"10px\",\r\n                            marginTop: \"20px\",\r\n                        }}\r\n                    >\r\n                        Purchase Order\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <table\r\n                style={{\r\n                    width: \"100.1%\",\r\n                    border: \"2px solid #416364\",\r\n                    borderTop: \"none\",\r\n                    minHeight: \"150px\",\r\n                    borderBottom: \"none\",\r\n                }}\r\n            >\r\n                <tr\r\n                    style={{\r\n                        backgroundColor: \"#c4d69c\",\r\n                        width: \"100%\",\r\n                        height: \"26px\",\r\n                    }}\r\n                >\r\n                    <th>Purchase from: </th>\r\n                    <th>Ship to: </th>\r\n                </tr>\r\n                <tr className=\"minHeight\">\r\n                    <td>{vendor?.name}</td>\r\n                    <td>{`${contact?.firstName} ${contact?.lastName}`}</td>\r\n                </tr>\r\n            </table>\r\n            <table\r\n                style={{\r\n                    width: \"100.1%\",\r\n                    border: \"2px solid #416364\",\r\n                    borderTop: \"none\",\r\n                    minHeight: \"100px\",\r\n                    borderBottom: \"none\",\r\n                }}\r\n            >\r\n                <tr\r\n                    style={{\r\n                        backgroundColor: \"#c4d69c\",\r\n                        width: \"100%\",\r\n                        height: \"26px\",\r\n                    }}\r\n                >\r\n                    {/* <th>Phone</th>\r\n                            <th>Fax</th>\r\n                            <th>RMA No.</th>\r\n                            <th>Terms</th>\r\n                            <th>Date</th>\r\n                            <th>Ship via</th> */}\r\n                    <th>Shipping Method</th>\r\n                    <th>Payment Terms</th>\r\n                    <th>Required By Date</th>\r\n                </tr>\r\n                <tr>\r\n                    <td style={{ borderRight: \"2px solid #416364 \" }}></td>\r\n                    <td style={{ borderRight: \"2px solid #416364 \", width: \"20%\" }}></td>\r\n                    <td style={{ width: \"34%\" }}></td>\r\n                    {/* <td>123 456 789</td>\r\n                            <td>123 456 789</td>\r\n                            <td>123 456 789</td>\r\n                            <td> </td>\r\n                            <td>{createdPO?.createdAt?.slice(0, 10)}</td>\r\n                            <td> </td> */}\r\n                </tr>\r\n            </table>\r\n            <table\r\n                style={{\r\n                    width: \"100%\",\r\n                    border: \"2px solid #416364\",\r\n                    borderTop: \"none\",\r\n                    minHeight: \"650px\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    padding: \"0px\",\r\n                }}\r\n            >\r\n                <tr\r\n                    style={{\r\n                        backgroundColor: \"#c4d69c\",\r\n                        width: \"100%\",\r\n                        height: \"26px\",\r\n                        maxHeight: \"26px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-evenly\",\r\n                    }}\r\n                >\r\n                    {/* <th style={{ borderRight: \"1px solid black\" }}>Item</th> */}\r\n                    <th style={{ width: \"46%\" }}> Item Description</th>\r\n                    <th style={{ width: \"20%\" }}>Qty</th>\r\n                    <th style={{ width: \"17%\" }}>Price</th>\r\n                    <th style={{ width: \"17%\" }}>Amount</th>\r\n                </tr>\r\n                {lines.map((l: any, i: any) => (\r\n                    <tr\r\n                        key={i}\r\n                        style={{\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-evenly\",\r\n                        }}\r\n                    >\r\n                        {/* <td>{l.ItemId}</td> */}\r\n                        <td style={{ width: \"46%\", borderRight: \"2px solid #416364 \", verticalAlign: \"top\" }}>\r\n                            {l.description}\r\n                        </td>\r\n                        <td style={{ width: \"20%\", borderRight: \"2px solid #416364 \", verticalAlign: \"top\" }}>\r\n                            {l.quantity}\r\n                        </td>\r\n                        <td style={{ width: \"17%\", borderRight: \"2px solid #416364 \", verticalAlign: \"top\" }}>\r\n                            {l.price}\r\n                        </td>\r\n                        <td style={{ width: \"17%\", verticalAlign: \"top\" }}> {l.quantity * l.price} </td>\r\n                    </tr>\r\n                ))}\r\n                <tr style={{ width: \"100%\", display: \"flex\", justifyContent: \"space-between\", flexGrow: 1 }}>\r\n                    {/* <td>{l.ItemId}</td> */}\r\n                    <td style={{ width: \"46%\", borderRight: \"2px solid #416364 \", verticalAlign: \"top\" }}></td>\r\n                    <td style={{ width: \"20%\", borderRight: \"2px solid #416364 \", verticalAlign: \"top\" }}></td>\r\n                    <td style={{ width: \"17%\", borderRight: \"2px solid #416364 \", verticalAlign: \"top\" }}></td>\r\n                    <td style={{ width: \"17%\", verticalAlign: \"top\" }}></td>\r\n                </tr>\r\n            </table>\r\n            <div\r\n                style={{\r\n                    width: \"100%\",\r\n                    border: \"2px solid #416364\",\r\n                    borderTop: \"none\",\r\n                    minHeight: \"150px\",\r\n                    padding: \"10px 10px 10px 30px\",\r\n                }}\r\n            >\r\n                <div style={{ width: \"100%\", display: \"flex\", alignItems: \"center\" }}>\r\n                    <div style={{ flex: 3, display: \"flex\", flexDirection: \"column\", marginTop: \"20px\" }}>\r\n                        <strong> Approved By:</strong>\r\n                        <div style={{ display: \"flex\", marginTop: \"20px\", alignItems: \"center\" }}>\r\n                            X{\" \"}\r\n                            <div\r\n                                style={{\r\n                                    margin: \"15px 10px 10px 10px \",\r\n                                    borderBottom: \"2px solid black \",\r\n                                    width: \"300px\",\r\n                                }}\r\n                            ></div>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            flex: 1,\r\n                            padding: \" 5px 20px\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"start\",\r\n                        }}\r\n                    >\r\n                        <div>Subtotal : {sum}$</div>\r\n                        <div>Freight : {sum}$</div>\r\n                        <div>Sales Tax : {sum}$</div>\r\n                        <div style={{ fontWeight: \"bold\", width: \"100%\" }}>\r\n                            Order Total :\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    width: \"100%\",\r\n                                    height: \"auto\",\r\n                                    fontWeight: \"bold\",\r\n                                    backgroundColor: \"#c4d69c\",\r\n                                    borderBottom: \"1px solid black \",\r\n                                    padding: \"3px 10px\",\r\n                                }}\r\n                            >\r\n                                {sum}$\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport useSWR from \"swr\";\r\n\r\nimport CheckBox from \"@material-ui/core/Checkbox\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport TextField from \"../../../app/TextField\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Tabs, Tab } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport DeleteRounded from \"@material-ui/icons/DeleteRounded\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport { BasePaper } from \"../../../app/Paper\";\r\n\r\nimport { getPPOTypes } from \"../../../api/purchasePoType\";\r\n\r\nimport BootstrapTextField from \"../../../app/TextField\";\r\n\r\nimport { getContacts, IContact } from \"../../../api/contact\";\r\nimport { getAllEmployees, IEmployee } from \"../../../api/employee\";\r\nimport { IPurchasePOComplete, createPurchasePOComplete, IPurchasePO } from \"../../../api/purchasePO\";\r\nimport { getVendors, IVendor } from \"../../../api/vendor\";\r\nimport { ILineItem } from \"../../../api/lineItem\";\r\nimport { createAModelDocument } from \"../../../api/document\";\r\n\r\nimport { FieldSelect, ArraySelect } from \"../../../app/Inputs\";\r\nimport Button from \"../../../app/Button\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\n\r\nimport { exportPdf } from \"../../../logic/pdf\";\r\n\r\nimport \"../../../styles/splash.css\";\r\nimport { getSO, ISOComplete } from \"../../../api/so\";\r\nimport { IQuoteComplete } from \"../../../api/quote\";\r\n\r\nimport PurchasePO from \"../../../PDFTemplates/PurchasePO\";\r\nimport { getFieldServices } from \"../../../api/fieldService\";\r\nimport { ILineService } from \"../../../api/lineService\";\r\nimport { formatTimestampToDate } from \"../../../logic/date\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { IItem } from \"../../../api/items\";\r\nimport { getAllUnits } from \"../../../api/units\";\r\n\r\nexport const DocumentForm = ({\r\n    createdPO,\r\n    data,\r\n    onDone,\r\n}: {\r\n    onDone: () => void;\r\n    data: IPurchasePOComplete;\r\n    createdPO: IPurchasePO;\r\n}) => {\r\n    const divToPrint = useRef<HTMLElement | null>();\r\n    const [contact, setContact] = useState<IContact>();\r\n    const [vendor, setVendor] = useState<IVendor>();\r\n    const [requester, setRequester] = useState<IEmployee>();\r\n\r\n    const [canSave, setCanSave] = useState(false);\r\n    const [isUploading, setIsUploading] = useState(false);\r\n\r\n    let sum = 0;\r\n    data.lines.forEach((l) => (sum += l.price * l.quantity));\r\n\r\n    const setData = async () => {\r\n        try {\r\n            const contacts = await getContacts();\r\n            const vendors = await getVendors();\r\n            const emps = await getAllEmployees();\r\n\r\n            let fcontact = contacts.find((c: any) => c.id === data.ContactId);\r\n            setContact(fcontact);\r\n\r\n            let fvendor = vendors.find((v: any) => v.id === data.VendorId);\r\n            setVendor(fvendor);\r\n\r\n            let femp = emps.find((e: any) => e.id === data.requester);\r\n            setRequester(femp);\r\n\r\n            if (fcontact && fvendor && femp) {\r\n                setCanSave(true);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setData();\r\n    }, []);\r\n\r\n    const handleSaveDocument = async () => {\r\n        try {\r\n            setCanSave(false);\r\n            setIsUploading(true);\r\n            if (divToPrint.current && createdPO.id) {\r\n                const generatedPdf = await exportPdf(divToPrint.current);\r\n\r\n                console.log(generatedPdf);\r\n                const resp = await createAModelDocument(\r\n                    \"purchasePO\",\r\n                    createdPO.id,\r\n                    generatedPdf,\r\n                    `${new Date().toJSON().slice(0, 19)} - ${createdPO.number}`,\r\n                    `PO_${createdPO.number}.pdf`\r\n                );\r\n                if (resp) {\r\n                    onDone();\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setCanSave(true);\r\n            setIsUploading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Typography>We made a pdf from your PO, now you can save it</Typography>\r\n            <div style={{ height: 400, overflowY: \"auto\" }}>\r\n                <div id=\"myMm\" style={{ height: \"1mm\" }} />\r\n                <div\r\n                    id=\"divToPrint\"\r\n                    ref={(e) => (divToPrint.current = e)}\r\n                    style={{\r\n                        backgroundColor: \"#fff\",\r\n                        color: \"black\",\r\n                        width: \"835px\",\r\n                        marginLeft: \"auto\",\r\n                        marginRight: \"auto\",\r\n                        minHeight: \"1200px\",\r\n                    }}\r\n                >\r\n                    <PurchasePO vendor={vendor as any} contact={contact as any} lines={data.lines} sum={sum} />\r\n                </div>\r\n            </div>\r\n            <Box textAlign=\"right\">\r\n                <Button disabled={!canSave} kind=\"add\" onClick={handleSaveDocument}>\r\n                    Save\r\n                </Button>\r\n                {isUploading && <LinearProgress />}\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const FinalForm = ({\r\n    onDone,\r\n    onBack,\r\n    data,\r\n}: {\r\n    onDone: (a: any) => void;\r\n    onBack: () => void;\r\n    data: IPurchasePOComplete;\r\n}) => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState<string>();\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            // const { ContactId, requester, status, VendorId, lines } = data;\r\n            const { lines } = data;\r\n            let newLines = [...lines];\r\n            newLines.forEach(function (v: any) {\r\n                delete v.createdAt;\r\n                delete v.id;\r\n                delete v.PurchasePOId;\r\n                delete v.PurchaseSOId;\r\n                delete v.QuoteId;\r\n                delete v.SOId;\r\n                delete v.updatedAt;\r\n            });\r\n            const resp = await createPurchasePOComplete({\r\n                ...data,\r\n                lines: newLines,\r\n            } as IPurchasePOComplete);\r\n            if (resp) {\r\n                console.log(resp);\r\n                onDone(resp);\r\n            }\r\n        } catch (error: any) {\r\n            console.log(error);\r\n            console.log(error.response.data.error);\r\n            setError(error.response.data.error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box height=\"85%\" display=\"flex\" flexDirection=\"column\">\r\n            <Typography variant=\"h5\">Are you sure?</Typography>\r\n            <Typography variant=\"subtitle1\" style={{ margin: \"1em 0\" }}>\r\n                If you finilize your Purchase order, You can't update it, So if you want to update it you should make\r\n                new version or add new one\r\n            </Typography>\r\n            {error && <Alert severity=\"error\">{error}</Alert>}\r\n            {loading && <LinearProgress />}\r\n            <div style={{ flexGrow: 1 }} />\r\n            <Box display=\"flex\" justifyContent=\"space-between\" mt={4}>\r\n                <Button disabled={loading} onClick={onBack} color=\"secondary\" variant=\"contained\">\r\n                    Back to lines\r\n                </Button>\r\n                <Button disabled={loading} onClick={handleSubmit} color=\"primary\" variant=\"contained\">\r\n                    Finilize\r\n                </Button>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const LinesForm = ({\r\n    onDone,\r\n    onBack,\r\n    data,\r\n    devices,\r\n}: {\r\n    data?: IPurchasePOComplete | ISOComplete | IQuoteComplete;\r\n    onDone: (items: ILineItem[]) => void;\r\n    onBack: () => void;\r\n    devices?: IItem[];\r\n}) => {\r\n    const [createdItems, setCreatedItems] = useState<ILineItem[]>(data && data.lines ? data.lines : []);\r\n    const [selectedItem, setSelectedItem] = useState<IItem>();\r\n    const { data: items } = useSWR<{ total: number; result: any[] }>(\"/item\");\r\n    const { data: services } = useSWR(selectedItem ? `/service?ItemId=${selectedItem.id}` : \"/service\");\r\n\r\n    const schema = Yup.object().shape({\r\n        ItemId: Yup.string().when(\"fru\", {\r\n            is: undefined,\r\n            then: Yup.string().required(),\r\n            otherwise: Yup.string(),\r\n        }),\r\n        quantity: Yup.number().required().min(1),\r\n        price: Yup.number().required().min(0.0001),\r\n    });\r\n\r\n    const handleSubmit = (d: ILineItem) => {\r\n        if (d) {\r\n            setCreatedItems((prev) => prev.concat(d));\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (index: number) => {\r\n        setCreatedItems((prev) => prev.filter((item: any, ind) => ind !== index));\r\n    };\r\n\r\n    const handleNext = () => {\r\n        const res = [...createdItems];\r\n        res.forEach((_line, index) => {\r\n            res[index].services = res[index].services?.map((s) => ({\r\n                ServiceId: s.id,\r\n                price: s.price,\r\n                quantity: 1,\r\n            }));\r\n        });\r\n        onDone(res);\r\n    };\r\n\r\n    return (\r\n        <Box display=\"flex\">\r\n            <Box flex={1} mr={2}>\r\n                <Formik initialValues={{} as ILineItem} validationSchema={schema} onSubmit={handleSubmit}>\r\n                    {({ values, handleChange, setFieldValue, handleBlur, errors }) => (\r\n                        <Form>\r\n                            <Box display=\"grid\" gridTemplateColumns=\"1fr\" gridRowGap={10}>\r\n                                <Autocomplete\r\n                                    options={devices ? devices : items ? items.result : []}\r\n                                    getOptionLabel={(item: any) => (devices ? item.number.name : item.name)}\r\n                                    onChange={(e, nv) => setFieldValue(\"ItemId\", devices ? nv.number.id : nv.id)}\r\n                                    onBlur={handleBlur}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Item\" name=\"ItemId\" />}\r\n                                    fullWidth\r\n                                />\r\n                                {errors.ItemId && <Typography variant=\"caption\">{errors.ItemId}</Typography>}\r\n                                <Autocomplete\r\n                                    options={services || []}\r\n                                    getOptionLabel={(item: any) => item.name}\r\n                                    onChange={(e, nv) => {\r\n                                        setFieldValue(\"services\", nv);\r\n                                        setSelectedItem(nv.length > 0 ? nv[nv.length - 1] : undefined);\r\n                                    }}\r\n                                    onBlur={handleBlur}\r\n                                    renderInput={(params) => <TextField {...params} label=\"Services\" name=\"services\" />}\r\n                                    fullWidth\r\n                                    freeSolo\r\n                                    multiple\r\n                                />\r\n                                {errors.services && <Typography variant=\"caption\">{errors.services}</Typography>}\r\n                                <BootstrapTextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    name=\"description\"\r\n                                    label=\"Description\"\r\n                                    value={values.description}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    error={Boolean(errors.description)}\r\n                                />\r\n                                <BootstrapTextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    name=\"quantity\"\r\n                                    label=\"Quantity\"\r\n                                    value={values.quantity}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    error={Boolean(errors.quantity)}\r\n                                />\r\n                                <BootstrapTextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    name=\"price\"\r\n                                    label=\"Price\"\r\n                                    value={values.price}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    error={Boolean(errors.price)}\r\n                                />\r\n                                <BootstrapTextField\r\n                                    style={{ width: \"100%\" }}\r\n                                    name=\"index\"\r\n                                    label=\"Index\"\r\n                                    value={values.index}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    error={Boolean(errors.index)}\r\n                                />\r\n                                <FieldSelect\r\n                                    value={typeof values.fru === \"string\" ? values.fru : values.fru}\r\n                                    name=\"fru\"\r\n                                    label=\"FRU\"\r\n                                    request={getAllUnits}\r\n                                    getOptionList={(resp) => resp.result}\r\n                                    itemTitleField=\"number\"\r\n                                    itemValueField=\"id\"\r\n                                    onChange={(e) => handleChange(e)}\r\n                                    onBlur={handleBlur}\r\n                                />\r\n                                <FormControlLabel\r\n                                    style={{ width: \"100%\" }}\r\n                                    checked={values.tax}\r\n                                    label=\"Tax\"\r\n                                    name=\"tax\"\r\n                                    onChange={handleChange}\r\n                                    control={<CheckBox />}\r\n                                />\r\n                                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                                    <Button\r\n                                        startIcon={<ChevronLeft />}\r\n                                        onClick={onBack}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Back\r\n                                    </Button>\r\n                                    <Button style={{ margin: \"0 0.5em\" }} type=\"submit\" kind={\"add\"}>\r\n                                        Submit\r\n                                    </Button>\r\n                                    <Button\r\n                                        endIcon={<ChevronRight />}\r\n                                        onClick={handleNext}\r\n                                        disabled={createdItems.length === 0}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        Next\r\n                                    </Button>\r\n                                </Box>\r\n                            </Box>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Box>\r\n            <Box flex={1}>\r\n                <TableContainer component={Paper} style={{ maxHeight: 500, overflowY: \"auto\" }}>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Index</TableCell>\r\n                                {/* <TableCell>Item Name</TableCell> */}\r\n                                <TableCell>Description</TableCell>\r\n                                <TableCell>Quantity</TableCell>\r\n                                <TableCell>Price</TableCell>\r\n                                <TableCell>Tax</TableCell>\r\n                                <TableCell></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {createdItems.map((item: any, i: number) => (\r\n                                <TableRow>\r\n                                    <TableCell>{item.id}</TableCell>\r\n                                    {/* <TableCell>{item.name}</TableCell> */}\r\n                                    <TableCell>{item.description}</TableCell>\r\n                                    <TableCell>{item.quantity}</TableCell>\r\n                                    <TableCell>{item.price}</TableCell>\r\n                                    <TableCell>{item.tax}</TableCell>\r\n                                    <TableCell>\r\n                                        <IconButton onClick={() => handleDelete(i)}>\r\n                                            <DeleteRounded htmlColor=\"red\" />\r\n                                        </IconButton>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const LineServicesForm = ({\r\n    onDone,\r\n    onBack,\r\n    data,\r\n}: {\r\n    data?: IPurchasePOComplete | ISOComplete | IQuoteComplete;\r\n    onDone: (items: ILineService[]) => void;\r\n    onBack: () => void;\r\n}) => {\r\n    const { data: lineItems } = useSWR(data && data.id ? `/lineitem?QuoteId=${data.id}` : null);\r\n    const [createdItems, setCreatedItems] = useState<ILineService[]>(\r\n        data && data.lineServices ? data.lineServices : []\r\n    );\r\n\r\n    const schema = Yup.object().shape({\r\n        ServiceId: Yup.string().required(),\r\n        quantity: Yup.number().required().min(1),\r\n        price: Yup.number().required().min(0.1),\r\n    });\r\n\r\n    const handleSubmit = (d: ILineService) => {\r\n        if (d) {\r\n            setCreatedItems((prev) => prev.concat(d));\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (index: number) => {\r\n        setCreatedItems((prev) => prev.filter((item: any, ind) => ind !== index));\r\n    };\r\n\r\n    return (\r\n        <Box>\r\n            <Box display=\"flex\">\r\n                <Box flex={1} mr={2}>\r\n                    <Formik initialValues={{} as ILineService} validationSchema={schema} onSubmit={handleSubmit}>\r\n                        {({ values, handleChange, setFieldValue, handleBlur, errors }) => (\r\n                            <Form>\r\n                                <Box display=\"grid\" gridTemplateColumns=\"1fr\" gridRowGap={10}>\r\n                                    <FieldSelect\r\n                                        request={getFieldServices}\r\n                                        itemTitleField=\"name\"\r\n                                        itemValueField=\"id\"\r\n                                        value={values?.ServiceId as any}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        error={Boolean(errors.ServiceId)}\r\n                                        name=\"ServiceId\"\r\n                                        label=\"Service\"\r\n                                        fullWidth\r\n                                        // renderInput={(params) => (\r\n                                        //     <TextField\r\n                                        //         {...params}\r\n                                        //         size=\"small\"\r\n                                        //         label=\"Line Item\"\r\n                                        //         name=\"LineItemRecordId\"\r\n                                        //     />\r\n                                        // )}\r\n                                    />\r\n                                    {lineItems && (\r\n                                        <Autocomplete\r\n                                            disabled={!lineItems}\r\n                                            // value={values?.LineItemRecordId}\r\n                                            options={lineItems ? lineItems : []}\r\n                                            getOptionLabel={(item: any) => item.ItemId.name}\r\n                                            onChange={(e, nv: any) => setFieldValue(\"LineItemRecordId\", nv?.id)}\r\n                                            onBlur={handleBlur}\r\n                                            fullWidth\r\n                                            renderInput={(params) => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    size=\"small\"\r\n                                                    label=\"Line Item\"\r\n                                                    name=\"LineItemRecordId\"\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    )}\r\n                                    <TextField\r\n                                        size=\"small\"\r\n                                        name=\"description\"\r\n                                        label=\"Description\"\r\n                                        value={values.description}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        error={Boolean(errors.description)}\r\n                                    />\r\n                                    <TextField\r\n                                        size=\"small\"\r\n                                        name=\"quantity\"\r\n                                        label=\"Quantity\"\r\n                                        value={values.quantity}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        error={Boolean(errors.quantity)}\r\n                                    />\r\n                                    <TextField\r\n                                        size=\"small\"\r\n                                        name=\"price\"\r\n                                        label=\"Price\"\r\n                                        value={values.price}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                        error={Boolean(errors.price)}\r\n                                    />\r\n                                    <FormControlLabel\r\n                                        checked={values.tax}\r\n                                        label=\"Tax\"\r\n                                        name=\"tax\"\r\n                                        onChange={handleChange}\r\n                                        control={<CheckBox />}\r\n                                    />\r\n                                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                                        <Button\r\n                                            startIcon={<ChevronLeft />}\r\n                                            onClick={onBack}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        >\r\n                                            Back\r\n                                        </Button>\r\n                                        <Button style={{ margin: \"0 0.5em\" }} type=\"submit\" kind={\"add\"}>\r\n                                            Submit\r\n                                        </Button>\r\n                                        <Button\r\n                                            endIcon={<ChevronRight />}\r\n                                            onClick={() => {\r\n                                                onDone(createdItems);\r\n                                            }}\r\n                                            disabled={createdItems.length === 0}\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        >\r\n                                            Next\r\n                                        </Button>\r\n                                    </Box>\r\n                                </Box>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </Box>\r\n                <Box flex={1}>\r\n                    <TableContainer component={Paper} style={{ maxHeight: 500, overflowY: \"auto\" }}>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell>Index</TableCell>\r\n                                    <TableCell>Service Name</TableCell>\r\n                                    <TableCell>Line Item</TableCell>\r\n                                    <TableCell>Description</TableCell>\r\n                                    <TableCell>Quantity</TableCell>\r\n                                    <TableCell>Price</TableCell>\r\n                                    <TableCell>Tax</TableCell>\r\n                                    <TableCell></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {createdItems.map((item: any, i: number) => (\r\n                                    <TableRow>\r\n                                        <TableCell>{i}</TableCell>\r\n                                        <TableCell>{item.ServiceId}</TableCell>\r\n                                        <TableCell>{item.LineItemRecordId}</TableCell>\r\n                                        <TableCell>{item.description}</TableCell>\r\n                                        <TableCell>{item.quantity}</TableCell>\r\n                                        <TableCell>{item.price}</TableCell>\r\n                                        <TableCell>{item.tax}</TableCell>\r\n                                        <TableCell>\r\n                                            <IconButton onClick={() => handleDelete(i)}>\r\n                                                <DeleteRounded htmlColor=\"red\" />\r\n                                            </IconButton>\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport const CreateForm = ({ onDone, data }: { data?: any; onDone: (data: IPurchasePOComplete) => void }) => {\r\n    const schema = Yup.object().shape({\r\n        // requester: Yup.string().required(),\r\n        // VendorId: Yup.string().required(),\r\n        // ContactId: Yup.string().required(),\r\n    });\r\n\r\n    const handleSubmit = (d: any) => {\r\n        onDone(d);\r\n    };\r\n    const [activeMoreTab, setActiveMoreTab] = useState(0);\r\n\r\n    return (\r\n        <Formik initialValues={data ? data : ({} as any)} validationSchema={schema} onSubmit={handleSubmit}>\r\n            {({ values, errors, handleChange, handleBlur, setFieldValue }) => (\r\n                <Form>\r\n                    <Box display=\"flex\">\r\n                        <BasePaper\r\n                            style={{\r\n                                boxShadow: \"rgba(0, 0, 0, 0.08) 0px 4px 12px\",\r\n                                height: \"100%\",\r\n                                flex: \"2\",\r\n                            }}\r\n                        >\r\n                            <Box\r\n                                display=\"grid\"\r\n                                gridTemplateColumns=\"1fr 1fr\"\r\n                                gridRowGap={10}\r\n                                gridColumnGap={10}\r\n                                flex={2}\r\n                            >\r\n                                <FieldSelect\r\n                                    request={getPPOTypes}\r\n                                    itemTitleField=\"name\"\r\n                                    itemValueField=\"id\"\r\n                                    name=\"purchasePOTypeId\"\r\n                                    label=\"PO Type\"\r\n                                    fullWidth\r\n                                    onChange={handleChange}\r\n                                    value={\r\n                                        typeof values.purchasePOTypeId === \"string\"\r\n                                            ? values.purchasePOTypeId\r\n                                            : values.purchasePOTypeId?.id\r\n                                    }\r\n                                    error={Boolean(errors.purchasePOTypeId)}\r\n                                />\r\n                                <FieldSelect\r\n                                    itemValueField=\"id\"\r\n                                    itemTitleField=\"number\"\r\n                                    request={getSO}\r\n                                    name=\"SOId\"\r\n                                    value={typeof values.SOId === \"string\" ? values.SOId : values.SOId?.id}\r\n                                    onBlur={handleBlur}\r\n                                    onChange={handleChange}\r\n                                    error={Boolean(errors.SOId)}\r\n                                    label=\"SO ID\"\r\n                                />\r\n                                <FieldSelect\r\n                                    style={{ width: \"100%\" }}\r\n                                    request={getVendors}\r\n                                    itemTitleField=\"name\"\r\n                                    itemValueField=\"id\"\r\n                                    name=\"VendorId\"\r\n                                    label=\"Vendor\"\r\n                                    value={values.VendorId}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    error={Boolean(errors.VendorId)}\r\n                                />\r\n                                <TextField label=\"Approved By\" value={values.approvedBy?.username} fullWidth disabled />\r\n\r\n                                <ArraySelect\r\n                                    items={[\r\n                                        \"Quoted\",\r\n                                        \"Pending\",\r\n                                        \"Printed\",\r\n                                        \"Closed\",\r\n                                        \"Acknowledged\",\r\n                                        \"Shipped\",\r\n                                        \"Received\",\r\n                                        \"Canceled\",\r\n                                        \"On Hold\",\r\n                                    ]}\r\n                                    name=\"status\"\r\n                                    label=\"PO Status\"\r\n                                    value={values.status}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    error={Boolean(errors.status)}\r\n                                    fullWidth\r\n                                />\r\n                                <TextField\r\n                                    name=\"terms\"\r\n                                    label=\"Terms\"\r\n                                    value={values.terms}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    error={Boolean(errors.terms)}\r\n                                    fullWidth\r\n                                />\r\n                                <TextField\r\n                                    style={{ gridColumnEnd: \"span 2\" }}\r\n                                    name=\"note\"\r\n                                    value={values.note}\r\n                                    label=\"PO note\"\r\n                                    multiline\r\n                                    rows={4}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                />\r\n                            </Box>\r\n                        </BasePaper>\r\n                        <Box flex={3}>\r\n                            <BasePaper\r\n                                style={{\r\n                                    boxShadow: \"rgba(0, 0, 0, 0.08) 0px 4px 12px\",\r\n                                    margin: \"0 1em\",\r\n                                    height: \"100%\",\r\n                                }}\r\n                            >\r\n                                <Tabs\r\n                                    textColor=\"primary\"\r\n                                    value={activeMoreTab}\r\n                                    onChange={(e, nv) => setActiveMoreTab(nv)}\r\n                                    variant=\"scrollable\"\r\n                                    style={{ maxWidth: 700 }}\r\n                                >\r\n                                    <Tab label=\"More Info\" />\r\n                                    <Tab label=\"Addresses\" />\r\n                                </Tabs>\r\n                                <Box>\r\n                                    {activeMoreTab === 0 && (\r\n                                        <MoreInfoForm\r\n                                            errors={errors}\r\n                                            values={values}\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                            setFieldValue={setFieldValue}\r\n                                            addForm={true}\r\n                                        />\r\n                                    )}\r\n                                    {activeMoreTab === 1 && (\r\n                                        <AddressesForm\r\n                                            values={values}\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                        />\r\n                                    )}\r\n                                </Box>\r\n                            </BasePaper>\r\n                        </Box>\r\n                    </Box>\r\n                    <Box style={{ display: \"flex\", width: \"100%\", justifyContent: \"center\" }}>\r\n                        <Button type=\"submit\" kind=\"add\" style={{ margin: \"0.5em auto\" }}>\r\n                            Next\r\n                        </Button>\r\n                    </Box>\r\n                    {/* <Box display=\"grid\" gridTemplateColumns=\"auto\" gridGap={8}>\r\n                        <FieldSelect\r\n                        style={{ width: \"100%\" }}\r\n                        request={getAllEmployees}\r\n                        itemTitleField=\"username\"\r\n                        itemValueField=\"id\"\r\n                        name=\"requester\"\r\n                        label=\"Requester\"\r\n                        value={values.requester}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        error={Boolean(errors.requester)}\r\n                        />\r\n                        {errors.requester && <Typography variant=\"caption\">{errors.requester}</Typography>}\r\n                        <FieldSelect\r\n                        style={{ width: \"100%\" }}\r\n                        request={getVendors}\r\n                            itemTitleField=\"name\"\r\n                            itemValueField=\"id\"\r\n                            name=\"VendorId\"\r\n                            label=\"Vendor\"\r\n                            value={values.VendorId}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            error={Boolean(errors.VendorId)}\r\n                        />\r\n                        {errors.VendorId && <Typography variant=\"caption\">{errors.VendorId}</Typography>}\r\n                        <FieldSelect\r\n                            style={{ width: \"100%\" }}\r\n                            request={getContacts}\r\n                            itemTitleField=\"lastName\"\r\n                            itemValueField=\"id\"\r\n                            name=\"ContactId\"\r\n                            label=\"Contact\"\r\n                            value={values.ContactId}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            error={Boolean(errors.ContactId)}\r\n                        />\r\n                        {errors.ContactId && <Typography variant=\"caption\">{errors.ContactId}</Typography>}\r\n                        <ArraySelect\r\n                            items={[\"completed\", \"shipped\", \"pending\"]}\r\n                            name=\"status\"\r\n                            label=\"status\"\r\n                            value={values.status}\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            error={Boolean(errors.status)}\r\n                            fullWidth\r\n                        />\r\n                        \r\n                    </Box> */}\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport const UpdateForm = ({\r\n    values,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n}: {\r\n    values: any;\r\n    handleChange: any;\r\n    handleBlur: any;\r\n    errors: any;\r\n}) => {\r\n    return (\r\n        <>\r\n            <Paper\r\n                style={{\r\n                    margin: \"0.5em 0 2em 0\",\r\n                    padding: \"0.5em\",\r\n                    backgroundColor: \"#eee\",\r\n                    gridColumnEnd: \"span 3\",\r\n                    display: \"grid\",\r\n                    gridTemplateColumns: \"1fr 1fr 1fr\",\r\n                    columnGap: \"15px\",\r\n                }}\r\n            >\r\n                <FormControlLabel\r\n                    style={{ width: \"100%\" }}\r\n                    checked={values.approved}\r\n                    label=\"Approved\"\r\n                    name=\"approved\"\r\n                    onChange={handleChange}\r\n                    control={<CheckBox />}\r\n                />\r\n            </Paper>\r\n            <Box my={2} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridRowGap={10} gridColumnGap={10}>\r\n                <TextField\r\n                    name=\"number\"\r\n                    label=\"PO ID\"\r\n                    value={values.number}\r\n                    style={{ gridColumnEnd: \"span 2\" }}\r\n                    disabled\r\n                />\r\n                <FieldSelect\r\n                    request={getPPOTypes}\r\n                    itemTitleField=\"name\"\r\n                    itemValueField=\"id\"\r\n                    name=\"purchasePOTypeId\"\r\n                    label=\"PO Type\"\r\n                    fullWidth\r\n                    onChange={handleChange}\r\n                    value={\r\n                        typeof values.purchasePOTypeId === \"string\"\r\n                            ? values.purchasePOTypeId\r\n                            : values.purchasePOTypeId?.id\r\n                    }\r\n                    error={Boolean(errors.purchasePOTypeId)}\r\n                />\r\n                <TextField label=\"So Number\" value={values.SOId?.number} fullWidth disabled />\r\n                <TextField label=\"Vendor\" value={values.VendorId?.name} fullWidth disabled />\r\n                <TextField label=\"Approved By\" value={values.approvedBy?.username} fullWidth disabled />\r\n\r\n                <ArraySelect\r\n                    items={[\r\n                        \"Quoted\",\r\n                        \"Pending\",\r\n                        \"Printed\",\r\n                        \"Closed\",\r\n                        \"Acknowledged\",\r\n                        \"Shipped\",\r\n                        \"Received\",\r\n                        \"Canceled\",\r\n                        \"On Hold\",\r\n                    ]}\r\n                    name=\"status\"\r\n                    label=\"PO Status\"\r\n                    value={values.status}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.status)}\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    name=\"terms\"\r\n                    label=\"Terms\"\r\n                    value={values.terms}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.terms)}\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    style={{ gridColumnEnd: \"span 2\" }}\r\n                    value={values.note}\r\n                    name=\"note\"\r\n                    label=\"PO note\"\r\n                    multiline\r\n                    rows={4}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                />\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const MoreInfoForm = ({\r\n    values,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    addForm,\r\n}: {\r\n    values: any;\r\n    handleChange: any;\r\n    handleBlur: any;\r\n    errors: any;\r\n    setFieldValue: any;\r\n    addForm?: boolean;\r\n}) => {\r\n    return (\r\n        <>\r\n            <Box my={2} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridRowGap={10} gridColumnGap={10}>\r\n                {!addForm && <TextField label=\"PO Date\" value={formatTimestampToDate(values.createdAt)} disabled />}\r\n                <DateTimePicker\r\n                    size=\"small\"\r\n                    value={values.acknowledgeDate}\r\n                    name=\"acknowledgeDate\"\r\n                    label=\"Vendor Acknowledged Date\"\r\n                    onChange={(date) => setFieldValue(\" acknowledgeDate\", date)}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <DateTimePicker\r\n                    size=\"small\"\r\n                    value={values.estShipDate}\r\n                    name=\"estShipDate\"\r\n                    label=\"Estimated ship date\"\r\n                    onChange={(date) => setFieldValue(\"estShipDate\", date)}\r\n                    onBlur={handleBlur}\r\n                />\r\n                <DateTimePicker\r\n                    size=\"small\"\r\n                    value={values.actShipDate}\r\n                    name=\"actShipDate\"\r\n                    label=\"Actual ship date\"\r\n                    onChange={(date) => setFieldValue(\"actShipDate\", date)}\r\n                    onBlur={handleBlur}\r\n                />\r\n                {!addForm && (\r\n                    <TextField\r\n                        label=\"Approved Date\"\r\n                        value={formatTimestampToDate(values.approvedDate)}\r\n                        fullWidth\r\n                        disabled\r\n                    />\r\n                )}\r\n\r\n                <TextField\r\n                    name=\"requiredBy\"\r\n                    label=\"Required By\"\r\n                    value={values.requiredBy}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={Boolean(errors.requiredBy)}\r\n                    fullWidth\r\n                    type=\"number\"\r\n                />\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const AddressesForm = ({\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n}: {\r\n    values: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n}) => {\r\n    const [activeTab, setActiveTab] = useState(0);\r\n\r\n    return (\r\n        <>\r\n            <Tabs\r\n                textColor=\"primary\"\r\n                value={activeTab}\r\n                onChange={(e, nv) => setActiveTab(nv)}\r\n                variant=\"scrollable\"\r\n                style={{ maxWidth: 600 }}\r\n            >\r\n                <Tab label=\"Billing Address\" />\r\n                <Tab label=\"Shipping Address\" />\r\n            </Tabs>\r\n            {activeTab === 0 && (\r\n                <Box my={1} display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridGap={10} gridRowGap={10}>\r\n                    <TextField\r\n                        value={values.billingAddressCompany}\r\n                        name=\"billingAddressCompany\"\r\n                        label=\"Company\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.billingAddressAttn}\r\n                        name=\"billingAddressAttn\"\r\n                        label=\"Attn\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n\r\n                    <TextField\r\n                        value={values.billingAddressAddress}\r\n                        name=\"billingAddressAddress\"\r\n                        label=\"Billing Address\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.billingAddressCity}\r\n                        name=\"billingAddressCity\"\r\n                        label=\"City\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.billingAddressState}\r\n                        name=\"billingAddressState\"\r\n                        label=\"State\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.billingAddressZipcode}\r\n                        name=\"billingAddressZipcode\"\r\n                        label=\"Zip Code\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.billingAddressCountry}\r\n                        name=\"billingAddressCountry\"\r\n                        label=\"Country\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.billingAddressPhone}\r\n                        name=\"billingAddressPhone\"\r\n                        label=\"Billing Phone\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.billingAddressEmail}\r\n                        name=\"billingAddressEmail\"\r\n                        label=\"Billing Email\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        style={{ gridColumnEnd: \"span 2\" }}\r\n                    />\r\n                </Box>\r\n            )}\r\n            {activeTab === 1 && (\r\n                <Box\r\n                    my={1}\r\n                    display=\"grid\"\r\n                    gridTemplateColumns=\"1fr 1fr\"\r\n                    gridGap={10}\r\n                    gridRowGap={10}\r\n                    gridColumnGap={10}\r\n                >\r\n                    <TextField\r\n                        value={values.shippingAddressCompany}\r\n                        name=\"shippingAddressCompany\"\r\n                        label=\"Company\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressAttn}\r\n                        name=\"shippingAddressAttn\"\r\n                        label=\"Attn\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressAddress}\r\n                        label=\"Shipping Address\"\r\n                        name=\"shippingAddressAddress\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressCity}\r\n                        name=\"shippingAddressCity\"\r\n                        label=\"City\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressState}\r\n                        name=\"shippingAddressState\"\r\n                        label=\"State\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressZipcode}\r\n                        name=\"shippingAddressZipcode\"\r\n                        label=\"Zip Code\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressCountry}\r\n                        name=\"shippingAddressCountry\"\r\n                        label=\"Country\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressPhone}\r\n                        name=\"shippingAddressPhone\"\r\n                        label=\"Shipping Phone\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                    />\r\n                    <TextField\r\n                        value={values.shippingAddressEmail}\r\n                        name=\"shippingAddressEmail\"\r\n                        label=\"Shipping Email\"\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        style={{ gridColumnEnd: \"span 2\" }}\r\n                    />\r\n                </Box>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport const VendorForm = ({\r\n    handleChange,\r\n    handleBlur,\r\n    values,\r\n}: {\r\n    values: any;\r\n    handleChange: (a: any) => void;\r\n    handleBlur: (a: any) => void;\r\n}) => {\r\n    return (\r\n        <>\r\n            <Box my={1} display=\"grid\" gridTemplateColumns=\" 1fr 1fr\" gridGap={10} gridRowGap={10}>\r\n                <TextField label=\"Vendor ID\" value={values.VendorId?.number} fullWidth disabled />\r\n                <TextField label=\"Vendor Name\" value={values.VendorId?.name} fullWidth disabled />\r\n                <TextField value={values.VendorId?.address} name=\"Address\" label=\"Address\" disabled />\r\n                <TextField value={values.VendorId?.state} name=\"State\" label=\"State\" disabled />\r\n                <TextField value={values.VendorId?.zipcode} name=\"ZipCode\" label=\"Zip Code\" disabled />\r\n                <TextField value={values.VendorId?.website} name=\"website\" label=\"website\" disabled />\r\n                <TextField value={values.contact?.lastName} name=\"contactPerson\" label=\"Contact Person\" disabled />\r\n                <TextField value={values.contact?.email} name=\"email\" label=\"Email\" disabled />\r\n                <TextField value={values.contact?.phone} name=\"phone\" label=\"Phone\" disabled />\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n","import { get, delete_, patch, post } from \".\";\r\n\r\nimport { ILineItem } from \"./lineItem\";\r\nimport { ILineService } from \"./lineService\";\r\n\r\nexport type IPurchasePO = {\r\n    id?: string;\r\n    number: string;\r\n    requester: string;\r\n    VendorId: string;\r\n    ContactId: string;\r\n    EmployeeId: string;\r\n    status: string;\r\n    createdAt?: string;\r\n    note?: string;\r\n    billingAddressCompany?: string;\r\n    billingAddressAttn?: string;\r\n    billingAddressAddress?: string;\r\n    billingAddressCity?: string;\r\n    billingAddressState?: string;\r\n    billingAddressZipCode?: string;\r\n    billingAddressCountry?: string;\r\n    billingAddressPhone?: string;\r\n    billingAddressEmail?: string;\r\n    shippingAddressCompany?: string;\r\n    shippingAddressAttn?: string;\r\n    shippingAddressAddress?: string;\r\n    shippingAddressCity?: string;\r\n    shippingAddressState?: string;\r\n    shippingAddressZipCode?: string;\r\n    shippingAddressCountry?: string;\r\n    shippingAddressPhone?: string;\r\n    shippingAddressEmail?: string;\r\n};\r\n\r\nexport interface IPurchasePOComplete extends IPurchasePO {\r\n    lines: ILineItem[];\r\n    lineServices: ILineService[];\r\n}\r\n\r\nexport const getPurchasePOs = () => {\r\n    return get(\"/purchasePo\");\r\n};\r\n\r\nexport const createPurchasePOComplete = (data: IPurchasePOComplete) => {\r\n    return post(\"/purchasePO\", data);\r\n};\r\n\r\nexport const createPurchasePO = (data: IPurchasePO) => {\r\n    return post(`/purchasePo`, data);\r\n};\r\n\r\nexport const updatePurchasePO = (id: string, data: IPurchasePO) => {\r\n    return patch(`/purchasePo/${id}`, data);\r\n};\r\n\r\nexport const deletePurchasePO = (id: string) => {\r\n    return delete_(`/purchasePo/${id}`);\r\n};\r\n\r\nexport const getPurchasePOLines = (PurchasePOId: string) => {\r\n    return get(`/lineitem`, { params: { PurchasePOId } });\r\n};\r\n\r\nexport const createPurchasePOLine = (id: string, data: ILineItem) => {\r\n    return post(`/purchasePo/${id}/lineitem`, data);\r\n};\r\n\r\nexport const acknowledgePurchasePO = (poId: string) => {\r\n    return post(`/purchasepo/${poId}/acknowledge`, {});\r\n};\r\n\r\nexport const updatePurchasePOLine = (id: string, data: ILineItem) => {\r\n    return patch(`/lineitem/${id}`, data);\r\n};\r\n\r\nexport const deletePurchasePOLine = (id: string) => {\r\n    return delete_(`/lineitem/${id}`);\r\n};\r\n","import { get,post, patch, delete_ } from \".\";\r\n\r\nexport interface IPPOType {\r\n    id?: string;\r\n    inputValue?: string;\r\n    name: string;\r\n}\r\n\r\nexport const getPPOTypes = () => {\r\n    return get(\"/ppot\");\r\n};\r\n\r\nexport const addPPOType = (name: string) => {\r\n    return post(\"/ppot\", { name });\r\n};\r\n\r\nexport const editPPOType = (id: string, name: string) => {\r\n    return patch(`/ppot/${id}`, { name });\r\n};\r\n\r\nexport const deletePPOType = (id: string) => {\r\n    return delete_(`/ppot/${id}`);\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    paddingLeft: 8,\n    paddingRight: 8\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {},\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    flex: 1,\n    position: 'relative'\n  },\n\n  /* Pseudo-class applied to the root element if `completed={true}`. */\n  completed: {}\n};\nvar Step = /*#__PURE__*/React.forwardRef(function Step(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      alternativeLabel = props.alternativeLabel,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      connectorProp = props.connector,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$expanded = props.expanded,\n      expanded = _props$expanded === void 0 ? false : _props$expanded,\n      index = props.index,\n      last = props.last,\n      orientation = props.orientation,\n      other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"completed\", \"connector\", \"disabled\", \"expanded\", \"index\", \"last\", \"orientation\"]);\n\n  var connector = connectorProp ? /*#__PURE__*/React.cloneElement(connectorProp, {\n    orientation: orientation,\n    alternativeLabel: alternativeLabel,\n    index: index,\n    active: active,\n    completed: completed,\n    disabled: disabled\n  }) : null;\n  var newChildren = /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, completed && classes.completed),\n    ref: ref\n  }, other), connector && alternativeLabel && index !== 0 ? connector : null, React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Step component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, _extends({\n      active: active,\n      alternativeLabel: alternativeLabel,\n      completed: completed,\n      disabled: disabled,\n      expanded: expanded,\n      last: last,\n      icon: index + 1,\n      orientation: orientation\n    }, child.props));\n  }));\n\n  if (connector && !alternativeLabel && index !== 0) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, connector, newChildren);\n  }\n\n  return newChildren;\n});\nprocess.env.NODE_ENV !== \"production\" ? Step.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Sets the step as active. Is passed to child components.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Should be `Step` sub-components such as `StepLabel`, `StepContent`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * Mark the step as disabled, will also disable the button if\n   * `StepButton` is a child of `Step`. Is passed to child components.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Expand the step.\n   */\n  expanded: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStep'\n})(Step);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 0a12 12 0 1 0 0 24 12 12 0 0 0 0-24zm-2 17l-5-5 1.4-1.4 3.6 3.6 7.6-7.6L19 8l-9 9z\"\n}), 'CheckCircle');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z\"\n}), 'Warning');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircle from '../internal/svg-icons/CheckCircle';\nimport Warning from '../internal/svg-icons/Warning';\nimport withStyles from '../styles/withStyles';\nimport SvgIcon from '../SvgIcon';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      color: theme.palette.text.disabled,\n      '&$completed': {\n        color: theme.palette.primary.main\n      },\n      '&$active': {\n        color: theme.palette.primary.main\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the SVG text element. */\n    text: {\n      fill: theme.palette.primary.contrastText,\n      fontSize: theme.typography.caption.fontSize,\n      fontFamily: theme.typography.fontFamily\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Pseudo-class applied to the root element if `completed={true}`. */\n    completed: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {}\n  };\n};\n\nvar _ref = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: \"12\",\n  cy: \"12\",\n  r: \"12\"\n});\n\nvar StepIcon = /*#__PURE__*/React.forwardRef(function StepIcon(props, ref) {\n  var _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      icon = props.icon,\n      _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      classes = props.classes;\n\n  if (typeof icon === 'number' || typeof icon === 'string') {\n    var className = clsx(classes.root, active && classes.active, error && classes.error, completed && classes.completed);\n\n    if (error) {\n      return /*#__PURE__*/React.createElement(Warning, {\n        className: className,\n        ref: ref\n      });\n    }\n\n    if (completed) {\n      return /*#__PURE__*/React.createElement(CheckCircle, {\n        className: className,\n        ref: ref\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(SvgIcon, {\n      className: className,\n      ref: ref\n    }, _ref, /*#__PURE__*/React.createElement(\"text\", {\n      className: classes.text,\n      x: \"12\",\n      y: \"16\",\n      textAnchor: \"middle\"\n    }, icon));\n  }\n\n  return icon;\n});\nprocess.env.NODE_ENV !== \"production\" ? StepIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Whether this step is active.\n   */\n  active: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * Mark the step as completed. Is passed to child components.\n   */\n  completed: PropTypes.bool,\n\n  /**\n   * Mark the step as failed.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * The label displayed in the step icon.\n   */\n  icon: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepIcon'\n})(StepIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport StepIcon from '../StepIcon';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      '&$alternativeLabel': {\n        flexDirection: 'column'\n      },\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n    horizontal: {},\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {},\n\n    /* Styles applied to the `Typography` component which wraps `children`. */\n    label: {\n      color: theme.palette.text.secondary,\n      '&$active': {\n        color: theme.palette.text.primary,\n        fontWeight: 500\n      },\n      '&$completed': {\n        color: theme.palette.text.primary,\n        fontWeight: 500\n      },\n      '&$alternativeLabel': {\n        textAlign: 'center',\n        marginTop: 16\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Pseudo-class applied to the `Typography` component if `active={true}`. */\n    active: {},\n\n    /* Pseudo-class applied to the `Typography` component if `completed={true}`. */\n    completed: {},\n\n    /* Pseudo-class applied to the root element and `Typography` component if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element and `Typography` component if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the `icon` container element. */\n    iconContainer: {\n      flexShrink: 0,\n      // Fix IE 11 issue\n      display: 'flex',\n      paddingRight: 8,\n      '&$alternativeLabel': {\n        paddingRight: 0\n      }\n    },\n\n    /* Pseudo-class applied to the root and icon container and `Typography` if `alternativeLabel={true}`. */\n    alternativeLabel: {},\n\n    /* Styles applied to the container element which wraps `Typography` and `optional`. */\n    labelContainer: {\n      width: '100%'\n    }\n  };\n};\nvar StepLabel = /*#__PURE__*/React.forwardRef(function StepLabel(props, ref) {\n  var _props$active = props.active,\n      active = _props$active === void 0 ? false : _props$active,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$completed = props.completed,\n      completed = _props$completed === void 0 ? false : _props$completed,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      expanded = props.expanded,\n      icon = props.icon,\n      last = props.last,\n      optional = props.optional,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      StepIconComponentProp = props.StepIconComponent,\n      StepIconProps = props.StepIconProps,\n      other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"completed\", \"disabled\", \"error\", \"expanded\", \"icon\", \"last\", \"optional\", \"orientation\", \"StepIconComponent\", \"StepIconProps\"]);\n\n  var StepIconComponent = StepIconComponentProp;\n\n  if (icon && !StepIconComponent) {\n    StepIconComponent = StepIcon;\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: clsx(classes.root, classes[orientation], className, disabled && classes.disabled, alternativeLabel && classes.alternativeLabel, error && classes.error),\n    ref: ref\n  }, other), icon || StepIconComponent ? /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.iconContainer, alternativeLabel && classes.alternativeLabel)\n  }, /*#__PURE__*/React.createElement(StepIconComponent, _extends({\n    completed: completed,\n    active: active,\n    error: error,\n    icon: icon\n  }, StepIconProps))) : null, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.labelContainer\n  }, children ? /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"span\",\n    display: \"block\",\n    className: clsx(classes.label, alternativeLabel && classes.alternativeLabel, completed && classes.completed, active && classes.active, error && classes.error)\n  }, children) : null, optional));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * In most cases will simply be a string containing a title for the label.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Mark the step as disabled, will also disable the button if\n   * `StepLabelButton` is a child of `StepLabel`. Is passed to child components.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Mark the step as failed.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Override the default label of the step icon.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The optional node to display.\n   */\n  optional: PropTypes.node,\n\n  /**\n   * The component to render in place of the [`StepIcon`](/api/step-icon/).\n   */\n  StepIconComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`StepIcon`](/api/step-icon/) element.\n   */\n  StepIconProps: PropTypes.object\n} : void 0;\nStepLabel.muiName = 'StepLabel';\nexport default withStyles(styles, {\n  name: 'MuiStepLabel'\n})(StepLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto'\n    },\n\n    /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n    horizontal: {},\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      marginLeft: 12,\n      // half icon\n      padding: '0 0 8px'\n    },\n\n    /* Styles applied to the root element if `alternativeLabel={true}`. */\n    alternativeLabel: {\n      position: 'absolute',\n      top: 8 + 4,\n      left: 'calc(-50% + 20px)',\n      right: 'calc(50% + 20px)'\n    },\n\n    /* Pseudo-class applied to the root element if `active={true}`. */\n    active: {},\n\n    /* Pseudo-class applied to the root element if `completed={true}`. */\n    completed: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the line element. */\n    line: {\n      display: 'block',\n      borderColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n    lineHorizontal: {\n      borderTopStyle: 'solid',\n      borderTopWidth: 1\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    lineVertical: {\n      borderLeftStyle: 'solid',\n      borderLeftWidth: 1,\n      minHeight: 24\n    }\n  };\n};\nvar StepConnector = /*#__PURE__*/React.forwardRef(function StepConnector(props, ref) {\n  var active = props.active,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      classes = props.classes,\n      className = props.className,\n      completed = props.completed,\n      disabled = props.disabled,\n      index = props.index,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      other = _objectWithoutProperties(props, [\"active\", \"alternativeLabel\", \"classes\", \"className\", \"completed\", \"disabled\", \"index\", \"orientation\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel, active && classes.active, completed && classes.completed, disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.line, {\n      'horizontal': classes.lineHorizontal,\n      'vertical': classes.lineVertical\n    }[orientation])\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? StepConnector.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepConnector'\n})(StepConnector);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Paper from '../Paper';\nimport StepConnector from '../StepConnector';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: 24\n  },\n\n  /* Styles applied to the root element if `orientation=\"horizontal\"`. */\n  horizontal: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n\n  /* Styles applied to the root element if `orientation=\"vertical\"`. */\n  vertical: {\n    flexDirection: 'column'\n  },\n\n  /* Styles applied to the root element if `alternativeLabel={true}`. */\n  alternativeLabel: {\n    alignItems: 'flex-start'\n  }\n};\nvar defaultConnector = /*#__PURE__*/React.createElement(StepConnector, null);\nvar Stepper = /*#__PURE__*/React.forwardRef(function Stepper(props, ref) {\n  var _props$activeStep = props.activeStep,\n      activeStep = _props$activeStep === void 0 ? 0 : _props$activeStep,\n      _props$alternativeLab = props.alternativeLabel,\n      alternativeLabel = _props$alternativeLab === void 0 ? false : _props$alternativeLab,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$connector = props.connector,\n      connectorProp = _props$connector === void 0 ? defaultConnector : _props$connector,\n      _props$nonLinear = props.nonLinear,\n      nonLinear = _props$nonLinear === void 0 ? false : _props$nonLinear,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      other = _objectWithoutProperties(props, [\"activeStep\", \"alternativeLabel\", \"children\", \"classes\", \"className\", \"connector\", \"nonLinear\", \"orientation\"]);\n\n  var connector = /*#__PURE__*/React.isValidElement(connectorProp) ? /*#__PURE__*/React.cloneElement(connectorProp, {\n    orientation: orientation\n  }) : null;\n  var childrenArray = React.Children.toArray(children);\n  var steps = childrenArray.map(function (step, index) {\n    var state = {\n      index: index,\n      active: false,\n      completed: false,\n      disabled: false\n    };\n\n    if (activeStep === index) {\n      state.active = true;\n    } else if (!nonLinear && activeStep > index) {\n      state.completed = true;\n    } else if (!nonLinear && activeStep < index) {\n      state.disabled = true;\n    }\n\n    return /*#__PURE__*/React.cloneElement(step, _extends({\n      alternativeLabel: alternativeLabel,\n      connector: connector,\n      last: index + 1 === childrenArray.length,\n      orientation: orientation\n    }, state, step.props));\n  });\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[orientation], className, alternativeLabel && classes.alternativeLabel),\n    ref: ref\n  }, other), steps);\n});\nprocess.env.NODE_ENV !== \"production\" ? Stepper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the active step (zero based index).\n   * Set to -1 to disable all the steps.\n   */\n  activeStep: PropTypes.number,\n\n  /**\n   * If set to 'true' and orientation is horizontal,\n   * then the step label will be positioned under the icon.\n   */\n  alternativeLabel: PropTypes.bool,\n\n  /**\n   * Two or more `<Step />` components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * An element to be placed between each step.\n   */\n  connector: PropTypes.element,\n\n  /**\n   * If set the `Stepper` will not assist in controlling steps for linear flow.\n   */\n  nonLinear: PropTypes.bool,\n\n  /**\n   * The stepper orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiStepper'\n})(Stepper);","import React, { useMemo } from \"react\";\r\nimport { DataGrid, GridColumns, GridToolbar } from \"@material-ui/data-grid\";\r\n\r\nimport { formatTimestampToDate } from \"../../../logic/date\";\r\nimport { useDataGridData } from \"../../../components/Datagrid/hooks\";\r\nimport { ParameterType } from \"../../../logic/utils\";\r\n// import { formatTimestampToDate } from \"../../../logic/date\";\r\n\r\nfunction QuoteDataGrid({\r\n    onRowSelected,\r\n    params,\r\n    url,\r\n}: {\r\n    params?: ParameterType;\r\n    url?: string;\r\n    onRowSelected: (row: any) => void;\r\n}) {\r\n    const { dataGridClasses, loading, page, rows, setPage } = useDataGridData({ params, url: \"/quote\" });\r\n\r\n    const cols = useMemo<GridColumns>(\r\n        () => [\r\n            {\r\n                field: \"Date\",\r\n                valueFormatter: (r) => formatTimestampToDate(r.row?.createdAt),\r\n                width: 100,\r\n            },\r\n            { field: \"number\", headerName: \"Quote ID\", width: 100 },\r\n            {\r\n                field: \"client\",\r\n                headerName: \"Client\",\r\n                width: 100,\r\n                valueFormatter: (params) => params.row?.client?.name,\r\n            },\r\n            { field: \"rep\", headerName: \"Rep\", width: 100, valueFormatter: (params) => params.row?.repOrAgency?.name },\r\n            {\r\n                field: \"state\",\r\n                headerName: \"State\",\r\n                width: 100,\r\n                valueFormatter: (params) => params.row?.repOrAgency?.name,\r\n            },\r\n            { field: \"requesterName\", headerName: \"Requester\", width: 100 },\r\n            {\r\n                field: \"project\",\r\n                headerName: \"Project Name\",\r\n                flex: 1,\r\n                valueFormatter: (params) => params.row?.ProjectId?.name,\r\n            },\r\n            {\r\n                field: \"quotedBy\",\r\n                headerName: \"Quoted By\",\r\n                width: 100,\r\n                valueFormatter: (params) => params.row?.salesperson?.username,\r\n            },\r\n            { field: \"so\", headerName: \"SO\", width: 100, valueFormatter: (params) => params.row?.SOId?.number },\r\n            { field: \"status\", headerName: \"Status\", width: 100 },\r\n            { field: \"total\", headerName: \"Total Amount\", flex: 1 },\r\n        ],\r\n        []\r\n    );\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                flexGrow: 1,\r\n                height: 500,\r\n            }}\r\n        >\r\n            <DataGrid\r\n                loading={loading}\r\n                density=\"compact\"\r\n                components={{ Toolbar: GridToolbar }}\r\n                className={dataGridClasses.root}\r\n                onRowSelected={(r) => {\r\n                    onRowSelected && onRowSelected(r.data);\r\n                }}\r\n                columns={cols}\r\n                pagination\r\n                paginationMode=\"server\"\r\n                page={page}\r\n                onPageChange={(p) => setPage(p.page)}\r\n                pageSize={25}\r\n                rows={rows ? rows.result : []}\r\n                rowCount={rows ? rows.total : 0}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuoteDataGrid;\r\n","import React, { useState } from \"react\";\r\nimport { Tabs, Tab, Box, Typography, LinearProgress } from \"@material-ui/core\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { mutate } from \"swr\";\r\n\r\nimport Button from \"../../../app/Button\";\r\nimport { BasePaper } from \"../../../app/Paper\";\r\nimport { CommissionTab, EntitiesTab, GeneralForm } from \"./Forms\";\r\n\r\nimport { createQuoteComplete, IQuote, updateQuote } from \"../../../api/quote\";\r\nimport Toast from \"../../../app/Toast\";\r\nimport { getModifiedValues } from \"../../../logic/utils\";\r\n\r\nexport default function EditForm({ selectedQuote }: { selectedQuote: IQuote }) {\r\n    const [activeTab, setActiveTab] = useState(0);\r\n\r\n    const handleSubmit = async (data: IQuote, { setSubmitting }: { setSubmitting: (a: boolean) => void }) => {\r\n        try {\r\n            if (selectedQuote?.id) {\r\n                await updateQuote(selectedQuote.id, getModifiedValues(data, selectedQuote));\r\n                mutate(\"/quote\");\r\n\r\n                Toast(\"Record updated successfully\", \"success\");\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Formik initialValues={selectedQuote} onSubmit={handleSubmit}>\r\n            {({ handleChange, handleBlur, values, isSubmitting, setFieldValue }) => (\r\n                <Form>\r\n                    <Box display=\"grid\" gridTemplateColumns=\"1fr 1fr\" gridGap={10}>\r\n                        <BasePaper>\r\n                            <GeneralForm\r\n                                edit\r\n                                setFieldValue={setFieldValue}\r\n                                values={values}\r\n                                handleBlur={handleBlur}\r\n                                handleChange={handleChange}\r\n                            />\r\n                            <Box display=\"flex\" justifyContent=\"center\" mt={1}>\r\n                                <Button disabled={isSubmitting} type=\"submit\" kind=\"edit\">\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </BasePaper>\r\n                        <BasePaper\r\n                            style={{\r\n                                margin: \"0 1em\",\r\n                                height: \"100%\",\r\n                            }}\r\n                        >\r\n                            <Tabs\r\n                                value={activeTab}\r\n                                textColor=\"primary\"\r\n                                onChange={(e, nv) => setActiveTab(nv)}\r\n                                variant=\"scrollable\"\r\n                                style={{ maxWidth: 700 }}\r\n                            >\r\n                                {/* <Tab label=\"Terms\" /> */}\r\n                                <Tab label=\"Entities\" />\r\n                                <Tab label=\"Commission\" />\r\n                            </Tabs>\r\n                            <Box style={{ minHeight: \"600\", overflowY: \"auto\", marginBottom: \"auto\" }}>\r\n                                {activeTab === 0 && (\r\n                                    <EntitiesTab values={values} handleBlur={handleBlur} handleChange={handleChange} />\r\n                                )}\r\n                                {activeTab === 1 && (\r\n                                    <CommissionTab\r\n                                        values={values}\r\n                                        handleBlur={handleBlur}\r\n                                        handleChange={handleChange}\r\n                                    />\r\n                                )}\r\n                            </Box>\r\n                        </BasePaper>\r\n                    </Box>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport const FinalForm = ({ onDone, onBack, data }: { onDone: (a: any) => void; onBack: () => void; data: any }) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            const resp = await createQuoteComplete(data);\r\n            if (resp) {\r\n                console.log(resp);\r\n                onDone(resp);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Box height=\"85%\" display=\"flex\" flexDirection=\"column\">\r\n                <Typography variant=\"h5\">Are you sure?</Typography>\r\n                <Typography variant=\"subtitle1\" style={{ margin: \"1em 0\" }}>\r\n                    If you finilize your Purchase order, You can't update it, So if you want to update it you should\r\n                    make new version or add new one\r\n                </Typography>\r\n                {loading && <LinearProgress />}\r\n                <div style={{ flexGrow: 1 }} />\r\n                <Box display=\"flex\" justifyContent=\"space-between\" mt={4}>\r\n                    <Button disabled={loading} onClick={onBack} color=\"secondary\" variant=\"contained\">\r\n                        Back to lines\r\n                    </Button>\r\n                    <Button disabled={loading} onClick={handleSubmit} color=\"primary\" variant=\"contained\">\r\n                        Finilize\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Tabs, Tab, Box, Typography, LinearProgress } from \"@material-ui/core\";\r\n\r\nimport { Form, Formik } from \"formik\";\r\n\r\nimport Button from \"../../../app/Button\";\r\nimport { AccountingForm, AddressesForm, ApprovalForm, EntitiesForm, GeneralForm, ShippingForm } from \"./Forms\";\r\nimport { ISO, editSO, createSOComplete, ISOComplete } from \"../../../api/so\";\r\nimport { BasePaper } from \"../../../app/Paper\";\r\nimport Toast from \"../../../app/Toast\";\r\nimport { mutate } from \"swr\";\r\nimport { getModifiedValues } from \"../../../logic/utils\";\r\n\r\nexport default function EditForm({ selectedSo }: { selectedSo: ISO }) {\r\n    const [activeTab, setActiveTab] = useState(0);\r\n\r\n    const handleSubmit = async (data: ISO, { setSubmitting }: { setSubmitting: (a: boolean) => void }) => {\r\n        try {\r\n            if (selectedSo.id) {\r\n                const reqData = getModifiedValues(data, selectedSo);\r\n                await editSO(selectedSo.id, reqData);\r\n\r\n                setSubmitting(false);\r\n                mutate(\"/so\");\r\n\r\n                Toast(\"Record updated successfully\", \"success\");\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Formik initialValues={selectedSo} onSubmit={handleSubmit}>\r\n            {({ handleChange, handleBlur, values, setValues, isSubmitting, setFieldValue }) => (\r\n                <Form>\r\n                    <Box display=\"flex\" style={{ justifyContent: \"space-evenly\" }}>\r\n                        <Box flex={2}>\r\n                            <BasePaper style={{ margin: \"0 1em\" }}>\r\n                                <GeneralForm\r\n                                    onChangeInit={setValues}\r\n                                    values={values}\r\n                                    handleBlur={handleBlur}\r\n                                    handleChange={handleChange}\r\n                                />\r\n                                <Box display=\"flex\" justifyContent=\"center\" my={2}>\r\n                                    <Button disabled={isSubmitting} type=\"submit\" kind=\"edit\">\r\n                                        Save\r\n                                    </Button>\r\n                                </Box>\r\n                            </BasePaper>\r\n                        </Box>\r\n                        <Box flex={3}>\r\n                            <BasePaper style={{ margin: \"0 1em\", height: \"100%\" }}>\r\n                                <Tabs\r\n                                    textColor=\"primary\"\r\n                                    value={activeTab}\r\n                                    onChange={(e, nv) => setActiveTab(nv)}\r\n                                    variant=\"scrollable\"\r\n                                    style={{ maxWidth: 700 }}\r\n                                >\r\n                                    <Tab label=\"Approvals\" />\r\n                                    <Tab label=\"Accounting\" />\r\n                                    <Tab label=\"Shipping\" />\r\n                                    <Tab label=\"Entities\" />\r\n                                    <Tab label=\"Addresses\" />\r\n                                </Tabs>\r\n                                <Box>\r\n                                    {activeTab === 0 && (\r\n                                        <ApprovalForm\r\n                                            setFieldValue={setFieldValue}\r\n                                            values={values}\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                        />\r\n                                    )}\r\n                                    {activeTab === 1 && (\r\n                                        <AccountingForm\r\n                                            setFieldValue={setFieldValue}\r\n                                            values={values}\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                        />\r\n                                    )}\r\n                                    {activeTab === 2 && (\r\n                                        <ShippingForm\r\n                                            setFieldValue={setFieldValue}\r\n                                            values={values}\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                        />\r\n                                    )}\r\n                                    {activeTab === 3 && (\r\n                                        <EntitiesForm\r\n                                            setFieldValue={setFieldValue}\r\n                                            values={values}\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                        />\r\n                                    )}\r\n                                    {activeTab === 4 && (\r\n                                        <AddressesForm\r\n                                            setFieldValue={setFieldValue}\r\n                                            values={values}\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                        />\r\n                                    )}\r\n                                </Box>\r\n                            </BasePaper>\r\n                        </Box>\r\n                    </Box>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport const FinalForm = ({\r\n    onDone,\r\n    onBack,\r\n    data,\r\n}: {\r\n    onDone: (a: any) => void;\r\n    onBack: () => void;\r\n    data: ISOComplete;\r\n}) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSubmit = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const resp = await createSOComplete(data);\r\n            if (resp) {\r\n                console.log(resp);\r\n                onDone(resp);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Box height=\"85%\" display=\"flex\" flexDirection=\"column\">\r\n                <Typography variant=\"h5\">Are you sure?</Typography>\r\n                <Typography variant=\"subtitle1\" style={{ margin: \"1em 0\" }}>\r\n                    If you finalize your Purchase order, You can't update it, So if you want to update it you should\r\n                    make new version or add new one\r\n                </Typography>\r\n                {loading && <LinearProgress />}\r\n                <div style={{ flexGrow: 1 }} />\r\n                <Box display=\"flex\" justifyContent=\"space-between\" mt={4}>\r\n                    <Button disabled={loading} onClick={onBack} color=\"secondary\" variant=\"contained\">\r\n                        Back to lines\r\n                    </Button>\r\n                    <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">\r\n                        Finalize\r\n                    </Button>\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(React.Fragment, null, React.createElement(\"path\", {\n  d: \"M18 12c-.55 0-1 .45-1 1v5.22c0 .55-.45 1-1 1H6c-.55 0-1-.45-1-1V8c0-.55.45-1 1-1h5c.55 0 1-.45 1-1s-.45-1-1-1H5c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2v-6c0-.55-.45-1-1-1zM21.02 5H19V2.98c0-.54-.44-.98-.98-.98h-.03c-.55 0-.99.44-.99.98V5h-2.01c-.54 0-.98.44-.99.98v.03c0 .55.44.99.99.99H17v2.01c0 .54.44.99.99.98h.03c.54 0 .98-.44.98-.98V7h2.02c.54 0 .98-.44.98-.98v-.04c0-.54-.44-.98-.98-.98z\"\n}), React.createElement(\"path\", {\n  d: \"M14 9H8c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zM14 12H8c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zM14 15H8c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1z\"\n})), 'PostAddRounded');","import React, { useState } from \"react\";\r\nimport { Box, Tabs, Tab } from \"@material-ui/core\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Button from \"../../../app/Button\";\r\nimport { CommissionTab, EntitiesTab, GeneralForm } from \"./Forms\";\r\n\r\nimport { IQuote } from \"../../../api/quote\";\r\nimport { BasePaper } from \"../../../app/Paper\";\r\n\r\nconst schema = Yup.object().shape({\r\n    // requester: Yup.string().required(),\r\n    // ClientId: Yup.string().required(),\r\n    // salesperson: Yup.string().required(),\r\n});\r\n\r\nexport default function GeneralQuote({\r\n    add,\r\n    onDone,\r\n    data,\r\n}: {\r\n    add?: boolean;\r\n    data?: any;\r\n    onDone: (data: any) => void;\r\n}) {\r\n    const [activeTab, setActiveTab] = useState(0);\r\n\r\n    const handleSubmit = async (data: IQuote) => {\r\n        let entry = new Date(data.entryDate);\r\n        let exp = new Date(data.expireDate);\r\n        onDone({ ...data, entryDate: entry.getTime(), expireDate: exp.getTime() });\r\n    };\r\n\r\n    return (\r\n        <Box style={{ overflowY: \"auto\", width: \"100%\" }}>\r\n            <Formik initialValues={{ ...data } as IQuote} validationSchema={schema} onSubmit={handleSubmit}>\r\n                {({ handleChange, handleBlur, values, isSubmitting, setFieldValue }) => (\r\n                    <Form>\r\n                        <Box display=\"flex\" m={1}>\r\n                            <Box flex={1} mx={2}>\r\n                                <BasePaper>\r\n                                    <GeneralForm\r\n                                        setFieldValue={setFieldValue}\r\n                                        values={values}\r\n                                        handleBlur={handleBlur}\r\n                                        handleChange={handleChange}\r\n                                    />\r\n                                </BasePaper>\r\n                            </Box>\r\n                            <Box flex={1}>\r\n                                <BasePaper>\r\n                                    <Tabs\r\n                                        value={activeTab}\r\n                                        onChange={(e, nv) => setActiveTab(nv)}\r\n                                        variant=\"scrollable\"\r\n                                        style={{ maxWidth: 500 }}\r\n                                        textColor=\"primary\"\r\n                                    >\r\n                                        {/* <Tab label=\"Terms\" /> */}\r\n                                        <Tab label=\"Entities\" />\r\n                                        <Tab label=\"Commission\" />\r\n                                    </Tabs>\r\n                                    {/* {activeTab === 0 && (\r\n                                    <TermsTab values={values} handleBlur={handleBlur} handleChange={handleChange} />\r\n                                )} */}\r\n                                    {activeTab === 0 && (\r\n                                        <EntitiesTab\r\n                                            values={values}\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                        />\r\n                                    )}\r\n                                    {activeTab === 1 && (\r\n                                        <CommissionTab\r\n                                            values={values}\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                            add={add}\r\n                                        />\r\n                                    )}\r\n                                </BasePaper>\r\n                            </Box>\r\n                        </Box>\r\n                        <Box display=\"flex\" justifyContent=\"center\" my={2} py={2}>\r\n                            <Button disabled={isSubmitting} type=\"submit\" kind=\"add\" style={{ padding: \"1em 2em\" }}>\r\n                                Add\r\n                            </Button>\r\n                        </Box>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </Box>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Step, StepLabel, Stepper } from \"@material-ui/core\";\r\n\r\nimport Dialog from \"../../../app/Dialog\";\r\n\r\nimport { LinesForm } from \"../../Purchase/PO/Forms\";\r\nimport General from \"./General\";\r\nimport { FinalForm } from \"./EditForm\";\r\nimport { DocumentForm } from \"./Forms\";\r\n\r\nimport { IQuote } from \"../../../api/quote\";\r\n\r\nexport default function AddQuote({\r\n    open,\r\n    onClose,\r\n    onDone,\r\n    initialData,\r\n    addFromReq,\r\n}: {\r\n    initialData: any;\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onDone: () => void;\r\n    addFromReq?: boolean;\r\n}) {\r\n    const [step, setStep] = useState(0);\r\n    const [quote, setQuote] = useState<any>(initialData);\r\n    const [createdQuote, setCreatedQuote] = useState<IQuote>();\r\n\r\n    useEffect(() => {\r\n        if (initialData) {\r\n            setQuote(initialData);\r\n        }\r\n    }, [initialData]);\r\n\r\n    return (\r\n        <Dialog onClose={onClose} closeOnClickOut={false} open={open} title=\"Add New Quote\" fullScreen maxWidth=\"md\">\r\n            <Box p={2} height={600} display=\"flex\" flexDirection=\"column\">\r\n                <Stepper activeStep={step}>\r\n                    <Step>\r\n                        <StepLabel>General Information</StepLabel>\r\n                    </Step>\r\n                    <Step>\r\n                        <StepLabel>Line Items</StepLabel>\r\n                    </Step>\r\n                    {/* <Step>\r\n                        <StepLabel>Line Services</StepLabel>\r\n                    </Step> */}\r\n                    <Step>\r\n                        <StepLabel>Final</StepLabel>\r\n                    </Step>\r\n                    <Step>\r\n                        <StepLabel>Document</StepLabel>\r\n                    </Step>\r\n                </Stepper>\r\n                {step === 0 && (\r\n                    <Box display=\"flex\" justifyContent=\"center\" flexGrow={1} my={2}>\r\n                        <General\r\n                            add={true}\r\n                            data={initialData}\r\n                            // data={quote}\r\n                            onDone={(d) => {\r\n                                setQuote((prev: any) => ({ ...prev, ...d }));\r\n                                setStep((prev) => prev + 1);\r\n                            }}\r\n                        />\r\n                    </Box>\r\n                )}\r\n                {step === 1 && (\r\n                    <LinesForm\r\n                        data={quote}\r\n                        onBack={() => setStep(0)}\r\n                        onDone={(items: any) => {\r\n                            setQuote((d: any) => ({ ...d, lines: items }));\r\n                            setStep((prev) => prev + 1);\r\n                        }}\r\n                        devices={initialData?.devices}\r\n                    />\r\n                )}\r\n                {step === 2 && quote && (\r\n                    <FinalForm\r\n                        data={quote}\r\n                        onBack={() => setStep(1)}\r\n                        onDone={(data) => {\r\n                            onDone();\r\n                            setCreatedQuote(data);\r\n                            setStep((prev) => prev + 1);\r\n                        }}\r\n                    />\r\n                )}\r\n                {step === 3 && (\r\n                    <DocumentForm\r\n                        data={quote}\r\n                        createdQoute={createdQuote}\r\n                        onDone={() => {\r\n                            onClose();\r\n                            onDone();\r\n                        }}\r\n                    />\r\n                )}\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useMemo } from \"react\";\r\nimport { GridColumns, DataGrid, GridToolbar } from \"@material-ui/data-grid\";\r\n\r\nimport { formatTimestampToDate } from \"../../../logic/date\";\r\nimport { useDataGridData } from \"../../../components/Datagrid/hooks\";\r\nimport { ParameterType } from \"../../../logic/utils\";\r\n\r\nfunction SODataGrid({\r\n    onRowSelected,\r\n    params,\r\n    url,\r\n}: {\r\n    onRowSelected: (row: any) => void;\r\n    params?: ParameterType;\r\n    url?: string;\r\n}) {\r\n    const { dataGridClasses, loading, page, rows, setPage } = useDataGridData({ params, url: \"/so\" });\r\n\r\n    const cols = useMemo<GridColumns>(\r\n        () => [\r\n            {\r\n                field: \"date\",\r\n                headerName: \"Date\",\r\n                valueFormatter: (params) => formatTimestampToDate(params.row?.createdAt),\r\n                width: 100,\r\n            },\r\n            { field: \"number\", headerName: \"SO ID\", width: 100 },\r\n            { field: \"Client\", width: 130, valueGetter: (data) => data.row.client?.name },\r\n            { field: \"description\", headerName: \"Description\", width: 150 },\r\n            { field: \"Rep\", width: 130, valueGetter: (data) => data.row.repOrAgency?.name },\r\n            { field: \"state\", headerName: \"State\", width: 120, valueGetter: (data) => data.row.repOrAgency?.state },\r\n            {\r\n                field: \"originalShipDate\",\r\n                headerName: \"Original SD.\",\r\n                valueFormatter: (params) => formatTimestampToDate(params.row?.originalShippingDate),\r\n                width: 120,\r\n            },\r\n            {\r\n                field: \"estimatedShipDate\",\r\n                headerName: \"Estimated SD.\",\r\n                valueFormatter: (params) => formatTimestampToDate(params.row?.estimatedShipDate),\r\n                width: 120,\r\n            },\r\n            {\r\n                field: \"actualShipDate\",\r\n                headerName: \"Actual SD.\",\r\n                valueFormatter: (params) => formatTimestampToDate(params.row?.actualShipDate),\r\n                width: 120,\r\n            },\r\n            { field: \"invoice\", headerName: \"Invoice\", width: 120 },\r\n            { field: \"status\", headerName: \"Status\", width: 120 },\r\n            {\r\n                field: \"total\",\r\n                headerName: \"Total Amount\",\r\n                valueFormatter: (params) => params.row?.cost * params.row?.quantity,\r\n                width: 120,\r\n            },\r\n        ],\r\n        []\r\n    );\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                flexGrow: 1,\r\n                height: 500,\r\n            }}\r\n        >\r\n            <DataGrid\r\n                loading={loading}\r\n                density=\"compact\"\r\n                components={{ Toolbar: GridToolbar }}\r\n                className={dataGridClasses.root}\r\n                onRowSelected={(r) => {\r\n                    onRowSelected && onRowSelected(r.data);\r\n                }}\r\n                columns={cols}\r\n                pagination\r\n                paginationMode=\"server\"\r\n                page={page}\r\n                onPageChange={(p) => setPage(p.page)}\r\n                pageSize={25}\r\n                rows={rows ? rows.result : []}\r\n                rowCount={rows ? rows.total : 0}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SODataGrid;\r\n","import React, { useState } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Button from \"../../../app/Button\";\r\n\r\nimport { GeneralForm, ShippingForm, BillingTab, TermsTab } from \"./Forms\";\r\n\r\nimport { ISO } from \"../../../api/so\";\r\n\r\nconst schema = Yup.object().shape({\r\n    // client: Yup.string().required(),\r\n    // issuedBy: Yup.string().required(),\r\n});\r\n\r\nexport default function MainForm({ onDone, data }: { data?: any; onDone: (data: any) => void }) {\r\n    const [activeTab, setActiveTab] = useState(0);\r\n\r\n    const handleSubmit = async (data: ISO) => {\r\n        onDone(data);\r\n    };\r\n\r\n    return (\r\n        <Box m={2}>\r\n            <Formik initialValues={{} as ISO} validationSchema={schema} onSubmit={handleSubmit}>\r\n                {({ values, handleChange, handleBlur, setValues, setFieldValue }) => (\r\n                    <Form>\r\n                        <Box display=\"grid\" gridTemplateColumns=\"3fr 2fr\" gridGap={10}>\r\n                            <Box>\r\n                                <GeneralForm\r\n                                    onChangeInit={setValues}\r\n                                    values={values}\r\n                                    handleChange={handleChange}\r\n                                    handleBlur={handleBlur}\r\n                                />\r\n                                <Button type=\"submit\" kind=\"add\">\r\n                                    Add\r\n                                </Button>\r\n                            </Box>\r\n                            <Box>\r\n                                <Tabs\r\n                                    value={activeTab}\r\n                                    textColor=\"primary\"\r\n                                    onChange={(e, nv) => setActiveTab(nv)}\r\n                                    style={{ marginBottom: 16 }}\r\n                                >\r\n                                    <Tab label=\"Shipping\" />\r\n                                    <Tab label=\"Billing\" />\r\n                                    <Tab label=\"Terms\" />\r\n                                </Tabs>\r\n                                {activeTab === 0 && (\r\n                                    <ShippingForm\r\n                                        setFieldValue={setFieldValue}\r\n                                        values={values}\r\n                                        handleChange={handleChange}\r\n                                        handleBlur={handleBlur}\r\n                                    />\r\n                                )}\r\n                                {activeTab === 1 && (\r\n                                    <BillingTab values={values} handleChange={handleChange} handleBlur={handleBlur} />\r\n                                )}\r\n                                {activeTab === 2 && (\r\n                                    <TermsTab values={values} handleChange={handleChange} handleBlur={handleBlur} />\r\n                                )}\r\n                            </Box>\r\n                        </Box>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </Box>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Step, StepLabel, Stepper } from \"@material-ui/core\";\r\n\r\nimport Dialog from \"../../../app/Dialog\";\r\nimport Button from \"../../../app/Button\";\r\n\r\nimport { LinesForm } from \"../../Purchase/PO/Forms\";\r\nimport General from \"./MainForm\";\r\nimport { FinalForm } from \"./EditForm\";\r\nimport { DocumentForm } from \"./Forms\";\r\n\r\nimport { ISO, ISOComplete } from \"../../../api/so\";\r\n\r\nexport default function AddSOModal({\r\n    open,\r\n    onClose,\r\n    onDone,\r\n    initialData,\r\n}: {\r\n    initialData?: ISOComplete;\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onDone: () => void;\r\n}) {\r\n    const [step, setStep] = useState(0);\r\n    const [so, setSO] = useState(initialData);\r\n    const [createdSO, setCreatedSO] = useState<ISO>();\r\n\r\n    useEffect(() => {\r\n        if (initialData) {\r\n            setSO(initialData);\r\n        }\r\n    }, [initialData]);\r\n\r\n    return (\r\n        <Dialog\r\n            closeOnClickOut={false}\r\n            onClose={onClose}\r\n            open={open}\r\n            title=\"Add new Sales order\"\r\n            fullWidth\r\n            maxWidth=\"md\"\r\n        >\r\n            <Box p={2} height={600}>\r\n                <Stepper activeStep={step}>\r\n                    <Step>\r\n                        <StepLabel>General information</StepLabel>\r\n                    </Step>\r\n                    <Step>\r\n                        <StepLabel> Line items</StepLabel>\r\n                    </Step>\r\n                    <Step>\r\n                        <StepLabel>Final</StepLabel>\r\n                    </Step>\r\n                    <Step>\r\n                        <StepLabel>Document</StepLabel>\r\n                    </Step>\r\n                </Stepper>\r\n                {step === 0 && (\r\n                    <Box my={1}>\r\n                        <General\r\n                            data={so}\r\n                            onDone={(d) => {\r\n                                setSO((prev) => ({ ...prev, ...d }));\r\n                                setStep(1);\r\n                            }}\r\n                        />\r\n                    </Box>\r\n                )}\r\n                {step === 1 && (\r\n                    <LinesForm\r\n                        data={so}\r\n                        onBack={() => setStep(0)}\r\n                        onDone={(items: any) => {\r\n                            setSO((prev: any) => ({ ...prev, lines: items }));\r\n                            setStep(2);\r\n                        }}\r\n                    />\r\n                )}\r\n                {step === 2 && so && (\r\n                    <FinalForm\r\n                        data={so}\r\n                        onBack={() => setStep(1)}\r\n                        onDone={(data) => {\r\n                            setStep(3);\r\n                            onDone();\r\n                            setCreatedSO(data);\r\n                        }}\r\n                    />\r\n                )}\r\n                {step === 3 ? (\r\n                    createdSO && so ? (\r\n                        <DocumentForm\r\n                            onDone={() => {\r\n                                setStep(0);\r\n                                setCreatedSO(undefined);\r\n                                onClose();\r\n                                onDone();\r\n                            }}\r\n                            createdSO={createdSO}\r\n                            data={so}\r\n                        />\r\n                    ) : (\r\n                        <>\r\n                            <h1>Sorry there is a problem, Please go back and try again</h1>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={() => setStep((prev) => prev - 1)}>\r\n                                Back\r\n                            </Button>\r\n                        </>\r\n                    )\r\n                ) : (\r\n                    <></>\r\n                )}\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M15 1H4c-1.1 0-2 .9-2 2v13c0 .55.45 1 1 1s1-.45 1-1V4c0-.55.45-1 1-1h10c.55 0 1-.45 1-1s-.45-1-1-1zm.59 4.59l4.83 4.83c.37.37.58.88.58 1.41V21c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h6.17c.53 0 1.04.21 1.42.59zM15 12h4.5L14 6.5V11c0 .55.45 1 1 1z\"\n}), 'FileCopyRounded');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58s1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41s-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\"\n}), 'LocalOfferRounded');"],"sourceRoot":""}