{"version":3,"sources":["../node_modules/@material-ui/core/esm/ClickAwayListener/ClickAwayListener.js","api/role.ts","features/Modals/EmployeeModal.tsx","features/Modals/RoleModals.tsx","api/api.ts","features/Modals/RoleManagement.tsx","pages/Roles.tsx","app/Button.tsx","app/Inputs/index.tsx","app/Paper.tsx","app/Snack.tsx","app/Forms.tsx"],"names":["mapEventPropToEvent","eventProp","substring","toLowerCase","ClickAwayListener","props","children","_props$disableReactTr","disableReactTree","_props$mouseEvent","mouseEvent","onClickAway","_props$touchEvent","touchEvent","movedRef","React","nodeRef","activatedRef","syntheticEventRef","setTimeout","current","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","ref","handleClickAway","useEventCallback","event","insideReactTree","document","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","insideDOM","composedPath","indexOf","ownerDocument","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","doc","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","addRole","name","post","assignApiToRole","roleId","apiId","deassignApiToRole","delete_","getRoles","get","updateRole","id","patch","deleteRole","AddEmployeeModal","open","onClose","onDone","schema","Yup","shape","username","required","min","password","handleSubmit","data","a","setSubmitting","addEmployee","resp","console","log","Dialog","maxWidth","fullWidth","title","Box","m","initialValues","validationSchema","onSubmit","values","touched","errors","handleChange","handleBlur","isSubmitting","display","gridTemplateColumns","gridGap","TextField","label","placeholder","value","onChange","onBlur","error","Boolean","helperText","type","disabled","kind","AddRoleModal","addRecord","deleteRecord","getRecord","updateRecord","getApis","filterRoleApis","apis","roleApis","filter","api","includes","RoleManagement","useState","setApis","selRole","setSelRole","selRoleApis","setSelRoleApis","refreshRoleApis","useEffect","then","d","catch","e","refreshAvailableApis","allApis","avApis","v","handleDeassign","p","request","itemTitleField","itemValueField","List","map","sra","ListItem","width","alignItems","justifyContent","Typography","route","style","color","onClick","DeleteRounded","maxHeight","overflowY","FormControlLabel","control","Checkbox","checked","Roles","addEmpModal","setAddEmpModal","addRoleModal","setAddRoleModal","confirm","setConfirm","roleManagement","setRoleManagement","snack","setSnack","msg","setMsg","selectedEmp","setSelectedEmp","empsAndRoles","setEmpsAndRoles","roles","setRoles","refreshEmpsRoles","refreshRoles","toggleRole","role","addRoleToEmployee","userIndex","findIndex","item","length","deleteRoleFromEmployee","handleDelete","deleteEmployee","Confirm","onConfirm","Snack","my","Button","emp","IconButton","flex","find","r","parseInt","MyButton","useStyles","makeStyles","btnStyle","background","Gradients","success","warning","borderRadius","boxShadow","paddingRight","paddingLeft","icons","add","edit","delete","classes","className","startIcon","variant","MaterialFieldSelect","limit","getOptionLabel","getOptionValue","options","setOptions","findValue","setFindValue","t","o","slice","renderInput","params","ObjectSelect","inputStyle","items","keyField","select","undefined","i","FieldSelect","getOptionList","setItems","ArraySelect","BaseSelect","BasePaper","withStyles","theme","root","padding","IconPaper","spacing","flexDirection","elevation","severity","autoHideDuration","GeneralForm","setData","dis","setDis","showSnack","setShowSnack","snackMsg","setSnackMsg","addName","setAddName","editName","setEditName","selectedData","setSelectedData","showMsg","refreshData","handleAdd","handleEdit","expandIcon","preventDefault","marginRight","marginBottom","defaultExpanded","margin","cat"],"mappings":"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","file":"static/js/30.652b4600.chunk.js","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport ownerDocument from '../utils/ownerDocument';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport { elementAcceptingRef, exactProp } from '@material-ui/utils';\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n\nfunction clickedRootScrollbar(event) {\n  return document.documentElement.clientWidth < event.clientX || document.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n */\n\n\nfunction ClickAwayListener(props) {\n  var children = props.children,\n      _props$disableReactTr = props.disableReactTree,\n      disableReactTree = _props$disableReactTr === void 0 ? false : _props$disableReactTr,\n      _props$mouseEvent = props.mouseEvent,\n      mouseEvent = _props$mouseEvent === void 0 ? 'onClick' : _props$mouseEvent,\n      onClickAway = props.onClickAway,\n      _props$touchEvent = props.touchEvent,\n      touchEvent = _props$touchEvent === void 0 ? 'onTouchEnd' : _props$touchEvent;\n  var movedRef = React.useRef(false);\n  var nodeRef = React.useRef(null);\n  var activatedRef = React.useRef(false);\n  var syntheticEventRef = React.useRef(false);\n  React.useEffect(function () {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(function () {\n      activatedRef.current = true;\n    }, 0);\n    return function () {\n      activatedRef.current = false;\n    };\n  }, []); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    nodeRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviours like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  var handleClickAway = useEventCallback(function (event) {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    var insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false; // 1. IE 11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!activatedRef.current || !nodeRef.current || clickedRootScrollbar(event)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    var insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      // TODO v6 remove dead logic https://caniuse.com/#search=composedPath.\n      var doc = ownerDocument(nodeRef.current);\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  var createHandleSynthetic = function createHandleSynthetic(handlerName) {\n    return function (event) {\n      syntheticEventRef.current = true;\n      var childrenPropsHandler = children.props[handlerName];\n\n      if (childrenPropsHandler) {\n        childrenPropsHandler(event);\n      }\n    };\n  };\n\n  var childrenProps = {\n    ref: handleRef\n  };\n\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n\n  React.useEffect(function () {\n    if (touchEvent !== false) {\n      var mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      var doc = ownerDocument(nodeRef.current);\n\n      var handleTouchMove = function handleTouchMove() {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return function () {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n\n  React.useEffect(function () {\n    if (mouseEvent !== false) {\n      var mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      var doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return function () {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   */\n  disableReactTree: PropTypes.bool,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","import { get, post, delete_, patch } from \".\";\r\n\r\nexport interface IRole {\r\n    id: string;\r\n    name: string;\r\n}\r\n\r\nexport const addRole = (name: string) => {\r\n    return post(\"/role\", { name });\r\n};\r\n\r\nexport const assignApiToRole = (roleId: string, apiId: string) => {\r\n    return post(`/role/${roleId}/api/${apiId}`, {});\r\n};\r\nexport const deassignApiToRole = (roleId: string, apiId: string) => {\r\n    return delete_(`/role/${roleId}/api/${apiId}`);\r\n};\r\n\r\nexport const getRoles = () => {\r\n    return get(\"/role\");\r\n};\r\n\r\nexport const getRoleApis = (id: string) => {\r\n    return get(`/role/${id}/api`);\r\n};\r\n\r\nexport const getEmployeesRoles = () => {\r\n    return get(\"/employee/roles\");\r\n};\r\n\r\nexport const updateRole = (id: string, name: string) => {\r\n    return patch(`/role/${id}`, { name });\r\n};\r\n\r\nexport const deleteRole = (id: string) => {\r\n    return delete_(`/role/${id}`);\r\n};\r\n","import React from \"react\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport TextField from \"../../app/TextField\";\r\nimport Button from \"../../app/Button\";\r\nimport Dialog from \"../../app/Dialog\";\r\n\r\nimport { addEmployee } from \"../../api/employee\";\r\n\r\nexport const AddEmployeeModal = ({\r\n    open,\r\n    onClose,\r\n    onDone,\r\n}: {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    onDone: () => void;\r\n}) => {\r\n    const schema = Yup.object().shape({\r\n        username: Yup.string().required().min(3),\r\n        password: Yup.string().required().min(4),\r\n    });\r\n\r\n    const handleSubmit = async (data: any, { setSubmitting }: { setSubmitting: (v: boolean) => void }) => {\r\n        try {\r\n            const resp = await addEmployee(data);\r\n            if (resp) {\r\n                onDone();\r\n                setSubmitting(false);\r\n                console.log(resp);\r\n                onClose();\r\n            }\r\n        } catch (error) {\r\n            console.log(data);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth title=\"Add new employee\">\r\n            <Box m={2}>\r\n                <Formik\r\n                    initialValues={{ username: \"\", password: \"\" }}\r\n                    validationSchema={schema}\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    {({ values, touched, errors, handleChange, handleBlur, isSubmitting }) => (\r\n                        <Form>\r\n                            <Box display=\"grid\" gridTemplateColumns=\"1fr\" gridGap={10}>\r\n                                <TextField\r\n                                    label=\"Username\"\r\n                                    placeholder=\"username\"\r\n                                    name=\"username\"\r\n                                    value={values.username}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    error={Boolean(errors.username && touched.username)}\r\n                                    helperText={errors.username}\r\n                                />\r\n                                <TextField\r\n                                    label=\"Password\"\r\n                                    placeholder=\"password\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    value={values.password}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    error={Boolean(errors.password && touched.password)}\r\n                                    helperText={errors.password}\r\n                                />\r\n\r\n                                <Button fullWidth disabled={isSubmitting} type=\"submit\" kind=\"add\">\r\n                                    Add\r\n                                </Button>\r\n                            </Box>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Dialog } from \"@material-ui/core\";\r\n\r\nimport { GeneralForm } from \"../../app/Forms\";\r\nimport { addRole, deleteRole, getRoles, updateRole } from \"../../api/role\";\r\n\r\nexport const AddRoleModal = ({ open, onClose }: { open: boolean; onClose: () => void }) => {\r\n    return (\r\n        <Dialog open={open} onClose={onClose} title=\"Add new role\">\r\n            <div>\r\n                <GeneralForm addRecord={addRole} deleteRecord={deleteRole} getRecord={getRoles} updateRecord={updateRole} type=\"Role\" />\r\n            </div>\r\n        </Dialog>\r\n    );\r\n};\r\n","import { get } from \".\";\r\n\r\nexport interface IApi {\r\n    id: string;\r\n    route: string;\r\n    method: string;\r\n    routerFile: string;\r\n    validInputs: string[];\r\n}\r\n\r\nexport const getApis = () => {\r\n    return get(\"/api\");\r\n};\r\n\r\nexport const filterRoleApis = (apis: IApi[], roleApis: IApi[]) => {\r\n    return apis.filter((api) => !roleApis.includes(api));\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Box, List, ListItem, Typography, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport { DeleteRounded } from \"@material-ui/icons\";\r\n\r\nimport { getRoles, getRoleApis, assignApiToRole, deassignApiToRole } from \"../../api/role\";\r\nimport { getApis, filterRoleApis, IApi } from \"../../api/api\";\r\n\r\nimport Button from \"../../app/Button\";\r\nimport Dialog from \"../../app/Dialog\";\r\nimport { FieldSelect } from \"../../app/Inputs\";\r\n\r\nexport default function RoleManagement({ open, onClose }: { open: boolean; onClose: () => void }) {\r\n    const [apis, setApis] = useState<any>([]);\r\n\r\n    const [selRole, setSelRole] = useState<string>();\r\n    const [selRoleApis, setSelRoleApis] = useState<any>([]);\r\n\r\n    const refreshRoleApis = async () => {\r\n        try {\r\n            if (selRole) {\r\n                const resp = await getRoleApis(selRole);\r\n                console.log(resp);\r\n\r\n                if (resp) {\r\n                    setSelRoleApis(resp);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (open) {\r\n            getApis()\r\n                .then((d: any) => setApis(d))\r\n                .catch((e) => console.log(e));\r\n        }\r\n    }, [open]);\r\n\r\n    const refreshAvailableApis = async () => {\r\n        try {\r\n            const allApis = await getApis();\r\n            const avApis = filterRoleApis(allApis, selRoleApis);\r\n            setApis(avApis);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshRoleApis();\r\n        refreshAvailableApis();\r\n    }, [selRole]);\r\n\r\n    const handleChange = async (apiId: string, v: boolean) => {\r\n        try {\r\n            if (v) {\r\n                if (selRole) {\r\n                    const resp = await assignApiToRole(selRole, apiId);\r\n                    console.log(resp);\r\n                    refreshRoleApis();\r\n                    refreshAvailableApis();\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const handleDeassign = async (apiId: string) => {\r\n        try {\r\n            if (selRole) {\r\n                const resp = await deassignApiToRole(selRole, apiId);\r\n                console.log(resp);\r\n                refreshRoleApis();\r\n                refreshAvailableApis();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth title=\"Role management\">\r\n            <Box p={2}>\r\n                <FieldSelect\r\n                    request={getRoles}\r\n                    itemTitleField=\"name\"\r\n                    itemValueField=\"id\"\r\n                    fullWidth\r\n                    name=\"roles\"\r\n                    onChange={(e: any) => setSelRole(e.target.value)}\r\n                    label=\"Roles\"\r\n                />\r\n\r\n                <List>\r\n                    {selRoleApis &&\r\n                        selRoleApis.map((sra: IApi) => (\r\n                            <ListItem key={sra.id}>\r\n                                <Box display=\"flex\" width=\"100%\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                                    <Typography>{sra.route}</Typography>\r\n                                    <Button style={{ color: \"red\" }} onClick={() => handleDeassign(sra.id)}>\r\n                                        <DeleteRounded />\r\n                                    </Button>\r\n                                </Box>\r\n                            </ListItem>\r\n                        ))}\r\n                </List>\r\n                <hr />\r\n                <Typography>Available APIs:</Typography>\r\n                <List style={{ maxHeight: 430, overflowY: \"scroll\" }}>\r\n                    {selRole &&\r\n                        apis.map((api: IApi) => (\r\n                            <ListItem key={api.id}>\r\n                                <FormControlLabel\r\n                                    label={api.route}\r\n                                    control={<Checkbox onChange={(e) => handleChange(api.id, e.target.checked)} />}\r\n                                />\r\n                            </ListItem>\r\n                        ))}\r\n                </List>\r\n            </Box>\r\n        </Dialog>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Box, Button, IconButton, Typography, FormControlLabel, Checkbox, List, ListItem } from \"@material-ui/core\";\r\nimport { DeleteRounded } from \"@material-ui/icons\";\r\n\r\nimport { getRoles, getEmployeesRoles } from \"../api/role\";\r\nimport { IEmployee, addRoleToEmployee, deleteRoleFromEmployee, deleteEmployee } from \"../api/employee\";\r\n\r\nimport Confirm from \"../features/Modals/Confirm\";\r\nimport { AddEmployeeModal } from \"../features/Modals/EmployeeModal\";\r\nimport { AddRoleModal } from \"../features/Modals/RoleModals\";\r\nimport RoleManagement from \"../features/Modals/RoleManagement\";\r\n\r\nimport { BasePaper } from \"../app/Paper\";\r\nimport Snack from \"../app/Snack\";\r\n\r\nexport default function Roles() {\r\n    const [addEmpModal, setAddEmpModal] = useState(false);\r\n    const [addRoleModal, setAddRoleModal] = useState(false);\r\n    const [confirm, setConfirm] = useState(false);\r\n    const [roleManagement, setRoleManagement] = useState(false);\r\n\r\n    const [snack, setSnack] = useState(false);\r\n    const [msg, setMsg] = useState(\"\");\r\n\r\n    const [selectedEmp, setSelectedEmp] = useState<IEmployee>();\r\n    const [empsAndRoles, setEmpsAndRoles] = useState<any>([]);\r\n    const [roles, setRoles] = useState([]);\r\n\r\n    const refreshEmpsRoles = async () => {\r\n        try {\r\n            const resp = await getEmployeesRoles();\r\n            setEmpsAndRoles(resp);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const refreshRoles = async () => {\r\n        try {\r\n            const resp = await getRoles();\r\n            setRoles(resp);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshRoles();\r\n        refreshEmpsRoles();\r\n    }, [addRoleModal]);\r\n\r\n    const toggleRole = async (id: string, role: string, v: boolean) => {\r\n        try {\r\n            if (v) {\r\n                await addRoleToEmployee(id, role);\r\n                setMsg(\"Role added !\");\r\n                setSnack(true);\r\n                refreshEmpsRoles();\r\n            } else {\r\n                const userIndex = empsAndRoles.findIndex((item: any) => item.id === id);\r\n\r\n                if (empsAndRoles[userIndex].Roles.length > 1) {\r\n                    await deleteRoleFromEmployee(id, role);\r\n                    setMsg(\"Role Removed !\");\r\n                    setSnack(true);\r\n                    refreshEmpsRoles();\r\n                } else {\r\n                    setMsg(\"Sorry, You can't have employee with no role\");\r\n                    setSnack(true);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async () => {\r\n        try {\r\n            if (selectedEmp && selectedEmp?.id) {\r\n                await deleteEmployee(selectedEmp?.id);\r\n                setConfirm(false);\r\n                refreshEmpsRoles();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Confirm open={confirm} onClose={() => setConfirm(false)} onConfirm={handleDelete} />\r\n            <AddEmployeeModal open={addEmpModal} onClose={() => setAddEmpModal(false)} onDone={refreshEmpsRoles} />\r\n            <AddRoleModal open={addRoleModal} onClose={() => setAddRoleModal(false)} />\r\n            <RoleManagement open={roleManagement} onClose={() => setRoleManagement(false)} />\r\n\r\n            <Snack open={snack} onClose={() => setSnack(false)}>\r\n                {msg}\r\n            </Snack>\r\n\r\n            <Box>\r\n                <Box display=\"flex\" my={2}>\r\n                    <Button onClick={() => setAddEmpModal(true)}>Add Employee</Button>\r\n                    <Button onClick={() => setAddRoleModal(true)}>Add Role</Button>\r\n                    <Button onClick={() => setRoleManagement(true)}>Manage Roles</Button>\r\n                </Box>\r\n                <BasePaper>\r\n                    <List>\r\n                        {empsAndRoles &&\r\n                            empsAndRoles.map((emp: any) => (\r\n                                <ListItem key={emp.id}>\r\n                                    <IconButton\r\n                                        onClick={() => {\r\n                                            setSelectedEmp(emp);\r\n                                            setConfirm(true);\r\n                                        }}\r\n                                        style={{ color: \"red\" }}\r\n                                    >\r\n                                        <DeleteRounded />\r\n                                    </IconButton>\r\n                                    <Typography>{emp.username}</Typography>\r\n                                    <Box display=\"flex\" alignItems=\"center\" justifyContent=\"flex-end\" flex={1}>\r\n                                        {roles &&\r\n                                            roles.map((role: any) => (\r\n                                                <FormControlLabel\r\n                                                    onChange={(e: any) => toggleRole(emp.id, role.id, e.target.checked)}\r\n                                                    key={role.id}\r\n                                                    label={role.name}\r\n                                                    control={\r\n                                                        <Checkbox\r\n                                                            checked={Boolean(\r\n                                                                emp?.Roles?.find((r: any) => parseInt(r.id) === role.id)\r\n                                                            )}\r\n                                                        />\r\n                                                    }\r\n                                                />\r\n                                            ))}\r\n                                    </Box>\r\n                                </ListItem>\r\n                            ))}\r\n                    </List>\r\n                </BasePaper>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Button, ButtonProps, makeStyles } from \"@material-ui/core\";\r\nimport { AddRounded, EditRounded, DeleteRounded } from \"@material-ui/icons\";\r\n\r\nimport { Gradients } from \"../theme\";\r\n\r\ninterface IButton extends ButtonProps {\r\n    kind?: \"add\" | \"edit\" | \"delete\";\r\n}\r\nexport default function MyButton({ kind, ...props }: IButton) {\r\n    const useStyles = makeStyles({\r\n        btnStyle: {\r\n            background: kind\r\n                ? kind === \"add\"\r\n                    ? Gradients.success\r\n                    : kind === \"edit\"\r\n                    ? Gradients.warning\r\n                    : Gradients.error\r\n                : \"default\",\r\n            borderRadius: \"0.5em\",\r\n            boxShadow: \"none\",\r\n            paddingRight: \"25px\",\r\n            paddingLeft: \"25px\",\r\n        },\r\n    });\r\n    let icons = {\r\n        add: <AddRounded />,\r\n        edit: <EditRounded />,\r\n        delete: <DeleteRounded />,\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Button\r\n            className={classes.btnStyle}\r\n            startIcon={kind ? icons[kind] : props.startIcon}\r\n            variant={kind ? \"contained\" : props.variant}\r\n            color={kind ? \"primary\" : props.color}\r\n            {...props}\r\n        >\r\n            {props.children}\r\n        </Button>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MenuItem, StandardTextFieldProps } from \"@material-ui/core\";\r\nimport TextField from \"../TextField\";\r\n\r\n// import styles from \"./inputs.module.css\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { CSSProperties } from \"@material-ui/styles\";\r\n\r\ninterface IMFS {\r\n    request: () => Promise<any>;\r\n    limit?: number;\r\n    label?: string;\r\n    getOptionLabel: (option: any) => string;\r\n    getOptionValue: (option: any) => string;\r\n    onChange?: (e: React.ChangeEvent<{}>, newValue: any) => void;\r\n    onBlur?: React.FocusEventHandler<HTMLDivElement>;\r\n    error?: boolean;\r\n    placeholder?: string;\r\n    style?: CSSProperties;\r\n    value?: any;\r\n}\r\nexport const MaterialFieldSelect = ({\r\n    request,\r\n    limit,\r\n    getOptionLabel,\r\n    getOptionValue,\r\n    onChange,\r\n    value,\r\n    ...props\r\n}: IMFS) => {\r\n    const [options, setOptions] = useState([]);\r\n    const [findValue, setFindValue] = useState<any>();\r\n\r\n    useEffect(() => {\r\n        const t = options.find((o) => getOptionValue(o) === value);\r\n        setFindValue(t);\r\n    }, [value, options, getOptionValue]);\r\n\r\n    useEffect(() => {\r\n        request()\r\n            .then((data) => {\r\n                if (limit && limit > 0) {\r\n                    setOptions(data.slice(0, limit));\r\n                } else {\r\n                    setOptions(data);\r\n                }\r\n            })\r\n            .catch((e) => console.log(e));\r\n    }, [limit, request]);\r\n\r\n    return (\r\n        <Autocomplete\r\n            style={props.style as any}\r\n            getOptionLabel={getOptionLabel}\r\n            options={options}\r\n            onChange={onChange}\r\n            onBlur={props.onBlur}\r\n            value={findValue}\r\n            renderInput={(params) => (\r\n                <TextField {...params} label={props?.label} error={props.error} placeholder={props.placeholder} />\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\ninterface IOS extends StandardTextFieldProps {\r\n    items: any[];\r\n    itemValueField: string;\r\n    itemTitleField: string;\r\n    keyField?: string;\r\n    inputStyle?: any;\r\n}\r\nexport const ObjectSelect = ({ inputStyle, items, itemTitleField, itemValueField, keyField, ...props }: IOS) => {\r\n    return (\r\n        <TextField {...props} select>\r\n            <MenuItem value={undefined}>None</MenuItem>\r\n            {items &&\r\n                items.length >= 0 &&\r\n                items.map((item: any, i) => (\r\n                    <MenuItem key={keyField ? item[keyField] : i} value={item[itemValueField]}>\r\n                        {item[itemTitleField]}\r\n                    </MenuItem>\r\n                ))}\r\n        </TextField>\r\n    );\r\n};\r\n\r\ninterface IFieldSelect extends StandardTextFieldProps {\r\n    request: () => Promise<any>;\r\n    getOptionList?: (data: any) => any;\r\n    itemValueField: string;\r\n    itemTitleField: string;\r\n    limit?: number;\r\n    keyField?: string;\r\n}\r\nexport const FieldSelect = ({\r\n    keyField,\r\n    request,\r\n    itemValueField,\r\n    itemTitleField,\r\n    limit,\r\n    getOptionList,\r\n    ...props\r\n}: IFieldSelect) => {\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        request()\r\n            .then((data) => {\r\n                if (limit && limit > 0) {\r\n                    let options = getOptionList ? getOptionList(data) : data.slice(0, limit);\r\n                    setItems(options);\r\n                } else {\r\n                    let options = getOptionList ? getOptionList(data) : data;\r\n                    setItems(options);\r\n                }\r\n            })\r\n            .catch((e) => console.log(e));\r\n    }, [getOptionList, limit, request]);\r\n\r\n    return <ObjectSelect {...props} itemTitleField={itemTitleField} itemValueField={itemValueField} items={items} />;\r\n};\r\n\r\ninterface IArraySelect extends StandardTextFieldProps {\r\n    items?: any[];\r\n}\r\nexport const ArraySelect = ({ items, ...props }: IArraySelect) => {\r\n    return (\r\n        <ObjectSelect\r\n            itemTitleField=\"item\"\r\n            itemValueField=\"item\"\r\n            items={items ? items.map((item) => ({ item: item })) : []}\r\n            {...props}\r\n        />\r\n    );\r\n};\r\n\r\nexport const BaseSelect = (props: StandardTextFieldProps) => {\r\n    return (\r\n        <TextField {...props} select>\r\n            {props.children}\r\n        </TextField>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Paper, withStyles, PaperProps } from \"@material-ui/core\";\r\n\r\nexport const BasePaper = withStyles((theme) => ({\r\n    root: {\r\n        borderRadius: 20,\r\n        padding: \"1em\",\r\n        boxShadow: \"rgba(0, 0, 0, 0.08) 0px 4px 12px\",\r\n    },\r\n}))((props: PaperProps) => <Paper {...props} />);\r\n\r\nexport const IconPaper = withStyles((theme) => ({\r\n    root: {\r\n        borderRadius: 10,\r\n        padding: theme.spacing(4),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        color: \"#fff\",\r\n    },\r\n}))((props: PaperProps) => <Paper {...props} elevation={5} />);\r\n","import React, { ReactNode } from \"react\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nexport default function Snack({\r\n    open,\r\n    onClose,\r\n    severity,\r\n    children,\r\n}: {\r\n    open: boolean;\r\n    onClose: () => void;\r\n    severity?: \"success\" | \"info\" | \"warning\" | \"error\";\r\n    children: ReactNode;\r\n}) {\r\n    return (\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={onClose}>\r\n            <Alert onClose={onClose} severity={severity}>\r\n                {children}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Box, Accordion, AccordionSummary, AccordionDetails, MenuItem } from \"@material-ui/core\";\r\nimport { ExpandMoreRounded } from \"@material-ui/icons\";\r\n\r\nimport Snackbar from \"./Snack\";\r\nimport TextField from \"./TextField\";\r\nimport Button from \"./Button\";\r\nimport { BaseSelect } from \"./Inputs\";\r\n\r\nexport const GeneralForm = ({\r\n    type,\r\n    getRecord,\r\n    addRecord,\r\n    updateRecord,\r\n    deleteRecord,\r\n    onDone,\r\n}: {\r\n    type: string;\r\n    addRecord: (v: string) => Promise<any>;\r\n    getRecord: () => Promise<any>;\r\n    updateRecord: (id: string, v: string) => Promise<any>;\r\n    deleteRecord: (id: string) => Promise<any>;\r\n    onDone?: () => void;\r\n}) => {\r\n    const [data, setData] = useState([]);\r\n    const [dis, setDis] = useState(false);\r\n    const [showSnack, setShowSnack] = useState(false);\r\n    const [snackMsg, setSnackMsg] = useState(\"\");\r\n\r\n    const [addName, setAddName] = useState(\"\");\r\n    const [editName, setEditName] = useState(\"\");\r\n    const [selectedData, setSelectedData] = useState<string>();\r\n\r\n    const showMsg = (d: any) => {\r\n        setShowSnack(true);\r\n        if (d.error) {\r\n            setSnackMsg(d.error);\r\n        } else {\r\n            setSnackMsg(\"Request Successful...\");\r\n        }\r\n    };\r\n\r\n    const refreshData = async () => {\r\n        try {\r\n            const data = await getRecord();\r\n            setData(data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshData();\r\n    }, []);\r\n\r\n    const handleAdd = async () => {\r\n        setDis(true);\r\n        try {\r\n            if (addName) {\r\n                const resp = await addRecord(addName);\r\n                resp && setDis(false);\r\n                refreshData();\r\n                showMsg(resp);\r\n                onDone && onDone();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    const handleEdit = async () => {\r\n        setDis(true);\r\n        try {\r\n            if (selectedData && editName) {\r\n                const resp = await updateRecord(selectedData, editName);\r\n                resp && setDis(false);\r\n                refreshData();\r\n                showMsg(resp);\r\n                onDone && onDone();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    const handleDelete = async () => {\r\n        setDis(true);\r\n        try {\r\n            if (selectedData) {\r\n                const resp = await deleteRecord(selectedData);\r\n                resp && setDis(false);\r\n                refreshData();\r\n                showMsg(resp);\r\n                onDone && onDone();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Snackbar onClose={() => setShowSnack(false)} open={showSnack}>\r\n                {snackMsg}\r\n            </Snackbar>\r\n\r\n            <Box m={2} p={2}>\r\n                <Accordion>\r\n                    <AccordionSummary expandIcon={<ExpandMoreRounded />}>Add</AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <form\r\n                            onSubmit={(e: any) => {\r\n                                e.preventDefault();\r\n                                handleAdd();\r\n                            }}\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            <Box width=\"100%\" display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-end\">\r\n                                <TextField\r\n                                    fullWidth\r\n                                    value={addName}\r\n                                    onChange={(e) => setAddName(e.target.value)}\r\n                                    placeholder={`${type} name`}\r\n                                    style={{ marginRight: \"8px\", flex: 1 }}\r\n                                />\r\n                                <Button type=\"submit\" kind=\"add\" disabled={dis} style={{ marginBottom: \"8px\" }}>\r\n                                    Add\r\n                                </Button>\r\n                            </Box>\r\n                        </form>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion defaultExpanded>\r\n                    <AccordionSummary expandIcon={<ExpandMoreRounded />}>Edit</AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <form\r\n                            onSubmit={(e: any) => {\r\n                                e.preventDefault();\r\n                                handleEdit();\r\n                            }}\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            <Box width=\"100%\" display=\"flex\" alignItems=\"center\">\r\n                                <TextField\r\n                                    fullWidth\r\n                                    label=\"new name\"\r\n                                    value={editName}\r\n                                    onChange={(e) => setEditName(e.target.value)}\r\n                                    style={{ flex: 1, margin: \"0px 0px 5px 0px\" }}\r\n                                    placeholder={`New ${type} name`}\r\n                                />\r\n                            </Box>\r\n\r\n                            <Box width=\"100%\" display=\"flex\" alignItems=\"center\">\r\n                                <BaseSelect fullWidth value={selectedData} onChange={(e: any) => setSelectedData(e.target.value)}>\r\n                                    {data.map((cat: { id: string; name: string }) => (\r\n                                        <MenuItem key={cat.id} value={cat.id}>\r\n                                            {cat.name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </BaseSelect>\r\n\r\n                                <Button type=\"submit\" disabled={dis} kind=\"edit\" style={{ margin: \"0 0.5em\" }}>\r\n                                    Save\r\n                                </Button>\r\n                            </Box>\r\n                        </form>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n                <Accordion>\r\n                    <AccordionSummary expandIcon={<ExpandMoreRounded />}>Delete</AccordionSummary>\r\n                    <AccordionDetails>\r\n                        <form\r\n                            onSubmit={(e: any) => {\r\n                                e.preventDefault();\r\n                                handleDelete();\r\n                            }}\r\n                            style={{ width: \"100%\" }}\r\n                        >\r\n                            <Box width=\"100%\" display=\"flex\" alignItems=\"center\">\r\n                                <BaseSelect value={selectedData} onChange={(e: any) => setSelectedData(e.target.value)} fullWidth>\r\n                                    {data.map((cat: { id: string; name: string }) => (\r\n                                        <MenuItem key={cat.id} value={cat.id}>\r\n                                            {cat.name}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </BaseSelect>\r\n                                <Button type=\"submit\" disabled={dis} kind=\"delete\" style={{ margin: \"0 0.5em\" }}>\r\n                                    Delete\r\n                                </Button>\r\n                            </Box>\r\n                        </form>\r\n                    </AccordionDetails>\r\n                </Accordion>\r\n            </Box>\r\n        </>\r\n    );\r\n};\r\n"],"sourceRoot":""}