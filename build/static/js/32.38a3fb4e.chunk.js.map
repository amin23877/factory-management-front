{"version":3,"sources":["features/FieldService/FRU/index.tsx","app/BaseDataGrid.tsx","app/Paper.tsx","logic/date.ts"],"names":["FRU","useState","activeTab","setActiveTab","selectedFru","setSelectedFru","FRUs","useSwr","data","callCols","field","headerName","width","valueFormatter","r","row","ItemId","no","name","flex","description","formatTimestampToDate","lead","LineItemRecordId","price","value","textColor","onChange","e","nv","style","marginBottom","label","disabled","rows","result","cols","onRowSelected","d","useDataGridStyles","makeStyles","root","backgroundColor","border","color","display","height","opacity","boxShadow","fill","BaseDataGrid","classes","flexGrow","density","components","Toolbar","GridToolbar","className","columns","ScrollDataGrid","BasePaper","withStyles","theme","borderRadius","padding","props","IconPaper","spacing","flexDirection","justifyContent","alignItems","elevation","timestamp","format"],"mappings":"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","file":"static/js/32.38a3fb4e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { GridColDef } from \"@material-ui/data-grid\";\r\nimport { Box, Tabs, Tab } from \"@material-ui/core\";\r\nimport useSwr from \"swr\";\r\n\r\nimport BaseDataGrid from \"../../../app/BaseDataGrid\";\r\nimport { BasePaper } from \"../../../app/Paper\";\r\n\r\n// import Details from \"./Details\";\r\n\r\nimport { formatTimestampToDate } from \"../../../logic/date\";\r\n\r\nexport default function FRU() {\r\n    const [activeTab, setActiveTab] = useState(0);\r\n    const [selectedFru, setSelectedFru] = useState<any>();\r\n\r\n    const { data: FRUs } = useSwr(\"/unit?fru=true\");\r\n\r\n    const callCols: GridColDef[] = [\r\n        {\r\n            field: \"number\",\r\n            headerName: \"FRU Number\",\r\n            width: 150,\r\n            valueFormatter: (r) => r.row?.ItemId?.no,\r\n        },\r\n        { field: \"name\", headerName: \"FRU Name\", width: 200, valueFormatter: (r) => r.row?.ItemId?.name },\r\n        {\r\n            field: \"description\",\r\n            headerName: \"FRU Description\",\r\n            flex: 1,\r\n            valueFormatter: (r) => r.row?.ItemId?.description,\r\n        },\r\n        {\r\n            field: \"Lead Time\",\r\n            valueFormatter: (r) => formatTimestampToDate(r.row?.ItemId?.lead),\r\n            width: 120,\r\n        },\r\n\r\n        { field: \"price\", headerName: \"Price\", width: 110, valueFormatter: (r) => r.row?.LineItemRecordId?.price },\r\n    ];\r\n\r\n    return (\r\n        <Box>\r\n            {/* <Box mb={2} display=\"flex\" alignItems=\"center\">\r\n                <Button\r\n                    onClick={() => setAddCall(true)}\r\n                    style={{\r\n                        backgroundColor: \"#1a73e8\",\r\n                        color: \"#fff\",\r\n                        margin: \"0 0.5em\",\r\n                        padding: \" 6px 15px\",\r\n                        boxShadow: \"rgba(99, 99, 99, 0.2) 0px 2px 8px 0px\",\r\n                    }}\r\n                >\r\n                    <AddRoundedIcon />\r\n                    Add Ticket\r\n                </Button>\r\n                <Button\r\n                    kind=\"delete\"\r\n                    disabled={!selectedFru}\r\n                    onClick={() => setConfirm(true)}\r\n                    style={{ margin: \"0 0.5em\" }}\r\n                >\r\n                    Delete Ticket\r\n                </Button>\r\n                <Button kind=\"add\" onClick={() => setCTagModal(true)} style={{ margin: \"0 0.5em\" }}>\r\n                    Add Call Tags\r\n                </Button>\r\n            </Box> */}\r\n            <BasePaper>\r\n                <Tabs\r\n                    value={activeTab}\r\n                    textColor=\"primary\"\r\n                    onChange={(e, nv) => setActiveTab(nv)}\r\n                    style={{ marginBottom: 10 }}\r\n                >\r\n                    <Tab label=\"List\" />\r\n                    <Tab label=\"Details\" disabled={!selectedFru} />\r\n                </Tabs>\r\n                {activeTab === 0 && FRUs && (\r\n                    <BaseDataGrid\r\n                        rows={FRUs.result || []}\r\n                        cols={callCols}\r\n                        onRowSelected={(d) => {\r\n                            setSelectedFru(d);\r\n                            setActiveTab(1);\r\n                        }}\r\n                    />\r\n                )}\r\n                {/* {activeTab === 1 && selectedFru && <Details FRUsData={selectedFru} />} */}\r\n            </BasePaper>\r\n        </Box>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { DataGrid, GridToolbar } from \"@material-ui/data-grid\";\r\n\r\nexport const useDataGridStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: \"#f9f9f9\",\r\n        border: \"none\",\r\n\r\n        \"& .MuiDataGrid-columnsContainer\": {\r\n            backgroundColor: \"#202731\",\r\n            color: \"#fff\",\r\n            // borderRadius: \" 10px 10px 0 0\",\r\n        },\r\n        \"& .MuiDataGrid-iconSeparator\": {\r\n            display: \"none\",\r\n            width: 0,\r\n            height: 0,\r\n            opacity: 0,\r\n        },\r\n        \"& .Mui-selected\": {\r\n            boxShadow: \" rgba(149, 157, 165, 0.2) 0px 8px 24px\",\r\n            backgroundColor: \"#fff !important\",\r\n        },\r\n        \"& .MuiDataGrid-sortIcon\": {\r\n            fill: \"white\",\r\n        },\r\n    },\r\n});\r\n\r\ninterface IBaseDataGrid {\r\n    onRowSelected?: (row: any) => void;\r\n    rows: any[];\r\n    cols: any[];\r\n    height?: number;\r\n}\r\n\r\nexport default function BaseDataGrid({ onRowSelected, rows, cols, height }: IBaseDataGrid) {\r\n    const classes = useDataGridStyles();\r\n\r\n    // const updatedCols = cols.map((x) => {\r\n    //     let obj = Object.keys(x);\r\n    //     let check = false;\r\n    //     for (let o in obj) {\r\n    //         if (o == \"flex\") {\r\n    //             check = true;\r\n    //         }\r\n    //     }\r\n    //     if (!check) {\r\n    //         x = { ...x, flex: 1 };\r\n    //     }\r\n    //     return x;\r\n    // });\r\n\r\n    return (\r\n        // <Box display=\"flex\" boxShadow=\"rgba(0, 0, 0, 0.08) 0px 4px 12px\" border=\"none\" height=\"100%\">\r\n        <div\r\n            style={{\r\n                flexGrow: 1,\r\n                height: height || 450,\r\n            }}\r\n        >\r\n            <DataGrid\r\n                density=\"compact\"\r\n                components={{ Toolbar: GridToolbar }}\r\n                className={classes.root}\r\n                onRowSelected={(r) => {\r\n                    onRowSelected && onRowSelected(r.data);\r\n                }}\r\n                columns={cols}\r\n                rows={rows}\r\n            />\r\n        </div>\r\n        // </Box>\r\n    );\r\n}\r\n\r\nexport const ScrollDataGrid = ({ onRowSelected, rows, cols, height }: IBaseDataGrid) => {\r\n    const classes = useDataGridStyles();\r\n\r\n    return (\r\n        // <div\r\n        //     style={{\r\n        //         height: height || 450,\r\n        //     }}\r\n        // >\r\n        <DataGrid\r\n            density=\"compact\"\r\n            components={{ Toolbar: GridToolbar }}\r\n            className={classes.root}\r\n            onRowSelected={(r) => {\r\n                onRowSelected && onRowSelected(r.data);\r\n            }}\r\n            columns={cols}\r\n            rows={rows}\r\n        />\r\n        // </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Paper, withStyles, PaperProps } from \"@material-ui/core\";\r\n\r\nexport const BasePaper = withStyles((theme) => ({\r\n    root: {\r\n        borderRadius: 20,\r\n        padding: \"1em\",\r\n        boxShadow: \"rgba(0, 0, 0, 0.08) 0px 4px 12px\",\r\n    },\r\n}))((props: PaperProps) => <Paper {...props} />);\r\n\r\nexport const IconPaper = withStyles((theme) => ({\r\n    root: {\r\n        borderRadius: 10,\r\n        padding: theme.spacing(4),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        color: \"#fff\",\r\n    },\r\n}))((props: PaperProps) => <Paper {...props} elevation={5} />);\r\n","import { format } from \"date-fns\";\r\n\r\nexport const formatTimestampToDate = (timestamp: number) => {\r\n    return timestamp ? format(timestamp, \"MM/dd/yyyy\") : \"\";\r\n};\r\n"],"sourceRoot":""}